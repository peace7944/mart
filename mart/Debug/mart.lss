
mart.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c4  00800100  000011bc  00001250  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011bc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000024  008001c4  008001c4  00001314  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001314  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001370  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  000013ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001612  00000000  00000000  00001424  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000972  00000000  00000000  00002a36  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a51  00000000  00000000  000033a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000124  00000000  00000000  00003dfc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005dc  00000000  00000000  00003f20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d52  00000000  00000000  000044fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  0000524e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c0       	rjmp	.+146    	; 0xc8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	52 c1       	rjmp	.+676    	; 0x2e6 <__vector_16>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	ec eb       	ldi	r30, 0xBC	; 188
      a0:	f1 e1       	ldi	r31, 0x11	; 17
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a4 3c       	cpi	r26, 0xC4	; 196
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	21 e0       	ldi	r18, 0x01	; 1
      b4:	a4 ec       	ldi	r26, 0xC4	; 196
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a8 3e       	cpi	r26, 0xE8	; 232
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	39 d3       	rcall	.+1650   	; 0x736 <main>
      c4:	0c 94 dc 08 	jmp	0x11b8	; 0x11b8 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <_Z10init_PORTCv>:
#define ENABLE  (PORTC |= 0x04)
#define DISABLE (PORTC &= 0xFB)

void init_PORTC(void)
{
  DDRC = 0xff;
      ca:	8f ef       	ldi	r24, 0xFF	; 255
      cc:	84 bb       	out	0x14, r24	; 20
  PORTC = 0xff;
      ce:	85 bb       	out	0x15, r24	; 21
      d0:	08 95       	ret

000000d2 <_Z14instrction_outh>:
}
 
void instrction_out(unsigned char b)
{
	PORTC = b&0xF0;
      d2:	98 2f       	mov	r25, r24
      d4:	90 7f       	andi	r25, 0xF0	; 240
      d6:	95 bb       	out	0x15, r25	; 21
	ENABLE;
      d8:	aa 9a       	sbi	0x15, 2	; 21
	DISABLE;
      da:	aa 98       	cbi	0x15, 2	; 21
	PORTC=((b<<4)&0xF0);
      dc:	20 e1       	ldi	r18, 0x10	; 16
      de:	82 9f       	mul	r24, r18
      e0:	c0 01       	movw	r24, r0
      e2:	11 24       	eor	r1, r1
      e4:	85 bb       	out	0x15, r24	; 21
	ENABLE;
      e6:	aa 9a       	sbi	0x15, 2	; 21
	DISABLE;
      e8:	aa 98       	cbi	0x15, 2	; 21
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
      ea:	80 e4       	ldi	r24, 0x40	; 64
      ec:	9f e1       	ldi	r25, 0x1F	; 31
      ee:	01 97       	sbiw	r24, 0x01	; 1
      f0:	f1 f7       	brne	.-4      	; 0xee <_Z14instrction_outh+0x1c>
      f2:	08 95       	ret

000000f4 <_Z8char_outh>:
	_delay_ms(2);
}
void char_out(unsigned char b)
{
	PORTC=(b&0xF0)|0x01;
      f4:	98 2f       	mov	r25, r24
      f6:	90 7f       	andi	r25, 0xF0	; 240
      f8:	91 60       	ori	r25, 0x01	; 1
      fa:	95 bb       	out	0x15, r25	; 21
	ENABLE;
      fc:	aa 9a       	sbi	0x15, 2	; 21
	DISABLE;
      fe:	aa 98       	cbi	0x15, 2	; 21
	PORTC=((b<<4)&0xF0)|0x01;
     100:	20 e1       	ldi	r18, 0x10	; 16
     102:	82 9f       	mul	r24, r18
     104:	c0 01       	movw	r24, r0
     106:	11 24       	eor	r1, r1
     108:	81 60       	ori	r24, 0x01	; 1
     10a:	85 bb       	out	0x15, r24	; 21
	ENABLE;
     10c:	aa 9a       	sbi	0x15, 2	; 21
	DISABLE;
     10e:	aa 98       	cbi	0x15, 2	; 21
     110:	80 e4       	ldi	r24, 0x40	; 64
     112:	9f e1       	ldi	r25, 0x1F	; 31
     114:	01 97       	sbiw	r24, 0x01	; 1
     116:	f1 f7       	brne	.-4      	; 0x114 <_Z8char_outh+0x20>
     118:	08 95       	ret

0000011a <_Z10lcd_gotoxyhh>:
}
void lcd_gotoxy(unsigned char x, unsigned char y)
{
	// 16 * 2 Character LCD  
	//  Busy();
	switch(y)
     11a:	66 23       	and	r22, r22
     11c:	19 f0       	breq	.+6      	; 0x124 <_Z10lcd_gotoxyhh+0xa>
     11e:	61 30       	cpi	r22, 0x01	; 1
     120:	21 f0       	breq	.+8      	; 0x12a <_Z10lcd_gotoxyhh+0x10>
     122:	08 95       	ret
	{
	    case 0 : instrction_out(0x80+x); break;
     124:	80 58       	subi	r24, 0x80	; 128
     126:	d5 cf       	rjmp	.-86     	; 0xd2 <_Z14instrction_outh>
     128:	08 95       	ret
	    case 1 : instrction_out(0xC0+x); break;
     12a:	80 54       	subi	r24, 0x40	; 64
     12c:	d2 cf       	rjmp	.-92     	; 0xd2 <_Z14instrction_outh>
     12e:	08 95       	ret

00000130 <_Z9lcd_putsfhhPh>:
	}
}
void lcd_putsf(unsigned char x, unsigned char y, unsigned char *str)
{
     130:	0f 93       	push	r16
     132:	1f 93       	push	r17
     134:	cf 93       	push	r28
     136:	df 93       	push	r29
     138:	04 2f       	mov	r16, r20
     13a:	15 2f       	mov	r17, r21
	unsigned int i=0;
	lcd_gotoxy(x,y);
     13c:	ee df       	rcall	.-36     	; 0x11a <_Z10lcd_gotoxyhh>
     13e:	c0 2f       	mov	r28, r16
     140:	d1 2f       	mov	r29, r17
	do
	{
		char_out(str[i]);
     142:	89 91       	ld	r24, Y+
     144:	d7 df       	rcall	.-82     	; 0xf4 <_Z8char_outh>
}
void lcd_putsf(unsigned char x, unsigned char y, unsigned char *str)
{
	unsigned int i=0;
	lcd_gotoxy(x,y);
	do
     146:	88 81       	ld	r24, Y
     148:	81 11       	cpse	r24, r1
     14a:	fb cf       	rjmp	.-10     	; 0x142 <_Z9lcd_putsfhhPh+0x12>
	{
		char_out(str[i]);
	}
	while(str[++i]!='\0');
}
     14c:	df 91       	pop	r29
     14e:	cf 91       	pop	r28
     150:	1f 91       	pop	r17
     152:	0f 91       	pop	r16
     154:	08 95       	ret

00000156 <_Z8lcd_initv>:
void lcd_init(void)
{
	init_PORTC();
     156:	b9 df       	rcall	.-142    	; 0xca <_Z10init_PORTCv>
     158:	80 ed       	ldi	r24, 0xD0	; 208
     15a:	97 e0       	ldi	r25, 0x07	; 7
     15c:	20 e9       	ldi	r18, 0x90	; 144
     15e:	31 e0       	ldi	r19, 0x01	; 1
     160:	f9 01       	movw	r30, r18
     162:	31 97       	sbiw	r30, 0x01	; 1
     164:	f1 f7       	brne	.-4      	; 0x162 <_Z8lcd_initv+0xc>
     166:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     168:	d9 f7       	brne	.-10     	; 0x160 <_Z8lcd_initv+0xa>
     16a:	80 e6       	ldi	r24, 0x60	; 96
     16c:	99 e0       	ldi	r25, 0x09	; 9
     16e:	01 97       	sbiw	r24, 0x01	; 1
     170:	f1 f7       	brne	.-4      	; 0x16e <_Z8lcd_initv+0x18>
	_delay_ms(200);
	_delay_us(600);
	instrction_out(0x28);
     172:	88 e2       	ldi	r24, 0x28	; 40
     174:	ae df       	rcall	.-164    	; 0xd2 <_Z14instrction_outh>
     176:	80 ed       	ldi	r24, 0xD0	; 208
     178:	97 e0       	ldi	r25, 0x07	; 7
     17a:	20 e9       	ldi	r18, 0x90	; 144
     17c:	31 e0       	ldi	r19, 0x01	; 1
     17e:	f9 01       	movw	r30, r18
     180:	31 97       	sbiw	r30, 0x01	; 1
     182:	f1 f7       	brne	.-4      	; 0x180 <_Z8lcd_initv+0x2a>
     184:	01 97       	sbiw	r24, 0x01	; 1
	_delay_ms(200);
	instrction_out(0x28);
     186:	d9 f7       	brne	.-10     	; 0x17e <_Z8lcd_initv+0x28>
     188:	88 e2       	ldi	r24, 0x28	; 40
     18a:	a3 df       	rcall	.-186    	; 0xd2 <_Z14instrction_outh>
     18c:	80 ed       	ldi	r24, 0xD0	; 208
     18e:	97 e0       	ldi	r25, 0x07	; 7
     190:	20 e9       	ldi	r18, 0x90	; 144
     192:	31 e0       	ldi	r19, 0x01	; 1
     194:	f9 01       	movw	r30, r18
     196:	31 97       	sbiw	r30, 0x01	; 1
     198:	f1 f7       	brne	.-4      	; 0x196 <_Z8lcd_initv+0x40>
     19a:	01 97       	sbiw	r24, 0x01	; 1
	_delay_ms(200);
	instrction_out(0x0C);
     19c:	d9 f7       	brne	.-10     	; 0x194 <_Z8lcd_initv+0x3e>
     19e:	8c e0       	ldi	r24, 0x0C	; 12
	instrction_out(0x06);
     1a0:	98 df       	rcall	.-208    	; 0xd2 <_Z14instrction_outh>
     1a2:	86 e0       	ldi	r24, 0x06	; 6
	instrction_out(0x02);
     1a4:	96 df       	rcall	.-212    	; 0xd2 <_Z14instrction_outh>
     1a6:	82 e0       	ldi	r24, 0x02	; 2
	instrction_out(0x01);
     1a8:	94 df       	rcall	.-216    	; 0xd2 <_Z14instrction_outh>
     1aa:	81 e0       	ldi	r24, 0x01	; 1
     1ac:	92 df       	rcall	.-220    	; 0xd2 <_Z14instrction_outh>
	instrction_out(0x01);
     1ae:	81 e0       	ldi	r24, 0x01	; 1
     1b0:	90 cf       	rjmp	.-224    	; 0xd2 <_Z14instrction_outh>
     1b2:	08 95       	ret

000001b4 <_Z9lcd_clearv>:
     1b4:	81 e0       	ldi	r24, 0x01	; 1
}
void lcd_clear(void)
{
	instrction_out(0x01);
     1b6:	8d df       	rcall	.-230    	; 0xd2 <_Z14instrction_outh>
     1b8:	80 e4       	ldi	r24, 0x40	; 64
     1ba:	9c e9       	ldi	r25, 0x9C	; 156
     1bc:	01 97       	sbiw	r24, 0x01	; 1
     1be:	f1 f7       	brne	.-4      	; 0x1bc <_Z9lcd_clearv+0x8>
     1c0:	08 95       	ret

000001c2 <_Z9my_getkeyv>:
unsigned int prekey = 0, msec = 0;

unsigned int my_getkey(){  // flag 처리
	unsigned int key = 0, result = 0;
	for(int i=0;i<4;i++){
		PORTD = ~(0x00 | (1<<i));
     1c2:	8e ef       	ldi	r24, 0xFE	; 254
     1c4:	82 bb       	out	0x12, r24	; 18
	__asm__ volatile (
		"1: dec %0" "\n\t"
		"brne 1b"
		: "=r" (__count)
		: "0" (__count)
	);
     1c6:	8a e1       	ldi	r24, 0x1A	; 26
     1c8:	8a 95       	dec	r24
     1ca:	f1 f7       	brne	.-4      	; 0x1c8 <_Z9my_getkeyv+0x6>
		_delay_us(5);
		
		key = (~PIND & 0xf0);
     1cc:	80 b3       	in	r24, 0x10	; 16
     1ce:	90 e0       	ldi	r25, 0x00	; 0
     1d0:	80 95       	com	r24
     1d2:	90 95       	com	r25
     1d4:	80 7f       	andi	r24, 0xF0	; 240
     1d6:	99 27       	eor	r25, r25
		if(key){
     1d8:	00 97       	sbiw	r24, 0x00	; 0
     1da:	c9 f4       	brne	.+50     	; 0x20e <_Z9my_getkeyv+0x4c>
     1dc:	21 e0       	ldi	r18, 0x01	; 1
     1de:	30 e0       	ldi	r19, 0x00	; 0
unsigned int prekey = 0, msec = 0;

unsigned int my_getkey(){  // flag 처리
	unsigned int key = 0, result = 0;
	for(int i=0;i<4;i++){
		PORTD = ~(0x00 | (1<<i));
     1e0:	61 e0       	ldi	r22, 0x01	; 1
     1e2:	70 e0       	ldi	r23, 0x00	; 0
     1e4:	4a e1       	ldi	r20, 0x1A	; 26
     1e6:	cb 01       	movw	r24, r22
     1e8:	02 2e       	mov	r0, r18
     1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <_Z9my_getkeyv+0x2e>
     1ec:	88 0f       	add	r24, r24
     1ee:	99 1f       	adc	r25, r25
     1f0:	0a 94       	dec	r0
     1f2:	e2 f7       	brpl	.-8      	; 0x1ec <_Z9my_getkeyv+0x2a>
     1f4:	80 95       	com	r24
     1f6:	82 bb       	out	0x12, r24	; 18
     1f8:	84 2f       	mov	r24, r20
     1fa:	8a 95       	dec	r24
     1fc:	f1 f7       	brne	.-4      	; 0x1fa <_Z9my_getkeyv+0x38>
		_delay_us(5);
		
		key = (~PIND & 0xf0);
     1fe:	80 b3       	in	r24, 0x10	; 16
     200:	90 e0       	ldi	r25, 0x00	; 0
     202:	80 95       	com	r24
     204:	90 95       	com	r25
     206:	80 7f       	andi	r24, 0xF0	; 240
     208:	99 27       	eor	r25, r25
		if(key){
     20a:	00 97       	sbiw	r24, 0x00	; 0
     20c:	99 f0       	breq	.+38     	; 0x234 <_Z9my_getkeyv+0x72>
			result = key | (PORTD & 0x0f);
     20e:	22 b3       	in	r18, 0x12	; 18
     210:	2f 70       	andi	r18, 0x0F	; 15
     212:	ac 01       	movw	r20, r24
     214:	42 2b       	or	r20, r18
     216:	9a 01       	movw	r18, r20
			if(result != prekey){
     218:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <prekey>
     21c:	90 91 e7 01 	lds	r25, 0x01E7	; 0x8001e7 <prekey+0x1>
     220:	28 17       	cp	r18, r24
     222:	39 07       	cpc	r19, r25
     224:	99 f0       	breq	.+38     	; 0x24c <_Z9my_getkeyv+0x8a>
				prekey = result;
     226:	30 93 e7 01 	sts	0x01E7, r19	; 0x8001e7 <prekey+0x1>
     22a:	20 93 e6 01 	sts	0x01E6, r18	; 0x8001e6 <prekey>
				return result;
     22e:	82 2f       	mov	r24, r18
     230:	93 2f       	mov	r25, r19
     232:	08 95       	ret

unsigned int prekey = 0, msec = 0;

unsigned int my_getkey(){  // flag 처리
	unsigned int key = 0, result = 0;
	for(int i=0;i<4;i++){
     234:	2f 5f       	subi	r18, 0xFF	; 255
     236:	3f 4f       	sbci	r19, 0xFF	; 255
     238:	24 30       	cpi	r18, 0x04	; 4
     23a:	31 05       	cpc	r19, r1
     23c:	a1 f6       	brne	.-88     	; 0x1e6 <_Z9my_getkeyv+0x24>
				return result;
			}
			else return 0;
		}
	}
	prekey = 0;
     23e:	10 92 e7 01 	sts	0x01E7, r1	; 0x8001e7 <prekey+0x1>
     242:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <prekey>
	return 0;
     246:	80 e0       	ldi	r24, 0x00	; 0
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	08 95       	ret
			result = key | (PORTD & 0x0f);
			if(result != prekey){
				prekey = result;
				return result;
			}
			else return 0;
     24c:	80 e0       	ldi	r24, 0x00	; 0
     24e:	90 e0       	ldi	r25, 0x00	; 0
		}
	}
	prekey = 0;
	return 0;
}
     250:	08 95       	ret

00000252 <_Z10initSystemv>:
	return 0;
}
*/
void initSystem(){
	
	DDRA = 0xff;  // 0,1 = motor, 5,6,7 = LED
     252:	8f ef       	ldi	r24, 0xFF	; 255
     254:	8a bb       	out	0x1a, r24	; 26
	DDRD = 0x0f;  // 0,1,2,3 = Row, 4,5,6,7 = col
     256:	9f e0       	ldi	r25, 0x0F	; 15
     258:	91 bb       	out	0x11, r25	; 17
	DDRF = 0x00;  // photo 0
     25a:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	
	PORTD = 0xff;
     25e:	82 bb       	out	0x12, r24	; 18
	
	lcd_init();
     260:	7a df       	rcall	.-268    	; 0x156 <_Z8lcd_initv>
	lcd_clear();
     262:	a8 df       	rcall	.-176    	; 0x1b4 <_Z9lcd_clearv>
     264:	43 e0       	ldi	r20, 0x03	; 3
	
	lcd_putsf(0,0, (unsigned char*)"    MARKET     ");
     266:	51 e0       	ldi	r21, 0x01	; 1
     268:	60 e0       	ldi	r22, 0x00	; 0
     26a:	80 e0       	ldi	r24, 0x00	; 0
     26c:	61 df       	rcall	.-318    	; 0x130 <_Z9lcd_putsfhhPh>
     26e:	43 e1       	ldi	r20, 0x13	; 19
	lcd_putsf(0,1, (unsigned char*)"    SYSTEM     ");
     270:	51 e0       	ldi	r21, 0x01	; 1
     272:	61 e0       	ldi	r22, 0x01	; 1
     274:	80 e0       	ldi	r24, 0x00	; 0
     276:	5c df       	rcall	.-328    	; 0x130 <_Z9lcd_putsfhhPh>
     278:	1b ba       	out	0x1b, r1	; 27
	PORTA = 0x00;
     27a:	88 e8       	ldi	r24, 0x88	; 136
     27c:	93 e1       	ldi	r25, 0x13	; 19
     27e:	20 e9       	ldi	r18, 0x90	; 144
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     280:	31 e0       	ldi	r19, 0x01	; 1
     282:	f9 01       	movw	r30, r18
     284:	31 97       	sbiw	r30, 0x01	; 1
     286:	f1 f7       	brne	.-4      	; 0x284 <_Z10initSystemv+0x32>
     288:	01 97       	sbiw	r24, 0x01	; 1
     28a:	d9 f7       	brne	.-10     	; 0x282 <_Z10initSystemv+0x30>
	_delay_ms(500);
	
	lcd_clear();
     28c:	93 df       	rcall	.-218    	; 0x1b4 <_Z9lcd_clearv>
     28e:	80 ee       	ldi	r24, 0xE0	; 224
	PORTA = 0b11100000;
     290:	8b bb       	out	0x1b, r24	; 27
     292:	88 e8       	ldi	r24, 0x88	; 136
     294:	93 e1       	ldi	r25, 0x13	; 19
     296:	20 e9       	ldi	r18, 0x90	; 144
     298:	31 e0       	ldi	r19, 0x01	; 1
     29a:	f9 01       	movw	r30, r18
     29c:	31 97       	sbiw	r30, 0x01	; 1
     29e:	f1 f7       	brne	.-4      	; 0x29c <_Z10initSystemv+0x4a>
     2a0:	01 97       	sbiw	r24, 0x01	; 1
     2a2:	d9 f7       	brne	.-10     	; 0x29a <_Z10initSystemv+0x48>
	_delay_ms(500);
	
	lcd_putsf(0,0, (unsigned char*)"    MARKET     ");
     2a4:	43 e0       	ldi	r20, 0x03	; 3
     2a6:	51 e0       	ldi	r21, 0x01	; 1
     2a8:	60 e0       	ldi	r22, 0x00	; 0
     2aa:	80 e0       	ldi	r24, 0x00	; 0
     2ac:	41 df       	rcall	.-382    	; 0x130 <_Z9lcd_putsfhhPh>
	lcd_putsf(0,1, (unsigned char*)"    SYSTEM     ");
     2ae:	43 e1       	ldi	r20, 0x13	; 19
     2b0:	51 e0       	ldi	r21, 0x01	; 1
     2b2:	61 e0       	ldi	r22, 0x01	; 1
     2b4:	80 e0       	ldi	r24, 0x00	; 0
     2b6:	3c df       	rcall	.-392    	; 0x130 <_Z9lcd_putsfhhPh>
     2b8:	1b ba       	out	0x1b, r1	; 27
	PORTA = 0x00;
     2ba:	88 e8       	ldi	r24, 0x88	; 136
     2bc:	93 e1       	ldi	r25, 0x13	; 19
     2be:	20 e9       	ldi	r18, 0x90	; 144
     2c0:	31 e0       	ldi	r19, 0x01	; 1
     2c2:	f9 01       	movw	r30, r18
     2c4:	31 97       	sbiw	r30, 0x01	; 1
     2c6:	f1 f7       	brne	.-4      	; 0x2c4 <_Z10initSystemv+0x72>
     2c8:	01 97       	sbiw	r24, 0x01	; 1
     2ca:	d9 f7       	brne	.-10     	; 0x2c2 <_Z10initSystemv+0x70>
	_delay_ms(500);
	
	lcd_clear();
     2cc:	73 df       	rcall	.-282    	; 0x1b4 <_Z9lcd_clearv>
     2ce:	80 ee       	ldi	r24, 0xE0	; 224
	PORTA = 0b11100000;
     2d0:	8b bb       	out	0x1b, r24	; 27
     2d2:	88 e8       	ldi	r24, 0x88	; 136
     2d4:	93 e1       	ldi	r25, 0x13	; 19
     2d6:	20 e9       	ldi	r18, 0x90	; 144
     2d8:	31 e0       	ldi	r19, 0x01	; 1
     2da:	f9 01       	movw	r30, r18
     2dc:	31 97       	sbiw	r30, 0x01	; 1
     2de:	f1 f7       	brne	.-4      	; 0x2dc <_Z10initSystemv+0x8a>
     2e0:	01 97       	sbiw	r24, 0x01	; 1
     2e2:	d9 f7       	brne	.-10     	; 0x2da <_Z10initSystemv+0x88>
     2e4:	08 95       	ret

000002e6 <__vector_16>:
	_delay_ms(500);
}
     2e6:	1f 92       	push	r1
int mode = CLOCK;
bool error_flag = false, change_flag = false, total_flag = true, endtime_flag = false, end_flag = false;
char str[16] = {0,};
long int sum = 0;
	
ISR(TIMER0_OVF_vect){
     2e8:	0f 92       	push	r0
     2ea:	0f b6       	in	r0, 0x3f	; 63
     2ec:	0f 92       	push	r0
     2ee:	11 24       	eor	r1, r1
     2f0:	2f 93       	push	r18
     2f2:	3f 93       	push	r19
     2f4:	8f 93       	push	r24
     2f6:	9f 93       	push	r25
	msec++;
     2f8:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <msec>
     2fc:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <msec+0x1>
     300:	01 96       	adiw	r24, 0x01	; 1
     302:	90 93 e5 01 	sts	0x01E5, r25	; 0x8001e5 <msec+0x1>
     306:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <msec>
	if(endtime_flag) end_time++;
     30a:	80 91 d9 01 	lds	r24, 0x01D9	; 0x8001d9 <endtime_flag>
     30e:	88 23       	and	r24, r24
     310:	49 f0       	breq	.+18     	; 0x324 <__vector_16+0x3e>
     312:	80 91 de 01 	lds	r24, 0x01DE	; 0x8001de <end_time>
     316:	90 91 df 01 	lds	r25, 0x01DF	; 0x8001df <end_time+0x1>
     31a:	01 96       	adiw	r24, 0x01	; 1
     31c:	90 93 df 01 	sts	0x01DF, r25	; 0x8001df <end_time+0x1>
     320:	80 93 de 01 	sts	0x01DE, r24	; 0x8001de <end_time>
	
	if(hour >= 24) hour = min = sec = msec = 0;
     324:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <hour>
     328:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <hour+0x1>
     32c:	88 31       	cpi	r24, 0x18	; 24
     32e:	91 05       	cpc	r25, r1
     330:	88 f0       	brcs	.+34     	; 0x354 <__vector_16+0x6e>
     332:	10 92 e5 01 	sts	0x01E5, r1	; 0x8001e5 <msec+0x1>
     336:	10 92 e4 01 	sts	0x01E4, r1	; 0x8001e4 <msec>
     33a:	10 92 e1 01 	sts	0x01E1, r1	; 0x8001e1 <sec+0x1>
     33e:	10 92 e0 01 	sts	0x01E0, r1	; 0x8001e0 <sec>
     342:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <min+0x1>
     346:	10 92 e2 01 	sts	0x01E2, r1	; 0x8001e2 <min>
     34a:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <hour+0x1>
     34e:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <hour>
     352:	23 c0       	rjmp	.+70     	; 0x39a <__vector_16+0xb4>
	if(min >= 60){hour++; min = 0;}
     354:	20 91 e2 01 	lds	r18, 0x01E2	; 0x8001e2 <min>
     358:	30 91 e3 01 	lds	r19, 0x01E3	; 0x8001e3 <min+0x1>
     35c:	2c 33       	cpi	r18, 0x3C	; 60
     35e:	31 05       	cpc	r19, r1
     360:	48 f0       	brcs	.+18     	; 0x374 <__vector_16+0x8e>
     362:	01 96       	adiw	r24, 0x01	; 1
     364:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <hour+0x1>
     368:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <hour>
     36c:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <min+0x1>
     370:	10 92 e2 01 	sts	0x01E2, r1	; 0x8001e2 <min>
	if(sec >= 60){min++; sec = 0;}
     374:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <sec>
     378:	90 91 e1 01 	lds	r25, 0x01E1	; 0x8001e1 <sec+0x1>
     37c:	cc 97       	sbiw	r24, 0x3c	; 60
     37e:	68 f0       	brcs	.+26     	; 0x39a <__vector_16+0xb4>
     380:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <min>
     384:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <min+0x1>
     388:	01 96       	adiw	r24, 0x01	; 1
     38a:	90 93 e3 01 	sts	0x01E3, r25	; 0x8001e3 <min+0x1>
     38e:	80 93 e2 01 	sts	0x01E2, r24	; 0x8001e2 <min>
     392:	10 92 e1 01 	sts	0x01E1, r1	; 0x8001e1 <sec+0x1>
     396:	10 92 e0 01 	sts	0x01E0, r1	; 0x8001e0 <sec>
	if(msec >= 1000){sec++; msec = 0;}
     39a:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <msec>
     39e:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <msec+0x1>
     3a2:	88 3e       	cpi	r24, 0xE8	; 232
     3a4:	93 40       	sbci	r25, 0x03	; 3
     3a6:	68 f0       	brcs	.+26     	; 0x3c2 <__vector_16+0xdc>
     3a8:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <sec>
     3ac:	90 91 e1 01 	lds	r25, 0x01E1	; 0x8001e1 <sec+0x1>
     3b0:	01 96       	adiw	r24, 0x01	; 1
     3b2:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <sec+0x1>
     3b6:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <sec>
     3ba:	10 92 e5 01 	sts	0x01E5, r1	; 0x8001e5 <msec+0x1>
     3be:	10 92 e4 01 	sts	0x01E4, r1	; 0x8001e4 <msec>
		
	if(end_time >= 5000){
     3c2:	80 91 de 01 	lds	r24, 0x01DE	; 0x8001de <end_time>
     3c6:	90 91 df 01 	lds	r25, 0x01DF	; 0x8001df <end_time+0x1>
     3ca:	88 38       	cpi	r24, 0x88	; 136
     3cc:	93 41       	sbci	r25, 0x13	; 19
     3ce:	48 f0       	brcs	.+18     	; 0x3e2 <__vector_16+0xfc>
		end_flag = true;
     3d0:	81 e0       	ldi	r24, 0x01	; 1
     3d2:	80 93 d8 01 	sts	0x01D8, r24	; 0x8001d8 <end_flag>
		endtime_flag = false;
     3d6:	10 92 d9 01 	sts	0x01D9, r1	; 0x8001d9 <endtime_flag>
		end_time = 0;
     3da:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <end_time+0x1>
     3de:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <end_time>
	}
}
     3e2:	9f 91       	pop	r25
     3e4:	8f 91       	pop	r24
     3e6:	3f 91       	pop	r19
     3e8:	2f 91       	pop	r18
     3ea:	0f 90       	pop	r0
     3ec:	0f be       	out	0x3f, r0	; 63
     3ee:	0f 90       	pop	r0
     3f0:	1f 90       	pop	r1
     3f2:	18 95       	reti

000003f4 <_Z9key_inputj>:

void key_input(unsigned int key){
     3f4:	0f 93       	push	r16
     3f6:	1f 93       	push	r17
	if(key == sw1) sum = sum * 10 + 1;
     3f8:	8e 31       	cpi	r24, 0x1E	; 30
     3fa:	91 05       	cpc	r25, r1
     3fc:	39 f5       	brne	.+78     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     3fe:	40 91 c4 01 	lds	r20, 0x01C4	; 0x8001c4 <__data_end>
     402:	50 91 c5 01 	lds	r21, 0x01C5	; 0x8001c5 <__data_end+0x1>
     406:	60 91 c6 01 	lds	r22, 0x01C6	; 0x8001c6 <__data_end+0x2>
     40a:	70 91 c7 01 	lds	r23, 0x01C7	; 0x8001c7 <__data_end+0x3>
     40e:	44 0f       	add	r20, r20
     410:	55 1f       	adc	r21, r21
     412:	66 1f       	adc	r22, r22
     414:	77 1f       	adc	r23, r23
     416:	8a 01       	movw	r16, r20
     418:	9b 01       	movw	r18, r22
     41a:	00 0f       	add	r16, r16
     41c:	11 1f       	adc	r17, r17
     41e:	22 1f       	adc	r18, r18
     420:	33 1f       	adc	r19, r19
     422:	00 0f       	add	r16, r16
     424:	11 1f       	adc	r17, r17
     426:	22 1f       	adc	r18, r18
     428:	33 1f       	adc	r19, r19
     42a:	40 0f       	add	r20, r16
     42c:	51 1f       	adc	r21, r17
     42e:	62 1f       	adc	r22, r18
     430:	73 1f       	adc	r23, r19
     432:	4f 5f       	subi	r20, 0xFF	; 255
     434:	5f 4f       	sbci	r21, 0xFF	; 255
     436:	6f 4f       	sbci	r22, 0xFF	; 255
     438:	7f 4f       	sbci	r23, 0xFF	; 255
     43a:	40 93 c4 01 	sts	0x01C4, r20	; 0x8001c4 <__data_end>
     43e:	50 93 c5 01 	sts	0x01C5, r21	; 0x8001c5 <__data_end+0x1>
     442:	60 93 c6 01 	sts	0x01C6, r22	; 0x8001c6 <__data_end+0x2>
     446:	70 93 c7 01 	sts	0x01C7, r23	; 0x8001c7 <__data_end+0x3>
     44a:	54 c0       	rjmp	.+168    	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
	if(key == sw2) sum = sum * 10 + 2;
     44c:	8e 32       	cpi	r24, 0x2E	; 46
     44e:	91 05       	cpc	r25, r1
     450:	39 f5       	brne	.+78     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
     452:	40 91 c4 01 	lds	r20, 0x01C4	; 0x8001c4 <__data_end>
     456:	50 91 c5 01 	lds	r21, 0x01C5	; 0x8001c5 <__data_end+0x1>
     45a:	60 91 c6 01 	lds	r22, 0x01C6	; 0x8001c6 <__data_end+0x2>
     45e:	70 91 c7 01 	lds	r23, 0x01C7	; 0x8001c7 <__data_end+0x3>
     462:	44 0f       	add	r20, r20
     464:	55 1f       	adc	r21, r21
     466:	66 1f       	adc	r22, r22
     468:	77 1f       	adc	r23, r23
     46a:	8a 01       	movw	r16, r20
     46c:	9b 01       	movw	r18, r22
     46e:	00 0f       	add	r16, r16
     470:	11 1f       	adc	r17, r17
     472:	22 1f       	adc	r18, r18
     474:	33 1f       	adc	r19, r19
     476:	00 0f       	add	r16, r16
     478:	11 1f       	adc	r17, r17
     47a:	22 1f       	adc	r18, r18
     47c:	33 1f       	adc	r19, r19
     47e:	40 0f       	add	r20, r16
     480:	51 1f       	adc	r21, r17
     482:	62 1f       	adc	r22, r18
     484:	73 1f       	adc	r23, r19
     486:	4e 5f       	subi	r20, 0xFE	; 254
     488:	5f 4f       	sbci	r21, 0xFF	; 255
     48a:	6f 4f       	sbci	r22, 0xFF	; 255
     48c:	7f 4f       	sbci	r23, 0xFF	; 255
     48e:	40 93 c4 01 	sts	0x01C4, r20	; 0x8001c4 <__data_end>
     492:	50 93 c5 01 	sts	0x01C5, r21	; 0x8001c5 <__data_end+0x1>
     496:	60 93 c6 01 	sts	0x01C6, r22	; 0x8001c6 <__data_end+0x2>
     49a:	70 93 c7 01 	sts	0x01C7, r23	; 0x8001c7 <__data_end+0x3>
     49e:	54 c0       	rjmp	.+168    	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
	if(key == sw3) sum = sum * 10 + 3;
     4a0:	8e 34       	cpi	r24, 0x4E	; 78
     4a2:	91 05       	cpc	r25, r1
     4a4:	39 f5       	brne	.+78     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
     4a6:	40 91 c4 01 	lds	r20, 0x01C4	; 0x8001c4 <__data_end>
     4aa:	50 91 c5 01 	lds	r21, 0x01C5	; 0x8001c5 <__data_end+0x1>
     4ae:	60 91 c6 01 	lds	r22, 0x01C6	; 0x8001c6 <__data_end+0x2>
     4b2:	70 91 c7 01 	lds	r23, 0x01C7	; 0x8001c7 <__data_end+0x3>
     4b6:	44 0f       	add	r20, r20
     4b8:	55 1f       	adc	r21, r21
     4ba:	66 1f       	adc	r22, r22
     4bc:	77 1f       	adc	r23, r23
     4be:	8a 01       	movw	r16, r20
     4c0:	9b 01       	movw	r18, r22
     4c2:	00 0f       	add	r16, r16
     4c4:	11 1f       	adc	r17, r17
     4c6:	22 1f       	adc	r18, r18
     4c8:	33 1f       	adc	r19, r19
     4ca:	00 0f       	add	r16, r16
     4cc:	11 1f       	adc	r17, r17
     4ce:	22 1f       	adc	r18, r18
     4d0:	33 1f       	adc	r19, r19
     4d2:	40 0f       	add	r20, r16
     4d4:	51 1f       	adc	r21, r17
     4d6:	62 1f       	adc	r22, r18
     4d8:	73 1f       	adc	r23, r19
     4da:	4d 5f       	subi	r20, 0xFD	; 253
     4dc:	5f 4f       	sbci	r21, 0xFF	; 255
     4de:	6f 4f       	sbci	r22, 0xFF	; 255
     4e0:	7f 4f       	sbci	r23, 0xFF	; 255
     4e2:	40 93 c4 01 	sts	0x01C4, r20	; 0x8001c4 <__data_end>
     4e6:	50 93 c5 01 	sts	0x01C5, r21	; 0x8001c5 <__data_end+0x1>
     4ea:	60 93 c6 01 	sts	0x01C6, r22	; 0x8001c6 <__data_end+0x2>
     4ee:	70 93 c7 01 	sts	0x01C7, r23	; 0x8001c7 <__data_end+0x3>
     4f2:	54 c0       	rjmp	.+168    	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
	if(key == sw5) sum = sum * 10 + 4;
     4f4:	8d 31       	cpi	r24, 0x1D	; 29
     4f6:	91 05       	cpc	r25, r1
     4f8:	39 f5       	brne	.+78     	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
     4fa:	40 91 c4 01 	lds	r20, 0x01C4	; 0x8001c4 <__data_end>
     4fe:	50 91 c5 01 	lds	r21, 0x01C5	; 0x8001c5 <__data_end+0x1>
     502:	60 91 c6 01 	lds	r22, 0x01C6	; 0x8001c6 <__data_end+0x2>
     506:	70 91 c7 01 	lds	r23, 0x01C7	; 0x8001c7 <__data_end+0x3>
     50a:	44 0f       	add	r20, r20
     50c:	55 1f       	adc	r21, r21
     50e:	66 1f       	adc	r22, r22
     510:	77 1f       	adc	r23, r23
     512:	8a 01       	movw	r16, r20
     514:	9b 01       	movw	r18, r22
     516:	00 0f       	add	r16, r16
     518:	11 1f       	adc	r17, r17
     51a:	22 1f       	adc	r18, r18
     51c:	33 1f       	adc	r19, r19
     51e:	00 0f       	add	r16, r16
     520:	11 1f       	adc	r17, r17
     522:	22 1f       	adc	r18, r18
     524:	33 1f       	adc	r19, r19
     526:	40 0f       	add	r20, r16
     528:	51 1f       	adc	r21, r17
     52a:	62 1f       	adc	r22, r18
     52c:	73 1f       	adc	r23, r19
     52e:	4c 5f       	subi	r20, 0xFC	; 252
     530:	5f 4f       	sbci	r21, 0xFF	; 255
     532:	6f 4f       	sbci	r22, 0xFF	; 255
     534:	7f 4f       	sbci	r23, 0xFF	; 255
     536:	40 93 c4 01 	sts	0x01C4, r20	; 0x8001c4 <__data_end>
     53a:	50 93 c5 01 	sts	0x01C5, r21	; 0x8001c5 <__data_end+0x1>
     53e:	60 93 c6 01 	sts	0x01C6, r22	; 0x8001c6 <__data_end+0x2>
     542:	70 93 c7 01 	sts	0x01C7, r23	; 0x8001c7 <__data_end+0x3>
     546:	54 c0       	rjmp	.+168    	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
	if(key == sw6) sum = sum * 10 + 5;
     548:	8d 32       	cpi	r24, 0x2D	; 45
     54a:	91 05       	cpc	r25, r1
     54c:	39 f5       	brne	.+78     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
     54e:	40 91 c4 01 	lds	r20, 0x01C4	; 0x8001c4 <__data_end>
     552:	50 91 c5 01 	lds	r21, 0x01C5	; 0x8001c5 <__data_end+0x1>
     556:	60 91 c6 01 	lds	r22, 0x01C6	; 0x8001c6 <__data_end+0x2>
     55a:	70 91 c7 01 	lds	r23, 0x01C7	; 0x8001c7 <__data_end+0x3>
     55e:	44 0f       	add	r20, r20
     560:	55 1f       	adc	r21, r21
     562:	66 1f       	adc	r22, r22
     564:	77 1f       	adc	r23, r23
     566:	8a 01       	movw	r16, r20
     568:	9b 01       	movw	r18, r22
     56a:	00 0f       	add	r16, r16
     56c:	11 1f       	adc	r17, r17
     56e:	22 1f       	adc	r18, r18
     570:	33 1f       	adc	r19, r19
     572:	00 0f       	add	r16, r16
     574:	11 1f       	adc	r17, r17
     576:	22 1f       	adc	r18, r18
     578:	33 1f       	adc	r19, r19
     57a:	40 0f       	add	r20, r16
     57c:	51 1f       	adc	r21, r17
     57e:	62 1f       	adc	r22, r18
     580:	73 1f       	adc	r23, r19
     582:	4b 5f       	subi	r20, 0xFB	; 251
     584:	5f 4f       	sbci	r21, 0xFF	; 255
     586:	6f 4f       	sbci	r22, 0xFF	; 255
     588:	7f 4f       	sbci	r23, 0xFF	; 255
     58a:	40 93 c4 01 	sts	0x01C4, r20	; 0x8001c4 <__data_end>
     58e:	50 93 c5 01 	sts	0x01C5, r21	; 0x8001c5 <__data_end+0x1>
     592:	60 93 c6 01 	sts	0x01C6, r22	; 0x8001c6 <__data_end+0x2>
     596:	70 93 c7 01 	sts	0x01C7, r23	; 0x8001c7 <__data_end+0x3>
     59a:	54 c0       	rjmp	.+168    	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
	if(key == sw7) sum = sum * 10 + 6;
     59c:	8d 34       	cpi	r24, 0x4D	; 77
     59e:	91 05       	cpc	r25, r1
     5a0:	39 f5       	brne	.+78     	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
     5a2:	40 91 c4 01 	lds	r20, 0x01C4	; 0x8001c4 <__data_end>
     5a6:	50 91 c5 01 	lds	r21, 0x01C5	; 0x8001c5 <__data_end+0x1>
     5aa:	60 91 c6 01 	lds	r22, 0x01C6	; 0x8001c6 <__data_end+0x2>
     5ae:	70 91 c7 01 	lds	r23, 0x01C7	; 0x8001c7 <__data_end+0x3>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	8a 01       	movw	r16, r20
     5bc:	9b 01       	movw	r18, r22
     5be:	00 0f       	add	r16, r16
     5c0:	11 1f       	adc	r17, r17
     5c2:	22 1f       	adc	r18, r18
     5c4:	33 1f       	adc	r19, r19
     5c6:	00 0f       	add	r16, r16
     5c8:	11 1f       	adc	r17, r17
     5ca:	22 1f       	adc	r18, r18
     5cc:	33 1f       	adc	r19, r19
     5ce:	40 0f       	add	r20, r16
     5d0:	51 1f       	adc	r21, r17
     5d2:	62 1f       	adc	r22, r18
     5d4:	73 1f       	adc	r23, r19
     5d6:	4a 5f       	subi	r20, 0xFA	; 250
     5d8:	5f 4f       	sbci	r21, 0xFF	; 255
     5da:	6f 4f       	sbci	r22, 0xFF	; 255
     5dc:	7f 4f       	sbci	r23, 0xFF	; 255
     5de:	40 93 c4 01 	sts	0x01C4, r20	; 0x8001c4 <__data_end>
     5e2:	50 93 c5 01 	sts	0x01C5, r21	; 0x8001c5 <__data_end+0x1>
     5e6:	60 93 c6 01 	sts	0x01C6, r22	; 0x8001c6 <__data_end+0x2>
     5ea:	70 93 c7 01 	sts	0x01C7, r23	; 0x8001c7 <__data_end+0x3>
     5ee:	53 c0       	rjmp	.+166    	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
	if(key == sw9) sum = sum * 10 + 7;
     5f0:	8b 31       	cpi	r24, 0x1B	; 27
     5f2:	91 05       	cpc	r25, r1
     5f4:	39 f5       	brne	.+78     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
     5f6:	40 91 c4 01 	lds	r20, 0x01C4	; 0x8001c4 <__data_end>
     5fa:	50 91 c5 01 	lds	r21, 0x01C5	; 0x8001c5 <__data_end+0x1>
     5fe:	60 91 c6 01 	lds	r22, 0x01C6	; 0x8001c6 <__data_end+0x2>
     602:	70 91 c7 01 	lds	r23, 0x01C7	; 0x8001c7 <__data_end+0x3>
     606:	44 0f       	add	r20, r20
     608:	55 1f       	adc	r21, r21
     60a:	66 1f       	adc	r22, r22
     60c:	77 1f       	adc	r23, r23
     60e:	8a 01       	movw	r16, r20
     610:	9b 01       	movw	r18, r22
     612:	00 0f       	add	r16, r16
     614:	11 1f       	adc	r17, r17
     616:	22 1f       	adc	r18, r18
     618:	33 1f       	adc	r19, r19
     61a:	00 0f       	add	r16, r16
     61c:	11 1f       	adc	r17, r17
     61e:	22 1f       	adc	r18, r18
     620:	33 1f       	adc	r19, r19
     622:	40 0f       	add	r20, r16
     624:	51 1f       	adc	r21, r17
     626:	62 1f       	adc	r22, r18
     628:	73 1f       	adc	r23, r19
     62a:	49 5f       	subi	r20, 0xF9	; 249
     62c:	5f 4f       	sbci	r21, 0xFF	; 255
     62e:	6f 4f       	sbci	r22, 0xFF	; 255
     630:	7f 4f       	sbci	r23, 0xFF	; 255
     632:	40 93 c4 01 	sts	0x01C4, r20	; 0x8001c4 <__data_end>
     636:	50 93 c5 01 	sts	0x01C5, r21	; 0x8001c5 <__data_end+0x1>
     63a:	60 93 c6 01 	sts	0x01C6, r22	; 0x8001c6 <__data_end+0x2>
     63e:	70 93 c7 01 	sts	0x01C7, r23	; 0x8001c7 <__data_end+0x3>
     642:	52 c0       	rjmp	.+164    	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
	if(key == sw10) sum = sum * 10 + 8;
     644:	8b 32       	cpi	r24, 0x2B	; 43
     646:	91 05       	cpc	r25, r1
     648:	31 f5       	brne	.+76     	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
     64a:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
     64e:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
     652:	a0 91 c6 01 	lds	r26, 0x01C6	; 0x8001c6 <__data_end+0x2>
     656:	b0 91 c7 01 	lds	r27, 0x01C7	; 0x8001c7 <__data_end+0x3>
     65a:	88 0f       	add	r24, r24
     65c:	99 1f       	adc	r25, r25
     65e:	aa 1f       	adc	r26, r26
     660:	bb 1f       	adc	r27, r27
     662:	ac 01       	movw	r20, r24
     664:	bd 01       	movw	r22, r26
     666:	44 0f       	add	r20, r20
     668:	55 1f       	adc	r21, r21
     66a:	66 1f       	adc	r22, r22
     66c:	77 1f       	adc	r23, r23
     66e:	44 0f       	add	r20, r20
     670:	55 1f       	adc	r21, r21
     672:	66 1f       	adc	r22, r22
     674:	77 1f       	adc	r23, r23
     676:	84 0f       	add	r24, r20
     678:	95 1f       	adc	r25, r21
     67a:	a6 1f       	adc	r26, r22
     67c:	b7 1f       	adc	r27, r23
     67e:	08 96       	adiw	r24, 0x08	; 8
     680:	a1 1d       	adc	r26, r1
     682:	b1 1d       	adc	r27, r1
     684:	80 93 c4 01 	sts	0x01C4, r24	; 0x8001c4 <__data_end>
     688:	90 93 c5 01 	sts	0x01C5, r25	; 0x8001c5 <__data_end+0x1>
     68c:	a0 93 c6 01 	sts	0x01C6, r26	; 0x8001c6 <__data_end+0x2>
     690:	b0 93 c7 01 	sts	0x01C7, r27	; 0x8001c7 <__data_end+0x3>
     694:	4d c0       	rjmp	.+154    	; 0x730 <__LOCK_REGION_LENGTH__+0x330>
	if(key == sw11) sum = sum * 10 + 9;
     696:	8b 34       	cpi	r24, 0x4B	; 75
     698:	91 05       	cpc	r25, r1
     69a:	31 f5       	brne	.+76     	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
     69c:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
     6a0:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
     6a4:	a0 91 c6 01 	lds	r26, 0x01C6	; 0x8001c6 <__data_end+0x2>
     6a8:	b0 91 c7 01 	lds	r27, 0x01C7	; 0x8001c7 <__data_end+0x3>
     6ac:	88 0f       	add	r24, r24
     6ae:	99 1f       	adc	r25, r25
     6b0:	aa 1f       	adc	r26, r26
     6b2:	bb 1f       	adc	r27, r27
     6b4:	ac 01       	movw	r20, r24
     6b6:	bd 01       	movw	r22, r26
     6b8:	44 0f       	add	r20, r20
     6ba:	55 1f       	adc	r21, r21
     6bc:	66 1f       	adc	r22, r22
     6be:	77 1f       	adc	r23, r23
     6c0:	44 0f       	add	r20, r20
     6c2:	55 1f       	adc	r21, r21
     6c4:	66 1f       	adc	r22, r22
     6c6:	77 1f       	adc	r23, r23
     6c8:	84 0f       	add	r24, r20
     6ca:	95 1f       	adc	r25, r21
     6cc:	a6 1f       	adc	r26, r22
     6ce:	b7 1f       	adc	r27, r23
     6d0:	09 96       	adiw	r24, 0x09	; 9
     6d2:	a1 1d       	adc	r26, r1
     6d4:	b1 1d       	adc	r27, r1
     6d6:	80 93 c4 01 	sts	0x01C4, r24	; 0x8001c4 <__data_end>
     6da:	90 93 c5 01 	sts	0x01C5, r25	; 0x8001c5 <__data_end+0x1>
     6de:	a0 93 c6 01 	sts	0x01C6, r26	; 0x8001c6 <__data_end+0x2>
     6e2:	b0 93 c7 01 	sts	0x01C7, r27	; 0x8001c7 <__data_end+0x3>
     6e6:	24 c0       	rjmp	.+72     	; 0x730 <__LOCK_REGION_LENGTH__+0x330>
	if(key == sw13) sum = sum * 10 + 0;	
     6e8:	47 97       	sbiw	r24, 0x17	; 23
     6ea:	11 f5       	brne	.+68     	; 0x730 <__LOCK_REGION_LENGTH__+0x330>
     6ec:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
     6f0:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
     6f4:	a0 91 c6 01 	lds	r26, 0x01C6	; 0x8001c6 <__data_end+0x2>
     6f8:	b0 91 c7 01 	lds	r27, 0x01C7	; 0x8001c7 <__data_end+0x3>
     6fc:	88 0f       	add	r24, r24
     6fe:	99 1f       	adc	r25, r25
     700:	aa 1f       	adc	r26, r26
     702:	bb 1f       	adc	r27, r27
     704:	ac 01       	movw	r20, r24
     706:	bd 01       	movw	r22, r26
     708:	44 0f       	add	r20, r20
     70a:	55 1f       	adc	r21, r21
     70c:	66 1f       	adc	r22, r22
     70e:	77 1f       	adc	r23, r23
     710:	44 0f       	add	r20, r20
     712:	55 1f       	adc	r21, r21
     714:	66 1f       	adc	r22, r22
     716:	77 1f       	adc	r23, r23
     718:	84 0f       	add	r24, r20
     71a:	95 1f       	adc	r25, r21
     71c:	a6 1f       	adc	r26, r22
     71e:	b7 1f       	adc	r27, r23
     720:	80 93 c4 01 	sts	0x01C4, r24	; 0x8001c4 <__data_end>
     724:	90 93 c5 01 	sts	0x01C5, r25	; 0x8001c5 <__data_end+0x1>
     728:	a0 93 c6 01 	sts	0x01C6, r26	; 0x8001c6 <__data_end+0x2>
     72c:	b0 93 c7 01 	sts	0x01C7, r27	; 0x8001c7 <__data_end+0x3>
}
     730:	1f 91       	pop	r17
     732:	0f 91       	pop	r16
     734:	08 95       	ret

00000736 <main>:

int main(void)
{
     736:	cf 93       	push	r28
     738:	df 93       	push	r29
     73a:	00 d0       	rcall	.+0      	; 0x73c <main+0x6>
     73c:	00 d0       	rcall	.+0      	; 0x73e <main+0x8>
     73e:	cd b7       	in	r28, 0x3d	; 61
     740:	de b7       	in	r29, 0x3e	; 62
	//timer init
	TCNT0 = 6;  // TCNT0가 256이 될때 overflow -> 0  1/16mHz = 0.0000000625, 0.0000000625 * 64 = 0.000004 분주한 속도
     742:	86 e0       	ldi	r24, 0x06	; 6
     744:	82 bf       	out	0x32, r24	; 50
	TIMSK = 0x01;  // 0b00000001, timer 0 enable
     746:	81 e0       	ldi	r24, 0x01	; 1
     748:	87 bf       	out	0x37, r24	; 55
	TCCR0 = 0b00000100;  // 0b00000100, 분주비 = 64
     74a:	84 e0       	ldi	r24, 0x04	; 4
     74c:	83 bf       	out	0x33, r24	; 51
	sei();  // 숫자를 카운트
     74e:	78 94       	sei
	
	initSystem();
     750:	80 dd       	rcall	.-1280   	; 0x252 <_Z10initSystemv>
	
	long int total_sale = 0, total_sum = 0;
     752:	41 2c       	mov	r4, r1
     754:	51 2c       	mov	r5, r1
     756:	32 01       	movw	r6, r4
     758:	19 82       	std	Y+1, r1	; 0x01
     75a:	1a 82       	std	Y+2, r1	; 0x02
     75c:	1b 82       	std	Y+3, r1	; 0x03
     75e:	1c 82       	std	Y+4, r1	; 0x04
					lcd_clear();
					break;					
				}
				
				lcd_putsf(0,0,(unsigned char*)"    WELCOME!!   ");
				sprintf(str,"    %02d:%02d:%02d    ",hour, min, sec);
     760:	0f 2e       	mov	r0, r31
     762:	f4 e3       	ldi	r31, 0x34	; 52
     764:	ef 2e       	mov	r14, r31
     766:	f1 e0       	ldi	r31, 0x01	; 1
     768:	ff 2e       	mov	r15, r31
     76a:	f0 2d       	mov	r31, r0
     76c:	08 ec       	ldi	r16, 0xC8	; 200
     76e:	11 e0       	ldi	r17, 0x01	; 1
     770:	80 2e       	mov	r8, r16
     772:	91 2e       	mov	r9, r17
					error_flag = false;
					mode = CLOCK;
					break;
				}

				if(total_flag) sprintf(str,"    %ld",sum);
     774:	0f 2e       	mov	r0, r31
     776:	ff e8       	ldi	r31, 0x8F	; 143
     778:	2f 2e       	mov	r2, r31
     77a:	f1 e0       	ldi	r31, 0x01	; 1
     77c:	3f 2e       	mov	r3, r31
     77e:	f0 2d       	mov	r31, r0
	initSystem();
	
	long int total_sale = 0, total_sum = 0;
    while (1) 
    {
		if(mode == CLOCK){
     780:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <mode>
     784:	90 91 dd 01 	lds	r25, 0x01DD	; 0x8001dd <mode+0x1>
     788:	00 97       	sbiw	r24, 0x00	; 0
     78a:	09 f0       	breq	.+2      	; 0x78e <main+0x58>
			while(1){
				unsigned int key = my_getkey();
     78c:	3e c0       	rjmp	.+124    	; 0x80a <main+0xd4>
     78e:	19 dd       	rcall	.-1486   	; 0x1c2 <_Z9my_getkeyv>
				if(key == sw12){
     790:	8b 38       	cpi	r24, 0x8B	; 139
     792:	91 05       	cpc	r25, r1
     794:	41 f4       	brne	.+16     	; 0x7a6 <main+0x70>
					mode = MENU;
     796:	21 e0       	ldi	r18, 0x01	; 1
     798:	30 e0       	ldi	r19, 0x00	; 0
     79a:	30 93 dd 01 	sts	0x01DD, r19	; 0x8001dd <mode+0x1>
     79e:	20 93 dc 01 	sts	0x01DC, r18	; 0x8001dc <mode>
					lcd_clear();
     7a2:	08 dd       	rcall	.-1520   	; 0x1b4 <_Z9lcd_clearv>
					break;
     7a4:	ed cf       	rjmp	.-38     	; 0x780 <main+0x4a>
				}
				
				if(PINF == 0x01){
     7a6:	80 b1       	in	r24, 0x00	; 0
     7a8:	81 30       	cpi	r24, 0x01	; 1
     7aa:	41 f4       	brne	.+16     	; 0x7bc <main+0x86>
					mode = CALCUL;
     7ac:	82 e0       	ldi	r24, 0x02	; 2
     7ae:	90 e0       	ldi	r25, 0x00	; 0
     7b0:	90 93 dd 01 	sts	0x01DD, r25	; 0x8001dd <mode+0x1>
     7b4:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <mode>
					lcd_clear();
     7b8:	fd dc       	rcall	.-1542   	; 0x1b4 <_Z9lcd_clearv>
					break;					
     7ba:	e2 cf       	rjmp	.-60     	; 0x780 <main+0x4a>
				}
				
				lcd_putsf(0,0,(unsigned char*)"    WELCOME!!   ");
     7bc:	43 e2       	ldi	r20, 0x23	; 35
     7be:	51 e0       	ldi	r21, 0x01	; 1
     7c0:	60 e0       	ldi	r22, 0x00	; 0
     7c2:	80 e0       	ldi	r24, 0x00	; 0
     7c4:	b5 dc       	rcall	.-1686   	; 0x130 <_Z9lcd_putsfhhPh>
				sprintf(str,"    %02d:%02d:%02d    ",hour, min, sec);
     7c6:	80 91 e1 01 	lds	r24, 0x01E1	; 0x8001e1 <sec+0x1>
     7ca:	8f 93       	push	r24
     7cc:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <sec>
     7d0:	8f 93       	push	r24
     7d2:	80 91 e3 01 	lds	r24, 0x01E3	; 0x8001e3 <min+0x1>
     7d6:	8f 93       	push	r24
     7d8:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <min>
     7dc:	8f 93       	push	r24
     7de:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <hour+0x1>
     7e2:	8f 93       	push	r24
     7e4:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <hour>
     7e8:	8f 93       	push	r24
     7ea:	ff 92       	push	r15
     7ec:	ef 92       	push	r14
     7ee:	1f 93       	push	r17
     7f0:	0f 93       	push	r16
				lcd_putsf(0,1,(unsigned char*)str);
     7f2:	07 d2       	rcall	.+1038   	; 0xc02 <sprintf>
     7f4:	48 2d       	mov	r20, r8
     7f6:	59 2d       	mov	r21, r9
     7f8:	61 e0       	ldi	r22, 0x01	; 1
     7fa:	80 e0       	ldi	r24, 0x00	; 0
     7fc:	99 dc       	rcall	.-1742   	; 0x130 <_Z9lcd_putsfhhPh>
	
	long int total_sale = 0, total_sum = 0;
    while (1) 
    {
		if(mode == CLOCK){
			while(1){
     7fe:	0f b6       	in	r0, 0x3f	; 63
     800:	f8 94       	cli
     802:	de bf       	out	0x3e, r29	; 62
     804:	0f be       	out	0x3f, r0	; 63
     806:	cd bf       	out	0x3d, r28	; 61
				sprintf(str,"    %02d:%02d:%02d    ",hour, min, sec);
				lcd_putsf(0,1,(unsigned char*)str);
			}
		}
		
		else if(mode == MENU){
     808:	c2 cf       	rjmp	.-124    	; 0x78e <main+0x58>
     80a:	81 30       	cpi	r24, 0x01	; 1
     80c:	91 05       	cpc	r25, r1
			while(1){
				unsigned int key = my_getkey();
     80e:	09 f5       	brne	.+66     	; 0x852 <main+0x11c>
     810:	d8 dc       	rcall	.-1616   	; 0x1c2 <_Z9my_getkeyv>
				
				if(key == sw1){
     812:	8e 31       	cpi	r24, 0x1E	; 30
     814:	91 05       	cpc	r25, r1
					mode = CALCUL;
     816:	41 f4       	brne	.+16     	; 0x828 <main+0xf2>
     818:	82 e0       	ldi	r24, 0x02	; 2
     81a:	90 e0       	ldi	r25, 0x00	; 0
     81c:	90 93 dd 01 	sts	0x01DD, r25	; 0x8001dd <mode+0x1>
     820:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <mode>
					lcd_clear();
     824:	c7 dc       	rcall	.-1650   	; 0x1b4 <_Z9lcd_clearv>
					break;
				}
				
				if(key == sw2){
     826:	ac cf       	rjmp	.-168    	; 0x780 <main+0x4a>
     828:	8e 97       	sbiw	r24, 0x2e	; 46
					mode = TOTAL;
     82a:	41 f4       	brne	.+16     	; 0x83c <main+0x106>
     82c:	84 e0       	ldi	r24, 0x04	; 4
     82e:	90 e0       	ldi	r25, 0x00	; 0
     830:	90 93 dd 01 	sts	0x01DD, r25	; 0x8001dd <mode+0x1>
					lcd_clear();
     834:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <mode>
					break;
				}
				
				lcd_putsf(0,0,(unsigned char*)"1: Calculation  ");
     838:	bd dc       	rcall	.-1670   	; 0x1b4 <_Z9lcd_clearv>
     83a:	a2 cf       	rjmp	.-188    	; 0x780 <main+0x4a>
     83c:	4b e4       	ldi	r20, 0x4B	; 75
     83e:	51 e0       	ldi	r21, 0x01	; 1
     840:	60 e0       	ldi	r22, 0x00	; 0
     842:	80 e0       	ldi	r24, 0x00	; 0
				lcd_putsf(0,1,(unsigned char*)"2: Total Sales  ");
     844:	75 dc       	rcall	.-1814   	; 0x130 <_Z9lcd_putsfhhPh>
     846:	4c e5       	ldi	r20, 0x5C	; 92
     848:	51 e0       	ldi	r21, 0x01	; 1
     84a:	61 e0       	ldi	r22, 0x01	; 1
     84c:	80 e0       	ldi	r24, 0x00	; 0
				lcd_putsf(0,1,(unsigned char*)str);
			}
		}
		
		else if(mode == MENU){
			while(1){
     84e:	70 dc       	rcall	.-1824   	; 0x130 <_Z9lcd_putsfhhPh>
				lcd_putsf(0,0,(unsigned char*)"1: Calculation  ");
				lcd_putsf(0,1,(unsigned char*)"2: Total Sales  ");
			}
		}
		
		else if(mode == CALCUL){
     850:	df cf       	rjmp	.-66     	; 0x810 <main+0xda>
     852:	82 30       	cpi	r24, 0x02	; 2
				lcd_putsf(0,0,(unsigned char*)"Calculate Mode  ");
				
				key_input(key);
					
				if(key == sw4){ // +
					if(sum > 200000) error_flag = true;
     854:	91 05       	cpc	r25, r1
     856:	09 f0       	breq	.+2      	; 0x85a <main+0x124>
			}
		}
		
		else if(mode == CALCUL){
			while(1){
				unsigned int key = my_getkey();
     858:	e0 c0       	rjmp	.+448    	; 0xa1a <main+0x2e4>
     85a:	bb 24       	eor	r11, r11
     85c:	b3 94       	inc	r11
				
				lcd_putsf(0,0,(unsigned char*)"Calculate Mode  ");
     85e:	b1 dc       	rcall	.-1694   	; 0x1c2 <_Z9my_getkeyv>
     860:	6c 01       	movw	r12, r24
     862:	4d e6       	ldi	r20, 0x6D	; 109
     864:	51 e0       	ldi	r21, 0x01	; 1
     866:	60 e0       	ldi	r22, 0x00	; 0
     868:	80 e0       	ldi	r24, 0x00	; 0
				
				key_input(key);
     86a:	62 dc       	rcall	.-1852   	; 0x130 <_Z9lcd_putsfhhPh>
     86c:	c6 01       	movw	r24, r12
     86e:	c2 dd       	rcall	.-1148   	; 0x3f4 <_Z9key_inputj>
					
				if(key == sw4){ // +
     870:	5e e8       	ldi	r21, 0x8E	; 142
     872:	c5 16       	cp	r12, r21
     874:	d1 04       	cpc	r13, r1
     876:	01 f5       	brne	.+64     	; 0x8b8 <main+0x182>
					if(sum > 200000) error_flag = true;
     878:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
     87c:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
     880:	a0 91 c6 01 	lds	r26, 0x01C6	; 0x8001c6 <__data_end+0x2>
     884:	b0 91 c7 01 	lds	r27, 0x01C7	; 0x8001c7 <__data_end+0x3>
     888:	81 34       	cpi	r24, 0x41	; 65
     88a:	2d e0       	ldi	r18, 0x0D	; 13
     88c:	92 07       	cpc	r25, r18
     88e:	23 e0       	ldi	r18, 0x03	; 3
     890:	a2 07       	cpc	r26, r18
     892:	b1 05       	cpc	r27, r1
     894:	1c f0       	brlt	.+6      	; 0x89c <main+0x166>
     896:	b0 92 db 01 	sts	0x01DB, r11	; 0x8001db <error_flag>
					else{
						total_sum += sum;
     89a:	51 c0       	rjmp	.+162    	; 0x93e <main+0x208>
     89c:	48 0e       	add	r4, r24
     89e:	59 1e       	adc	r5, r25
     8a0:	6a 1e       	adc	r6, r26
						sum = 0;
     8a2:	7b 1e       	adc	r7, r27
     8a4:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <__data_end>
     8a8:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <__data_end+0x1>
     8ac:	10 92 c6 01 	sts	0x01C6, r1	; 0x8001c6 <__data_end+0x2>
     8b0:	10 92 c7 01 	sts	0x01C7, r1	; 0x8001c7 <__data_end+0x3>
						lcd_clear();
     8b4:	7f dc       	rcall	.-1794   	; 0x1b4 <_Z9lcd_clearv>
     8b6:	43 c0       	rjmp	.+134    	; 0x93e <main+0x208>
					}
				}
				
				if(key == sw8){
     8b8:	3d e8       	ldi	r19, 0x8D	; 141
     8ba:	c3 16       	cp	r12, r19
     8bc:	d1 04       	cpc	r13, r1
     8be:	51 f5       	brne	.+84     	; 0x914 <main+0x1de>
					if(total_sum > 200000) error_flag = true;
     8c0:	41 e4       	ldi	r20, 0x41	; 65
     8c2:	44 16       	cp	r4, r20
     8c4:	4d e0       	ldi	r20, 0x0D	; 13
     8c6:	54 06       	cpc	r5, r20
     8c8:	43 e0       	ldi	r20, 0x03	; 3
     8ca:	64 06       	cpc	r6, r20
     8cc:	71 04       	cpc	r7, r1
     8ce:	1c f0       	brlt	.+6      	; 0x8d6 <main+0x1a0>
     8d0:	b0 92 db 01 	sts	0x01DB, r11	; 0x8001db <error_flag>
     8d4:	34 c0       	rjmp	.+104    	; 0x93e <main+0x208>
					else{
						total_sum += sum;
     8d6:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
     8da:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
     8de:	a0 91 c6 01 	lds	r26, 0x01C6	; 0x8001c6 <__data_end+0x2>
     8e2:	b0 91 c7 01 	lds	r27, 0x01C7	; 0x8001c7 <__data_end+0x3>
     8e6:	48 0e       	add	r4, r24
     8e8:	59 1e       	adc	r5, r25
     8ea:	6a 1e       	adc	r6, r26
						sum = 0;
     8ec:	7b 1e       	adc	r7, r27
     8ee:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <__data_end>
     8f2:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <__data_end+0x1>
     8f6:	10 92 c6 01 	sts	0x01C6, r1	; 0x8001c6 <__data_end+0x2>
     8fa:	10 92 c7 01 	sts	0x01C7, r1	; 0x8001c7 <__data_end+0x3>
						lcd_clear();
     8fe:	5a dc       	rcall	.-1868   	; 0x1b4 <_Z9lcd_clearv>
						change_flag = true;
     900:	b0 92 da 01 	sts	0x01DA, r11	; 0x8001da <change_flag>
						total_flag = false;
     904:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
					total_flag = true;
					change_flag = false;
					break;
				}

				if(error_flag){
     908:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <error_flag>
     90c:	88 23       	and	r24, r24
     90e:	09 f4       	brne	.+2      	; 0x912 <main+0x1dc>
     910:	6e c0       	rjmp	.+220    	; 0x9ee <main+0x2b8>
						change_flag = true;
						total_flag = false;
					}
				}
				
				if(change_flag && key == sw14){
     912:	1a c0       	rjmp	.+52     	; 0x948 <main+0x212>
     914:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <change_flag>
     918:	88 23       	and	r24, r24
     91a:	89 f0       	breq	.+34     	; 0x93e <main+0x208>
     91c:	57 e4       	ldi	r21, 0x47	; 71
     91e:	c5 16       	cp	r12, r21
     920:	d1 04       	cpc	r13, r1
					mode = CHANGE;
     922:	69 f4       	brne	.+26     	; 0x93e <main+0x208>
     924:	83 e0       	ldi	r24, 0x03	; 3
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	90 93 dd 01 	sts	0x01DD, r25	; 0x8001dd <mode+0x1>
     92c:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <mode>
					lcd_clear();
     930:	41 dc       	rcall	.-1918   	; 0x1b4 <_Z9lcd_clearv>
					total_flag = true;
     932:	81 e0       	ldi	r24, 0x01	; 1
     934:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
					change_flag = false;
     938:	10 92 da 01 	sts	0x01DA, r1	; 0x8001da <change_flag>
					break;
     93c:	21 cf       	rjmp	.-446    	; 0x780 <main+0x4a>
				}

				if(error_flag){
     93e:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <error_flag>
     942:	88 23       	and	r24, r24
     944:	09 f4       	brne	.+2      	; 0x948 <main+0x212>
	TCCR0 = 0b00000100;  // 0b00000100, 분주비 = 64
	sei();  // 숫자를 카운트
	
	initSystem();
	
	long int total_sale = 0, total_sum = 0;
     946:	38 c0       	rjmp	.+112    	; 0x9b8 <main+0x282>
     948:	0f 2e       	mov	r0, r31
     94a:	f3 e0       	ldi	r31, 0x03	; 3
     94c:	cf 2e       	mov	r12, r31
     94e:	d1 2c       	mov	r13, r1
					break;
				}

				if(error_flag){
					for(int i=0;i<3;i++){
						sprintf(str,"     ERROR!     ");
     950:	f0 2d       	mov	r31, r0
     952:	81 e1       	ldi	r24, 0x11	; 17
     954:	ee e7       	ldi	r30, 0x7E	; 126
     956:	f1 e0       	ldi	r31, 0x01	; 1
     958:	d8 01       	movw	r26, r16
     95a:	01 90       	ld	r0, Z+
     95c:	0d 92       	st	X+, r0
						lcd_putsf(0,1,(unsigned char*)str);
     95e:	8a 95       	dec	r24
     960:	e1 f7       	brne	.-8      	; 0x95a <main+0x224>
     962:	a8 01       	movw	r20, r16
     964:	61 e0       	ldi	r22, 0x01	; 1
     966:	80 e0       	ldi	r24, 0x00	; 0
     968:	e3 db       	rcall	.-2106   	; 0x130 <_Z9lcd_putsfhhPh>
     96a:	88 ee       	ldi	r24, 0xE8	; 232
     96c:	93 e0       	ldi	r25, 0x03	; 3
     96e:	e0 e9       	ldi	r30, 0x90	; 144
     970:	f1 e0       	ldi	r31, 0x01	; 1
     972:	31 97       	sbiw	r30, 0x01	; 1
     974:	f1 f7       	brne	.-4      	; 0x972 <main+0x23c>
     976:	01 97       	sbiw	r24, 0x01	; 1
						_delay_ms(100);
						lcd_clear();
     978:	d1 f7       	brne	.-12     	; 0x96e <main+0x238>
     97a:	1c dc       	rcall	.-1992   	; 0x1b4 <_Z9lcd_clearv>
     97c:	88 ee       	ldi	r24, 0xE8	; 232
     97e:	93 e0       	ldi	r25, 0x03	; 3
     980:	e0 e9       	ldi	r30, 0x90	; 144
     982:	f1 e0       	ldi	r31, 0x01	; 1
     984:	31 97       	sbiw	r30, 0x01	; 1
     986:	f1 f7       	brne	.-4      	; 0x984 <main+0x24e>
     988:	01 97       	sbiw	r24, 0x01	; 1
     98a:	d1 f7       	brne	.-12     	; 0x980 <main+0x24a>
     98c:	81 e0       	ldi	r24, 0x01	; 1
     98e:	c8 1a       	sub	r12, r24
     990:	d1 08       	sbc	r13, r1
					change_flag = false;
					break;
				}

				if(error_flag){
					for(int i=0;i<3;i++){
     992:	f9 f6       	brne	.-66     	; 0x952 <main+0x21c>
						_delay_ms(100);
						lcd_clear();
						_delay_ms(100);
					}
					total_sum = 0;
					sum = 0;
     994:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <__data_end>
     998:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <__data_end+0x1>
     99c:	10 92 c6 01 	sts	0x01C6, r1	; 0x8001c6 <__data_end+0x2>
     9a0:	10 92 c7 01 	sts	0x01C7, r1	; 0x8001c7 <__data_end+0x3>
					error_flag = false;
     9a4:	10 92 db 01 	sts	0x01DB, r1	; 0x8001db <error_flag>
					mode = CLOCK;
     9a8:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <mode+0x1>
     9ac:	10 92 dc 01 	sts	0x01DC, r1	; 0x8001dc <mode>
						lcd_putsf(0,1,(unsigned char*)str);
						_delay_ms(100);
						lcd_clear();
						_delay_ms(100);
					}
					total_sum = 0;
     9b0:	41 2c       	mov	r4, r1
     9b2:	51 2c       	mov	r5, r1
     9b4:	32 01       	movw	r6, r4
					sum = 0;
					error_flag = false;
					mode = CLOCK;
					break;
     9b6:	e4 ce       	rjmp	.-568    	; 0x780 <main+0x4a>
				}

				if(total_flag) sprintf(str,"    %ld",sum);
     9b8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     9bc:	88 23       	and	r24, r24
     9be:	b9 f0       	breq	.+46     	; 0x9ee <main+0x2b8>
     9c0:	80 91 c7 01 	lds	r24, 0x01C7	; 0x8001c7 <__data_end+0x3>
     9c4:	8f 93       	push	r24
     9c6:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end+0x2>
     9ca:	8f 93       	push	r24
     9cc:	80 91 c5 01 	lds	r24, 0x01C5	; 0x8001c5 <__data_end+0x1>
     9d0:	8f 93       	push	r24
     9d2:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
     9d6:	8f 93       	push	r24
     9d8:	3f 92       	push	r3
     9da:	2f 92       	push	r2
     9dc:	1f 93       	push	r17
     9de:	0f 93       	push	r16
     9e0:	10 d1       	rcall	.+544    	; 0xc02 <sprintf>
     9e2:	0f b6       	in	r0, 0x3f	; 63
     9e4:	f8 94       	cli
     9e6:	de bf       	out	0x3e, r29	; 62
     9e8:	0f be       	out	0x3f, r0	; 63
     9ea:	cd bf       	out	0x3d, r28	; 61
				else sprintf(str,"= %ld won",total_sum);
     9ec:	10 c0       	rjmp	.+32     	; 0xa0e <main+0x2d8>
     9ee:	7f 92       	push	r7
     9f0:	6f 92       	push	r6
     9f2:	5f 92       	push	r5
     9f4:	4f 92       	push	r4
     9f6:	47 e9       	ldi	r20, 0x97	; 151
     9f8:	51 e0       	ldi	r21, 0x01	; 1
     9fa:	5f 93       	push	r21
     9fc:	4f 93       	push	r20
     9fe:	1f 93       	push	r17
     a00:	0f 93       	push	r16
     a02:	ff d0       	rcall	.+510    	; 0xc02 <sprintf>
     a04:	0f b6       	in	r0, 0x3f	; 63
     a06:	f8 94       	cli
				lcd_putsf(0,1,(unsigned char*)str);
     a08:	de bf       	out	0x3e, r29	; 62
     a0a:	0f be       	out	0x3f, r0	; 63
     a0c:	cd bf       	out	0x3d, r28	; 61
     a0e:	48 2d       	mov	r20, r8
     a10:	59 2d       	mov	r21, r9
     a12:	6b 2d       	mov	r22, r11
				lcd_putsf(0,1,(unsigned char*)"2: Total Sales  ");
			}
		}
		
		else if(mode == CALCUL){
			while(1){
     a14:	80 e0       	ldi	r24, 0x00	; 0
				else sprintf(str,"= %ld won",total_sum);
				lcd_putsf(0,1,(unsigned char*)str);
			}
		}

		else if(mode == CHANGE){
     a16:	8c db       	rcall	.-2280   	; 0x130 <_Z9lcd_putsfhhPh>
     a18:	22 cf       	rjmp	.-444    	; 0x85e <main+0x128>
     a1a:	83 30       	cpi	r24, 0x03	; 3
     a1c:	91 05       	cpc	r25, r1
			while(1){
				unsigned int key = my_getkey();
     a1e:	09 f0       	breq	.+2      	; 0xa22 <main+0x2ec>
     a20:	af c0       	rjmp	.+350    	; 0xb80 <main+0x44a>
     a22:	cf db       	rcall	.-2146   	; 0x1c2 <_Z9my_getkeyv>
				lcd_putsf(0,0,(unsigned char*)"Changes Mode    ");
     a24:	5c 01       	movw	r10, r24
     a26:	41 ea       	ldi	r20, 0xA1	; 161
     a28:	51 e0       	ldi	r21, 0x01	; 1
     a2a:	60 e0       	ldi	r22, 0x00	; 0
     a2c:	80 e0       	ldi	r24, 0x00	; 0
     a2e:	80 db       	rcall	.-2304   	; 0x130 <_Z9lcd_putsfhhPh>
				key_input(key);
     a30:	c5 01       	movw	r24, r10
     a32:	e0 dc       	rcall	.-1600   	; 0x3f4 <_Z9key_inputj>
     a34:	3d e8       	ldi	r19, 0x8D	; 141

				if(key == sw8){
     a36:	a3 16       	cp	r10, r19
     a38:	b1 04       	cpc	r11, r1
     a3a:	09 f0       	breq	.+2      	; 0xa3e <main+0x308>
     a3c:	dc c0       	rjmp	.+440    	; 0xbf6 <main+0x4c0>
     a3e:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
					if(total_sum > sum) error_flag = true;
     a42:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x1>
     a46:	a0 91 c6 01 	lds	r26, 0x01C6	; 0x8001c6 <__data_end+0x2>
     a4a:	b0 91 c7 01 	lds	r27, 0x01C7	; 0x8001c7 <__data_end+0x3>
     a4e:	84 15       	cp	r24, r4
     a50:	95 05       	cpc	r25, r5
     a52:	a6 05       	cpc	r26, r6
     a54:	b7 05       	cpc	r27, r7
     a56:	24 f4       	brge	.+8      	; 0xa60 <main+0x32a>
     a58:	41 e0       	ldi	r20, 0x01	; 1
     a5a:	40 93 db 01 	sts	0x01DB, r20	; 0x8001db <error_flag>
     a5e:	24 c0       	rjmp	.+72     	; 0xaa8 <main+0x372>
     a60:	29 81       	ldd	r18, Y+1	; 0x01
					else{
						total_sale += total_sum;
     a62:	3a 81       	ldd	r19, Y+2	; 0x02
     a64:	4b 81       	ldd	r20, Y+3	; 0x03
     a66:	5c 81       	ldd	r21, Y+4	; 0x04
     a68:	24 0d       	add	r18, r4
     a6a:	35 1d       	adc	r19, r5
     a6c:	46 1d       	adc	r20, r6
     a6e:	57 1d       	adc	r21, r7
     a70:	29 83       	std	Y+1, r18	; 0x01
     a72:	3a 83       	std	Y+2, r19	; 0x02
     a74:	4b 83       	std	Y+3, r20	; 0x03
     a76:	5c 83       	std	Y+4, r21	; 0x04
						sum = sum - total_sum;
     a78:	84 19       	sub	r24, r4
     a7a:	95 09       	sbc	r25, r5
     a7c:	a6 09       	sbc	r26, r6
     a7e:	b7 09       	sbc	r27, r7
     a80:	80 93 c4 01 	sts	0x01C4, r24	; 0x8001c4 <__data_end>
     a84:	90 93 c5 01 	sts	0x01C5, r25	; 0x8001c5 <__data_end+0x1>
     a88:	a0 93 c6 01 	sts	0x01C6, r26	; 0x8001c6 <__data_end+0x2>
     a8c:	b0 93 c7 01 	sts	0x01C7, r27	; 0x8001c7 <__data_end+0x3>
						total_sum = 0;
						endtime_flag = true;
     a90:	31 e0       	ldi	r19, 0x01	; 1
     a92:	30 93 d9 01 	sts	0x01D9, r19	; 0x8001d9 <endtime_flag>
						lcd_clear();
     a96:	8e db       	rcall	.-2276   	; 0x1b4 <_Z9lcd_clearv>
					}
				}
				
				if(error_flag){
     a98:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <error_flag>
     a9c:	88 23       	and	r24, r24
     a9e:	09 f4       	brne	.+2      	; 0xaa2 <main+0x36c>
     aa0:	38 c0       	rjmp	.+112    	; 0xb12 <main+0x3dc>
				if(key == sw8){
					if(total_sum > sum) error_flag = true;
					else{
						total_sale += total_sum;
						sum = sum - total_sum;
						total_sum = 0;
     aa2:	41 2c       	mov	r4, r1
     aa4:	51 2c       	mov	r5, r1
     aa6:	32 01       	movw	r6, r4
     aa8:	0f 2e       	mov	r0, r31
     aaa:	f3 e0       	ldi	r31, 0x03	; 3
     aac:	cf 2e       	mov	r12, r31
     aae:	d1 2c       	mov	r13, r1
					}
				}
				
				if(error_flag){
					for(int i=0;i<3;i++){
						sprintf(str,"     ERROR!     ");
     ab0:	f0 2d       	mov	r31, r0
     ab2:	81 e1       	ldi	r24, 0x11	; 17
     ab4:	ee e7       	ldi	r30, 0x7E	; 126
     ab6:	f1 e0       	ldi	r31, 0x01	; 1
     ab8:	d8 01       	movw	r26, r16
     aba:	01 90       	ld	r0, Z+
     abc:	0d 92       	st	X+, r0
     abe:	8a 95       	dec	r24
						lcd_putsf(0,1,(unsigned char*)str);
     ac0:	e1 f7       	brne	.-8      	; 0xaba <main+0x384>
     ac2:	a8 01       	movw	r20, r16
     ac4:	61 e0       	ldi	r22, 0x01	; 1
     ac6:	80 e0       	ldi	r24, 0x00	; 0
     ac8:	33 db       	rcall	.-2458   	; 0x130 <_Z9lcd_putsfhhPh>
     aca:	88 ee       	ldi	r24, 0xE8	; 232
     acc:	93 e0       	ldi	r25, 0x03	; 3
     ace:	e0 e9       	ldi	r30, 0x90	; 144
     ad0:	f1 e0       	ldi	r31, 0x01	; 1
     ad2:	31 97       	sbiw	r30, 0x01	; 1
     ad4:	f1 f7       	brne	.-4      	; 0xad2 <main+0x39c>
     ad6:	01 97       	sbiw	r24, 0x01	; 1
     ad8:	d1 f7       	brne	.-12     	; 0xace <main+0x398>
						_delay_ms(100);
						lcd_clear();
     ada:	6c db       	rcall	.-2344   	; 0x1b4 <_Z9lcd_clearv>
     adc:	88 ee       	ldi	r24, 0xE8	; 232
     ade:	93 e0       	ldi	r25, 0x03	; 3
     ae0:	e0 e9       	ldi	r30, 0x90	; 144
     ae2:	f1 e0       	ldi	r31, 0x01	; 1
     ae4:	31 97       	sbiw	r30, 0x01	; 1
     ae6:	f1 f7       	brne	.-4      	; 0xae4 <main+0x3ae>
     ae8:	01 97       	sbiw	r24, 0x01	; 1
     aea:	d1 f7       	brne	.-12     	; 0xae0 <main+0x3aa>
     aec:	41 e0       	ldi	r20, 0x01	; 1
     aee:	c4 1a       	sub	r12, r20
     af0:	d1 08       	sbc	r13, r1
     af2:	f9 f6       	brne	.-66     	; 0xab2 <main+0x37c>
						lcd_clear();
					}
				}
				
				if(error_flag){
					for(int i=0;i<3;i++){
     af4:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <__data_end>
						lcd_putsf(0,1,(unsigned char*)str);
						_delay_ms(100);
						lcd_clear();
						_delay_ms(100);
					}
					sum = 0;
     af8:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <__data_end+0x1>
     afc:	10 92 c6 01 	sts	0x01C6, r1	; 0x8001c6 <__data_end+0x2>
     b00:	10 92 c7 01 	sts	0x01C7, r1	; 0x8001c7 <__data_end+0x3>
     b04:	10 92 db 01 	sts	0x01DB, r1	; 0x8001db <error_flag>
					error_flag = false;
     b08:	57 e8       	ldi	r21, 0x87	; 135
				}				
				
				if(key == sw15 || end_flag){
     b0a:	a5 16       	cp	r10, r21
     b0c:	b1 04       	cpc	r11, r1
     b0e:	21 f4       	brne	.+8      	; 0xb18 <main+0x3e2>
     b10:	07 c0       	rjmp	.+14     	; 0xb20 <main+0x3ea>
     b12:	41 2c       	mov	r4, r1
				if(key == sw8){
					if(total_sum > sum) error_flag = true;
					else{
						total_sale += total_sum;
						sum = sum - total_sum;
						total_sum = 0;
     b14:	51 2c       	mov	r5, r1
     b16:	32 01       	movw	r6, r4
     b18:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <end_flag>
					}
					sum = 0;
					error_flag = false;
				}				
				
				if(key == sw15 || end_flag){
     b1c:	88 23       	and	r24, r24
     b1e:	a9 f0       	breq	.+42     	; 0xb4a <main+0x414>
     b20:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <mode+0x1>
					mode = CLOCK;
     b24:	10 92 dc 01 	sts	0x01DC, r1	; 0x8001dc <mode>
     b28:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <end_time+0x1>
					end_time = 0;
     b2c:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <end_time>
     b30:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <__data_end>
					sum = 0;
     b34:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <__data_end+0x1>
     b38:	10 92 c6 01 	sts	0x01C6, r1	; 0x8001c6 <__data_end+0x2>
     b3c:	10 92 c7 01 	sts	0x01C7, r1	; 0x8001c7 <__data_end+0x3>
					endtime_flag = false;
     b40:	10 92 d9 01 	sts	0x01D9, r1	; 0x8001d9 <endtime_flag>
					end_flag = false;
     b44:	10 92 d8 01 	sts	0x01D8, r1	; 0x8001d8 <end_flag>
					break;
				}
				
				sprintf(str,"    %ld",sum);
     b48:	1b ce       	rjmp	.-970    	; 0x780 <main+0x4a>
     b4a:	80 91 c7 01 	lds	r24, 0x01C7	; 0x8001c7 <__data_end+0x3>
     b4e:	8f 93       	push	r24
     b50:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end+0x2>
     b54:	8f 93       	push	r24
     b56:	80 91 c5 01 	lds	r24, 0x01C5	; 0x8001c5 <__data_end+0x1>
     b5a:	8f 93       	push	r24
     b5c:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end>
     b60:	8f 93       	push	r24
     b62:	3f 92       	push	r3
     b64:	2f 92       	push	r2
     b66:	1f 93       	push	r17
				lcd_putsf(0,1,(unsigned char*)str);
     b68:	0f 93       	push	r16
     b6a:	4b d0       	rcall	.+150    	; 0xc02 <sprintf>
     b6c:	a8 01       	movw	r20, r16
     b6e:	61 e0       	ldi	r22, 0x01	; 1
     b70:	80 e0       	ldi	r24, 0x00	; 0
				lcd_putsf(0,1,(unsigned char*)str);
			}
		}

		else if(mode == CHANGE){
			while(1){
     b72:	de da       	rcall	.-2628   	; 0x130 <_Z9lcd_putsfhhPh>
     b74:	0f b6       	in	r0, 0x3f	; 63
     b76:	f8 94       	cli
     b78:	de bf       	out	0x3e, r29	; 62
     b7a:	0f be       	out	0x3f, r0	; 63
     b7c:	cd bf       	out	0x3d, r28	; 61
				lcd_putsf(0,1,(unsigned char*)str);
				
			}
		}

		else if(mode == TOTAL){
     b7e:	51 cf       	rjmp	.-350    	; 0xa22 <main+0x2ec>
     b80:	04 97       	sbiw	r24, 0x04	; 4
			endtime_flag = true;
     b82:	09 f0       	breq	.+2      	; 0xb86 <main+0x450>
     b84:	fd cd       	rjmp	.-1030   	; 0x780 <main+0x4a>
     b86:	81 e0       	ldi	r24, 0x01	; 1
			lcd_clear();
     b88:	80 93 d9 01 	sts	0x01D9, r24	; 0x8001d9 <endtime_flag>
			while(1){
				unsigned int key = my_getkey();
     b8c:	13 db       	rcall	.-2522   	; 0x1b4 <_Z9lcd_clearv>
     b8e:	19 db       	rcall	.-2510   	; 0x1c2 <_Z9my_getkeyv>
				
				if(key == sw15 || end_flag){
     b90:	87 38       	cpi	r24, 0x87	; 135
     b92:	91 05       	cpc	r25, r1
     b94:	21 f0       	breq	.+8      	; 0xb9e <main+0x468>
     b96:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <end_flag>
     b9a:	88 23       	and	r24, r24
					mode = CLOCK;
     b9c:	69 f0       	breq	.+26     	; 0xbb8 <main+0x482>
     b9e:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <mode+0x1>
     ba2:	10 92 dc 01 	sts	0x01DC, r1	; 0x8001dc <mode>
					end_time = 0;
     ba6:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <end_time+0x1>
					endtime_flag = end_flag = false;
     baa:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <end_time>
     bae:	10 92 d8 01 	sts	0x01D8, r1	; 0x8001d8 <end_flag>
     bb2:	10 92 d9 01 	sts	0x01D9, r1	; 0x8001d9 <endtime_flag>
					break;
				}
				
				lcd_putsf(0,0,(unsigned char*)"Total Sales     ");
     bb6:	e4 cd       	rjmp	.-1080   	; 0x780 <main+0x4a>
     bb8:	42 eb       	ldi	r20, 0xB2	; 178
     bba:	51 e0       	ldi	r21, 0x01	; 1
     bbc:	60 e0       	ldi	r22, 0x00	; 0
     bbe:	80 e0       	ldi	r24, 0x00	; 0
				sprintf(str,"= %ld won",total_sale);
     bc0:	b7 da       	rcall	.-2706   	; 0x130 <_Z9lcd_putsfhhPh>
     bc2:	9c 81       	ldd	r25, Y+4	; 0x04
     bc4:	9f 93       	push	r25
     bc6:	2b 81       	ldd	r18, Y+3	; 0x03
     bc8:	2f 93       	push	r18
     bca:	3a 81       	ldd	r19, Y+2	; 0x02
     bcc:	3f 93       	push	r19
     bce:	49 81       	ldd	r20, Y+1	; 0x01
     bd0:	4f 93       	push	r20
     bd2:	87 e9       	ldi	r24, 0x97	; 151
     bd4:	91 e0       	ldi	r25, 0x01	; 1
     bd6:	9f 93       	push	r25
     bd8:	8f 93       	push	r24
     bda:	1f 93       	push	r17
     bdc:	0f 93       	push	r16
     bde:	11 d0       	rcall	.+34     	; 0xc02 <sprintf>
				lcd_putsf(0,1,(unsigned char*)str);
     be0:	48 2d       	mov	r20, r8
     be2:	59 2d       	mov	r21, r9
     be4:	61 e0       	ldi	r22, 0x01	; 1
     be6:	80 e0       	ldi	r24, 0x00	; 0
     be8:	a3 da       	rcall	.-2746   	; 0x130 <_Z9lcd_putsfhhPh>
     bea:	0f b6       	in	r0, 0x3f	; 63
		}

		else if(mode == TOTAL){
			endtime_flag = true;
			lcd_clear();
			while(1){
     bec:	f8 94       	cli
     bee:	de bf       	out	0x3e, r29	; 62
     bf0:	0f be       	out	0x3f, r0	; 63
     bf2:	cd bf       	out	0x3d, r28	; 61
     bf4:	cc cf       	rjmp	.-104    	; 0xb8e <main+0x458>
     bf6:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <error_flag>
						endtime_flag = true;
						lcd_clear();
					}
				}
				
				if(error_flag){
     bfa:	88 23       	and	r24, r24
     bfc:	09 f4       	brne	.+2      	; 0xc00 <main+0x4ca>
     bfe:	84 cf       	rjmp	.-248    	; 0xb08 <main+0x3d2>
     c00:	53 cf       	rjmp	.-346    	; 0xaa8 <main+0x372>

00000c02 <sprintf>:
     c02:	0f 93       	push	r16
     c04:	1f 93       	push	r17
     c06:	cf 93       	push	r28
     c08:	df 93       	push	r29
     c0a:	cd b7       	in	r28, 0x3d	; 61
     c0c:	de b7       	in	r29, 0x3e	; 62
     c0e:	2e 97       	sbiw	r28, 0x0e	; 14
     c10:	0f b6       	in	r0, 0x3f	; 63
     c12:	f8 94       	cli
     c14:	de bf       	out	0x3e, r29	; 62
     c16:	0f be       	out	0x3f, r0	; 63
     c18:	cd bf       	out	0x3d, r28	; 61
     c1a:	0d 89       	ldd	r16, Y+21	; 0x15
     c1c:	1e 89       	ldd	r17, Y+22	; 0x16
     c1e:	86 e0       	ldi	r24, 0x06	; 6
     c20:	8c 83       	std	Y+4, r24	; 0x04
     c22:	1a 83       	std	Y+2, r17	; 0x02
     c24:	09 83       	std	Y+1, r16	; 0x01
     c26:	8f ef       	ldi	r24, 0xFF	; 255
     c28:	9f e7       	ldi	r25, 0x7F	; 127
     c2a:	9e 83       	std	Y+6, r25	; 0x06
     c2c:	8d 83       	std	Y+5, r24	; 0x05
     c2e:	ae 01       	movw	r20, r28
     c30:	47 5e       	subi	r20, 0xE7	; 231
     c32:	5f 4f       	sbci	r21, 0xFF	; 255
     c34:	6f 89       	ldd	r22, Y+23	; 0x17
     c36:	78 8d       	ldd	r23, Y+24	; 0x18
     c38:	ce 01       	movw	r24, r28
     c3a:	01 96       	adiw	r24, 0x01	; 1
     c3c:	10 d0       	rcall	.+32     	; 0xc5e <vfprintf>
     c3e:	ef 81       	ldd	r30, Y+7	; 0x07
     c40:	f8 85       	ldd	r31, Y+8	; 0x08
     c42:	e0 0f       	add	r30, r16
     c44:	f1 1f       	adc	r31, r17
     c46:	10 82       	st	Z, r1
     c48:	2e 96       	adiw	r28, 0x0e	; 14
     c4a:	0f b6       	in	r0, 0x3f	; 63
     c4c:	f8 94       	cli
     c4e:	de bf       	out	0x3e, r29	; 62
     c50:	0f be       	out	0x3f, r0	; 63
     c52:	cd bf       	out	0x3d, r28	; 61
     c54:	df 91       	pop	r29
     c56:	cf 91       	pop	r28
     c58:	1f 91       	pop	r17
     c5a:	0f 91       	pop	r16
     c5c:	08 95       	ret

00000c5e <vfprintf>:
     c5e:	2f 92       	push	r2
     c60:	3f 92       	push	r3
     c62:	4f 92       	push	r4
     c64:	5f 92       	push	r5
     c66:	6f 92       	push	r6
     c68:	7f 92       	push	r7
     c6a:	8f 92       	push	r8
     c6c:	9f 92       	push	r9
     c6e:	af 92       	push	r10
     c70:	bf 92       	push	r11
     c72:	cf 92       	push	r12
     c74:	df 92       	push	r13
     c76:	ef 92       	push	r14
     c78:	ff 92       	push	r15
     c7a:	0f 93       	push	r16
     c7c:	1f 93       	push	r17
     c7e:	cf 93       	push	r28
     c80:	df 93       	push	r29
     c82:	cd b7       	in	r28, 0x3d	; 61
     c84:	de b7       	in	r29, 0x3e	; 62
     c86:	2b 97       	sbiw	r28, 0x0b	; 11
     c88:	0f b6       	in	r0, 0x3f	; 63
     c8a:	f8 94       	cli
     c8c:	de bf       	out	0x3e, r29	; 62
     c8e:	0f be       	out	0x3f, r0	; 63
     c90:	cd bf       	out	0x3d, r28	; 61
     c92:	6c 01       	movw	r12, r24
     c94:	7b 01       	movw	r14, r22
     c96:	8a 01       	movw	r16, r20
     c98:	fc 01       	movw	r30, r24
     c9a:	17 82       	std	Z+7, r1	; 0x07
     c9c:	16 82       	std	Z+6, r1	; 0x06
     c9e:	83 81       	ldd	r24, Z+3	; 0x03
     ca0:	81 ff       	sbrs	r24, 1
     ca2:	bf c1       	rjmp	.+894    	; 0x1022 <vfprintf+0x3c4>
     ca4:	ce 01       	movw	r24, r28
     ca6:	01 96       	adiw	r24, 0x01	; 1
     ca8:	3c 01       	movw	r6, r24
     caa:	f6 01       	movw	r30, r12
     cac:	93 81       	ldd	r25, Z+3	; 0x03
     cae:	f7 01       	movw	r30, r14
     cb0:	93 fd       	sbrc	r25, 3
     cb2:	85 91       	lpm	r24, Z+
     cb4:	93 ff       	sbrs	r25, 3
     cb6:	81 91       	ld	r24, Z+
     cb8:	7f 01       	movw	r14, r30
     cba:	88 23       	and	r24, r24
     cbc:	09 f4       	brne	.+2      	; 0xcc0 <vfprintf+0x62>
     cbe:	ad c1       	rjmp	.+858    	; 0x101a <vfprintf+0x3bc>
     cc0:	85 32       	cpi	r24, 0x25	; 37
     cc2:	39 f4       	brne	.+14     	; 0xcd2 <vfprintf+0x74>
     cc4:	93 fd       	sbrc	r25, 3
     cc6:	85 91       	lpm	r24, Z+
     cc8:	93 ff       	sbrs	r25, 3
     cca:	81 91       	ld	r24, Z+
     ccc:	7f 01       	movw	r14, r30
     cce:	85 32       	cpi	r24, 0x25	; 37
     cd0:	21 f4       	brne	.+8      	; 0xcda <vfprintf+0x7c>
     cd2:	b6 01       	movw	r22, r12
     cd4:	90 e0       	ldi	r25, 0x00	; 0
     cd6:	d6 d1       	rcall	.+940    	; 0x1084 <fputc>
     cd8:	e8 cf       	rjmp	.-48     	; 0xcaa <vfprintf+0x4c>
     cda:	91 2c       	mov	r9, r1
     cdc:	21 2c       	mov	r2, r1
     cde:	31 2c       	mov	r3, r1
     ce0:	ff e1       	ldi	r31, 0x1F	; 31
     ce2:	f3 15       	cp	r31, r3
     ce4:	d8 f0       	brcs	.+54     	; 0xd1c <vfprintf+0xbe>
     ce6:	8b 32       	cpi	r24, 0x2B	; 43
     ce8:	79 f0       	breq	.+30     	; 0xd08 <vfprintf+0xaa>
     cea:	38 f4       	brcc	.+14     	; 0xcfa <vfprintf+0x9c>
     cec:	80 32       	cpi	r24, 0x20	; 32
     cee:	79 f0       	breq	.+30     	; 0xd0e <vfprintf+0xb0>
     cf0:	83 32       	cpi	r24, 0x23	; 35
     cf2:	a1 f4       	brne	.+40     	; 0xd1c <vfprintf+0xbe>
     cf4:	23 2d       	mov	r18, r3
     cf6:	20 61       	ori	r18, 0x10	; 16
     cf8:	1d c0       	rjmp	.+58     	; 0xd34 <vfprintf+0xd6>
     cfa:	8d 32       	cpi	r24, 0x2D	; 45
     cfc:	61 f0       	breq	.+24     	; 0xd16 <vfprintf+0xb8>
     cfe:	80 33       	cpi	r24, 0x30	; 48
     d00:	69 f4       	brne	.+26     	; 0xd1c <vfprintf+0xbe>
     d02:	23 2d       	mov	r18, r3
     d04:	21 60       	ori	r18, 0x01	; 1
     d06:	16 c0       	rjmp	.+44     	; 0xd34 <vfprintf+0xd6>
     d08:	83 2d       	mov	r24, r3
     d0a:	82 60       	ori	r24, 0x02	; 2
     d0c:	38 2e       	mov	r3, r24
     d0e:	e3 2d       	mov	r30, r3
     d10:	e4 60       	ori	r30, 0x04	; 4
     d12:	3e 2e       	mov	r3, r30
     d14:	2a c0       	rjmp	.+84     	; 0xd6a <vfprintf+0x10c>
     d16:	f3 2d       	mov	r31, r3
     d18:	f8 60       	ori	r31, 0x08	; 8
     d1a:	1d c0       	rjmp	.+58     	; 0xd56 <vfprintf+0xf8>
     d1c:	37 fc       	sbrc	r3, 7
     d1e:	2d c0       	rjmp	.+90     	; 0xd7a <vfprintf+0x11c>
     d20:	20 ed       	ldi	r18, 0xD0	; 208
     d22:	28 0f       	add	r18, r24
     d24:	2a 30       	cpi	r18, 0x0A	; 10
     d26:	40 f0       	brcs	.+16     	; 0xd38 <vfprintf+0xda>
     d28:	8e 32       	cpi	r24, 0x2E	; 46
     d2a:	b9 f4       	brne	.+46     	; 0xd5a <vfprintf+0xfc>
     d2c:	36 fc       	sbrc	r3, 6
     d2e:	75 c1       	rjmp	.+746    	; 0x101a <vfprintf+0x3bc>
     d30:	23 2d       	mov	r18, r3
     d32:	20 64       	ori	r18, 0x40	; 64
     d34:	32 2e       	mov	r3, r18
     d36:	19 c0       	rjmp	.+50     	; 0xd6a <vfprintf+0x10c>
     d38:	36 fe       	sbrs	r3, 6
     d3a:	06 c0       	rjmp	.+12     	; 0xd48 <vfprintf+0xea>
     d3c:	8a e0       	ldi	r24, 0x0A	; 10
     d3e:	98 9e       	mul	r9, r24
     d40:	20 0d       	add	r18, r0
     d42:	11 24       	eor	r1, r1
     d44:	92 2e       	mov	r9, r18
     d46:	11 c0       	rjmp	.+34     	; 0xd6a <vfprintf+0x10c>
     d48:	ea e0       	ldi	r30, 0x0A	; 10
     d4a:	2e 9e       	mul	r2, r30
     d4c:	20 0d       	add	r18, r0
     d4e:	11 24       	eor	r1, r1
     d50:	22 2e       	mov	r2, r18
     d52:	f3 2d       	mov	r31, r3
     d54:	f0 62       	ori	r31, 0x20	; 32
     d56:	3f 2e       	mov	r3, r31
     d58:	08 c0       	rjmp	.+16     	; 0xd6a <vfprintf+0x10c>
     d5a:	8c 36       	cpi	r24, 0x6C	; 108
     d5c:	21 f4       	brne	.+8      	; 0xd66 <vfprintf+0x108>
     d5e:	83 2d       	mov	r24, r3
     d60:	80 68       	ori	r24, 0x80	; 128
     d62:	38 2e       	mov	r3, r24
     d64:	02 c0       	rjmp	.+4      	; 0xd6a <vfprintf+0x10c>
     d66:	88 36       	cpi	r24, 0x68	; 104
     d68:	41 f4       	brne	.+16     	; 0xd7a <vfprintf+0x11c>
     d6a:	f7 01       	movw	r30, r14
     d6c:	93 fd       	sbrc	r25, 3
     d6e:	85 91       	lpm	r24, Z+
     d70:	93 ff       	sbrs	r25, 3
     d72:	81 91       	ld	r24, Z+
     d74:	7f 01       	movw	r14, r30
     d76:	81 11       	cpse	r24, r1
     d78:	b3 cf       	rjmp	.-154    	; 0xce0 <vfprintf+0x82>
     d7a:	98 2f       	mov	r25, r24
     d7c:	9f 7d       	andi	r25, 0xDF	; 223
     d7e:	95 54       	subi	r25, 0x45	; 69
     d80:	93 30       	cpi	r25, 0x03	; 3
     d82:	28 f4       	brcc	.+10     	; 0xd8e <vfprintf+0x130>
     d84:	0c 5f       	subi	r16, 0xFC	; 252
     d86:	1f 4f       	sbci	r17, 0xFF	; 255
     d88:	9f e3       	ldi	r25, 0x3F	; 63
     d8a:	99 83       	std	Y+1, r25	; 0x01
     d8c:	0d c0       	rjmp	.+26     	; 0xda8 <vfprintf+0x14a>
     d8e:	83 36       	cpi	r24, 0x63	; 99
     d90:	31 f0       	breq	.+12     	; 0xd9e <vfprintf+0x140>
     d92:	83 37       	cpi	r24, 0x73	; 115
     d94:	71 f0       	breq	.+28     	; 0xdb2 <vfprintf+0x154>
     d96:	83 35       	cpi	r24, 0x53	; 83
     d98:	09 f0       	breq	.+2      	; 0xd9c <vfprintf+0x13e>
     d9a:	55 c0       	rjmp	.+170    	; 0xe46 <vfprintf+0x1e8>
     d9c:	20 c0       	rjmp	.+64     	; 0xdde <vfprintf+0x180>
     d9e:	f8 01       	movw	r30, r16
     da0:	80 81       	ld	r24, Z
     da2:	89 83       	std	Y+1, r24	; 0x01
     da4:	0e 5f       	subi	r16, 0xFE	; 254
     da6:	1f 4f       	sbci	r17, 0xFF	; 255
     da8:	88 24       	eor	r8, r8
     daa:	83 94       	inc	r8
     dac:	91 2c       	mov	r9, r1
     dae:	53 01       	movw	r10, r6
     db0:	12 c0       	rjmp	.+36     	; 0xdd6 <vfprintf+0x178>
     db2:	28 01       	movw	r4, r16
     db4:	f2 e0       	ldi	r31, 0x02	; 2
     db6:	4f 0e       	add	r4, r31
     db8:	51 1c       	adc	r5, r1
     dba:	f8 01       	movw	r30, r16
     dbc:	a0 80       	ld	r10, Z
     dbe:	b1 80       	ldd	r11, Z+1	; 0x01
     dc0:	36 fe       	sbrs	r3, 6
     dc2:	03 c0       	rjmp	.+6      	; 0xdca <vfprintf+0x16c>
     dc4:	69 2d       	mov	r22, r9
     dc6:	70 e0       	ldi	r23, 0x00	; 0
     dc8:	02 c0       	rjmp	.+4      	; 0xdce <vfprintf+0x170>
     dca:	6f ef       	ldi	r22, 0xFF	; 255
     dcc:	7f ef       	ldi	r23, 0xFF	; 255
     dce:	c5 01       	movw	r24, r10
     dd0:	4e d1       	rcall	.+668    	; 0x106e <strnlen>
     dd2:	4c 01       	movw	r8, r24
     dd4:	82 01       	movw	r16, r4
     dd6:	f3 2d       	mov	r31, r3
     dd8:	ff 77       	andi	r31, 0x7F	; 127
     dda:	3f 2e       	mov	r3, r31
     ddc:	15 c0       	rjmp	.+42     	; 0xe08 <vfprintf+0x1aa>
     dde:	28 01       	movw	r4, r16
     de0:	22 e0       	ldi	r18, 0x02	; 2
     de2:	42 0e       	add	r4, r18
     de4:	51 1c       	adc	r5, r1
     de6:	f8 01       	movw	r30, r16
     de8:	a0 80       	ld	r10, Z
     dea:	b1 80       	ldd	r11, Z+1	; 0x01
     dec:	36 fe       	sbrs	r3, 6
     dee:	03 c0       	rjmp	.+6      	; 0xdf6 <vfprintf+0x198>
     df0:	69 2d       	mov	r22, r9
     df2:	70 e0       	ldi	r23, 0x00	; 0
     df4:	02 c0       	rjmp	.+4      	; 0xdfa <vfprintf+0x19c>
     df6:	6f ef       	ldi	r22, 0xFF	; 255
     df8:	7f ef       	ldi	r23, 0xFF	; 255
     dfa:	c5 01       	movw	r24, r10
     dfc:	2d d1       	rcall	.+602    	; 0x1058 <strnlen_P>
     dfe:	4c 01       	movw	r8, r24
     e00:	f3 2d       	mov	r31, r3
     e02:	f0 68       	ori	r31, 0x80	; 128
     e04:	3f 2e       	mov	r3, r31
     e06:	82 01       	movw	r16, r4
     e08:	33 fc       	sbrc	r3, 3
     e0a:	19 c0       	rjmp	.+50     	; 0xe3e <vfprintf+0x1e0>
     e0c:	82 2d       	mov	r24, r2
     e0e:	90 e0       	ldi	r25, 0x00	; 0
     e10:	88 16       	cp	r8, r24
     e12:	99 06       	cpc	r9, r25
     e14:	a0 f4       	brcc	.+40     	; 0xe3e <vfprintf+0x1e0>
     e16:	b6 01       	movw	r22, r12
     e18:	80 e2       	ldi	r24, 0x20	; 32
     e1a:	90 e0       	ldi	r25, 0x00	; 0
     e1c:	33 d1       	rcall	.+614    	; 0x1084 <fputc>
     e1e:	2a 94       	dec	r2
     e20:	f5 cf       	rjmp	.-22     	; 0xe0c <vfprintf+0x1ae>
     e22:	f5 01       	movw	r30, r10
     e24:	37 fc       	sbrc	r3, 7
     e26:	85 91       	lpm	r24, Z+
     e28:	37 fe       	sbrs	r3, 7
     e2a:	81 91       	ld	r24, Z+
     e2c:	5f 01       	movw	r10, r30
     e2e:	b6 01       	movw	r22, r12
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	28 d1       	rcall	.+592    	; 0x1084 <fputc>
     e34:	21 10       	cpse	r2, r1
     e36:	2a 94       	dec	r2
     e38:	21 e0       	ldi	r18, 0x01	; 1
     e3a:	82 1a       	sub	r8, r18
     e3c:	91 08       	sbc	r9, r1
     e3e:	81 14       	cp	r8, r1
     e40:	91 04       	cpc	r9, r1
     e42:	79 f7       	brne	.-34     	; 0xe22 <vfprintf+0x1c4>
     e44:	e1 c0       	rjmp	.+450    	; 0x1008 <vfprintf+0x3aa>
     e46:	84 36       	cpi	r24, 0x64	; 100
     e48:	11 f0       	breq	.+4      	; 0xe4e <vfprintf+0x1f0>
     e4a:	89 36       	cpi	r24, 0x69	; 105
     e4c:	39 f5       	brne	.+78     	; 0xe9c <vfprintf+0x23e>
     e4e:	f8 01       	movw	r30, r16
     e50:	37 fe       	sbrs	r3, 7
     e52:	07 c0       	rjmp	.+14     	; 0xe62 <vfprintf+0x204>
     e54:	60 81       	ld	r22, Z
     e56:	71 81       	ldd	r23, Z+1	; 0x01
     e58:	82 81       	ldd	r24, Z+2	; 0x02
     e5a:	93 81       	ldd	r25, Z+3	; 0x03
     e5c:	0c 5f       	subi	r16, 0xFC	; 252
     e5e:	1f 4f       	sbci	r17, 0xFF	; 255
     e60:	08 c0       	rjmp	.+16     	; 0xe72 <vfprintf+0x214>
     e62:	60 81       	ld	r22, Z
     e64:	71 81       	ldd	r23, Z+1	; 0x01
     e66:	07 2e       	mov	r0, r23
     e68:	00 0c       	add	r0, r0
     e6a:	88 0b       	sbc	r24, r24
     e6c:	99 0b       	sbc	r25, r25
     e6e:	0e 5f       	subi	r16, 0xFE	; 254
     e70:	1f 4f       	sbci	r17, 0xFF	; 255
     e72:	f3 2d       	mov	r31, r3
     e74:	ff 76       	andi	r31, 0x6F	; 111
     e76:	3f 2e       	mov	r3, r31
     e78:	97 ff       	sbrs	r25, 7
     e7a:	09 c0       	rjmp	.+18     	; 0xe8e <vfprintf+0x230>
     e7c:	90 95       	com	r25
     e7e:	80 95       	com	r24
     e80:	70 95       	com	r23
     e82:	61 95       	neg	r22
     e84:	7f 4f       	sbci	r23, 0xFF	; 255
     e86:	8f 4f       	sbci	r24, 0xFF	; 255
     e88:	9f 4f       	sbci	r25, 0xFF	; 255
     e8a:	f0 68       	ori	r31, 0x80	; 128
     e8c:	3f 2e       	mov	r3, r31
     e8e:	2a e0       	ldi	r18, 0x0A	; 10
     e90:	30 e0       	ldi	r19, 0x00	; 0
     e92:	a3 01       	movw	r20, r6
     e94:	33 d1       	rcall	.+614    	; 0x10fc <__ultoa_invert>
     e96:	88 2e       	mov	r8, r24
     e98:	86 18       	sub	r8, r6
     e9a:	44 c0       	rjmp	.+136    	; 0xf24 <vfprintf+0x2c6>
     e9c:	85 37       	cpi	r24, 0x75	; 117
     e9e:	31 f4       	brne	.+12     	; 0xeac <vfprintf+0x24e>
     ea0:	23 2d       	mov	r18, r3
     ea2:	2f 7e       	andi	r18, 0xEF	; 239
     ea4:	b2 2e       	mov	r11, r18
     ea6:	2a e0       	ldi	r18, 0x0A	; 10
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	25 c0       	rjmp	.+74     	; 0xef6 <vfprintf+0x298>
     eac:	93 2d       	mov	r25, r3
     eae:	99 7f       	andi	r25, 0xF9	; 249
     eb0:	b9 2e       	mov	r11, r25
     eb2:	8f 36       	cpi	r24, 0x6F	; 111
     eb4:	c1 f0       	breq	.+48     	; 0xee6 <vfprintf+0x288>
     eb6:	18 f4       	brcc	.+6      	; 0xebe <vfprintf+0x260>
     eb8:	88 35       	cpi	r24, 0x58	; 88
     eba:	79 f0       	breq	.+30     	; 0xeda <vfprintf+0x27c>
     ebc:	ae c0       	rjmp	.+348    	; 0x101a <vfprintf+0x3bc>
     ebe:	80 37       	cpi	r24, 0x70	; 112
     ec0:	19 f0       	breq	.+6      	; 0xec8 <vfprintf+0x26a>
     ec2:	88 37       	cpi	r24, 0x78	; 120
     ec4:	21 f0       	breq	.+8      	; 0xece <vfprintf+0x270>
     ec6:	a9 c0       	rjmp	.+338    	; 0x101a <vfprintf+0x3bc>
     ec8:	e9 2f       	mov	r30, r25
     eca:	e0 61       	ori	r30, 0x10	; 16
     ecc:	be 2e       	mov	r11, r30
     ece:	b4 fe       	sbrs	r11, 4
     ed0:	0d c0       	rjmp	.+26     	; 0xeec <vfprintf+0x28e>
     ed2:	fb 2d       	mov	r31, r11
     ed4:	f4 60       	ori	r31, 0x04	; 4
     ed6:	bf 2e       	mov	r11, r31
     ed8:	09 c0       	rjmp	.+18     	; 0xeec <vfprintf+0x28e>
     eda:	34 fe       	sbrs	r3, 4
     edc:	0a c0       	rjmp	.+20     	; 0xef2 <vfprintf+0x294>
     ede:	29 2f       	mov	r18, r25
     ee0:	26 60       	ori	r18, 0x06	; 6
     ee2:	b2 2e       	mov	r11, r18
     ee4:	06 c0       	rjmp	.+12     	; 0xef2 <vfprintf+0x294>
     ee6:	28 e0       	ldi	r18, 0x08	; 8
     ee8:	30 e0       	ldi	r19, 0x00	; 0
     eea:	05 c0       	rjmp	.+10     	; 0xef6 <vfprintf+0x298>
     eec:	20 e1       	ldi	r18, 0x10	; 16
     eee:	30 e0       	ldi	r19, 0x00	; 0
     ef0:	02 c0       	rjmp	.+4      	; 0xef6 <vfprintf+0x298>
     ef2:	20 e1       	ldi	r18, 0x10	; 16
     ef4:	32 e0       	ldi	r19, 0x02	; 2
     ef6:	f8 01       	movw	r30, r16
     ef8:	b7 fe       	sbrs	r11, 7
     efa:	07 c0       	rjmp	.+14     	; 0xf0a <vfprintf+0x2ac>
     efc:	60 81       	ld	r22, Z
     efe:	71 81       	ldd	r23, Z+1	; 0x01
     f00:	82 81       	ldd	r24, Z+2	; 0x02
     f02:	93 81       	ldd	r25, Z+3	; 0x03
     f04:	0c 5f       	subi	r16, 0xFC	; 252
     f06:	1f 4f       	sbci	r17, 0xFF	; 255
     f08:	06 c0       	rjmp	.+12     	; 0xf16 <vfprintf+0x2b8>
     f0a:	60 81       	ld	r22, Z
     f0c:	71 81       	ldd	r23, Z+1	; 0x01
     f0e:	80 e0       	ldi	r24, 0x00	; 0
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	0e 5f       	subi	r16, 0xFE	; 254
     f14:	1f 4f       	sbci	r17, 0xFF	; 255
     f16:	a3 01       	movw	r20, r6
     f18:	f1 d0       	rcall	.+482    	; 0x10fc <__ultoa_invert>
     f1a:	88 2e       	mov	r8, r24
     f1c:	86 18       	sub	r8, r6
     f1e:	fb 2d       	mov	r31, r11
     f20:	ff 77       	andi	r31, 0x7F	; 127
     f22:	3f 2e       	mov	r3, r31
     f24:	36 fe       	sbrs	r3, 6
     f26:	0d c0       	rjmp	.+26     	; 0xf42 <vfprintf+0x2e4>
     f28:	23 2d       	mov	r18, r3
     f2a:	2e 7f       	andi	r18, 0xFE	; 254
     f2c:	a2 2e       	mov	r10, r18
     f2e:	89 14       	cp	r8, r9
     f30:	58 f4       	brcc	.+22     	; 0xf48 <vfprintf+0x2ea>
     f32:	34 fe       	sbrs	r3, 4
     f34:	0b c0       	rjmp	.+22     	; 0xf4c <vfprintf+0x2ee>
     f36:	32 fc       	sbrc	r3, 2
     f38:	09 c0       	rjmp	.+18     	; 0xf4c <vfprintf+0x2ee>
     f3a:	83 2d       	mov	r24, r3
     f3c:	8e 7e       	andi	r24, 0xEE	; 238
     f3e:	a8 2e       	mov	r10, r24
     f40:	05 c0       	rjmp	.+10     	; 0xf4c <vfprintf+0x2ee>
     f42:	b8 2c       	mov	r11, r8
     f44:	a3 2c       	mov	r10, r3
     f46:	03 c0       	rjmp	.+6      	; 0xf4e <vfprintf+0x2f0>
     f48:	b8 2c       	mov	r11, r8
     f4a:	01 c0       	rjmp	.+2      	; 0xf4e <vfprintf+0x2f0>
     f4c:	b9 2c       	mov	r11, r9
     f4e:	a4 fe       	sbrs	r10, 4
     f50:	0f c0       	rjmp	.+30     	; 0xf70 <vfprintf+0x312>
     f52:	fe 01       	movw	r30, r28
     f54:	e8 0d       	add	r30, r8
     f56:	f1 1d       	adc	r31, r1
     f58:	80 81       	ld	r24, Z
     f5a:	80 33       	cpi	r24, 0x30	; 48
     f5c:	21 f4       	brne	.+8      	; 0xf66 <vfprintf+0x308>
     f5e:	9a 2d       	mov	r25, r10
     f60:	99 7e       	andi	r25, 0xE9	; 233
     f62:	a9 2e       	mov	r10, r25
     f64:	09 c0       	rjmp	.+18     	; 0xf78 <vfprintf+0x31a>
     f66:	a2 fe       	sbrs	r10, 2
     f68:	06 c0       	rjmp	.+12     	; 0xf76 <vfprintf+0x318>
     f6a:	b3 94       	inc	r11
     f6c:	b3 94       	inc	r11
     f6e:	04 c0       	rjmp	.+8      	; 0xf78 <vfprintf+0x31a>
     f70:	8a 2d       	mov	r24, r10
     f72:	86 78       	andi	r24, 0x86	; 134
     f74:	09 f0       	breq	.+2      	; 0xf78 <vfprintf+0x31a>
     f76:	b3 94       	inc	r11
     f78:	a3 fc       	sbrc	r10, 3
     f7a:	10 c0       	rjmp	.+32     	; 0xf9c <vfprintf+0x33e>
     f7c:	a0 fe       	sbrs	r10, 0
     f7e:	06 c0       	rjmp	.+12     	; 0xf8c <vfprintf+0x32e>
     f80:	b2 14       	cp	r11, r2
     f82:	80 f4       	brcc	.+32     	; 0xfa4 <vfprintf+0x346>
     f84:	28 0c       	add	r2, r8
     f86:	92 2c       	mov	r9, r2
     f88:	9b 18       	sub	r9, r11
     f8a:	0d c0       	rjmp	.+26     	; 0xfa6 <vfprintf+0x348>
     f8c:	b2 14       	cp	r11, r2
     f8e:	58 f4       	brcc	.+22     	; 0xfa6 <vfprintf+0x348>
     f90:	b6 01       	movw	r22, r12
     f92:	80 e2       	ldi	r24, 0x20	; 32
     f94:	90 e0       	ldi	r25, 0x00	; 0
     f96:	76 d0       	rcall	.+236    	; 0x1084 <fputc>
     f98:	b3 94       	inc	r11
     f9a:	f8 cf       	rjmp	.-16     	; 0xf8c <vfprintf+0x32e>
     f9c:	b2 14       	cp	r11, r2
     f9e:	18 f4       	brcc	.+6      	; 0xfa6 <vfprintf+0x348>
     fa0:	2b 18       	sub	r2, r11
     fa2:	02 c0       	rjmp	.+4      	; 0xfa8 <vfprintf+0x34a>
     fa4:	98 2c       	mov	r9, r8
     fa6:	21 2c       	mov	r2, r1
     fa8:	a4 fe       	sbrs	r10, 4
     faa:	0f c0       	rjmp	.+30     	; 0xfca <vfprintf+0x36c>
     fac:	b6 01       	movw	r22, r12
     fae:	80 e3       	ldi	r24, 0x30	; 48
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	68 d0       	rcall	.+208    	; 0x1084 <fputc>
     fb4:	a2 fe       	sbrs	r10, 2
     fb6:	16 c0       	rjmp	.+44     	; 0xfe4 <vfprintf+0x386>
     fb8:	a1 fc       	sbrc	r10, 1
     fba:	03 c0       	rjmp	.+6      	; 0xfc2 <vfprintf+0x364>
     fbc:	88 e7       	ldi	r24, 0x78	; 120
     fbe:	90 e0       	ldi	r25, 0x00	; 0
     fc0:	02 c0       	rjmp	.+4      	; 0xfc6 <vfprintf+0x368>
     fc2:	88 e5       	ldi	r24, 0x58	; 88
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	b6 01       	movw	r22, r12
     fc8:	0c c0       	rjmp	.+24     	; 0xfe2 <vfprintf+0x384>
     fca:	8a 2d       	mov	r24, r10
     fcc:	86 78       	andi	r24, 0x86	; 134
     fce:	51 f0       	breq	.+20     	; 0xfe4 <vfprintf+0x386>
     fd0:	a1 fe       	sbrs	r10, 1
     fd2:	02 c0       	rjmp	.+4      	; 0xfd8 <vfprintf+0x37a>
     fd4:	8b e2       	ldi	r24, 0x2B	; 43
     fd6:	01 c0       	rjmp	.+2      	; 0xfda <vfprintf+0x37c>
     fd8:	80 e2       	ldi	r24, 0x20	; 32
     fda:	a7 fc       	sbrc	r10, 7
     fdc:	8d e2       	ldi	r24, 0x2D	; 45
     fde:	b6 01       	movw	r22, r12
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	50 d0       	rcall	.+160    	; 0x1084 <fputc>
     fe4:	89 14       	cp	r8, r9
     fe6:	30 f4       	brcc	.+12     	; 0xff4 <vfprintf+0x396>
     fe8:	b6 01       	movw	r22, r12
     fea:	80 e3       	ldi	r24, 0x30	; 48
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	4a d0       	rcall	.+148    	; 0x1084 <fputc>
     ff0:	9a 94       	dec	r9
     ff2:	f8 cf       	rjmp	.-16     	; 0xfe4 <vfprintf+0x386>
     ff4:	8a 94       	dec	r8
     ff6:	f3 01       	movw	r30, r6
     ff8:	e8 0d       	add	r30, r8
     ffa:	f1 1d       	adc	r31, r1
     ffc:	80 81       	ld	r24, Z
     ffe:	b6 01       	movw	r22, r12
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	40 d0       	rcall	.+128    	; 0x1084 <fputc>
    1004:	81 10       	cpse	r8, r1
    1006:	f6 cf       	rjmp	.-20     	; 0xff4 <vfprintf+0x396>
    1008:	22 20       	and	r2, r2
    100a:	09 f4       	brne	.+2      	; 0x100e <vfprintf+0x3b0>
    100c:	4e ce       	rjmp	.-868    	; 0xcaa <vfprintf+0x4c>
    100e:	b6 01       	movw	r22, r12
    1010:	80 e2       	ldi	r24, 0x20	; 32
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	37 d0       	rcall	.+110    	; 0x1084 <fputc>
    1016:	2a 94       	dec	r2
    1018:	f7 cf       	rjmp	.-18     	; 0x1008 <vfprintf+0x3aa>
    101a:	f6 01       	movw	r30, r12
    101c:	86 81       	ldd	r24, Z+6	; 0x06
    101e:	97 81       	ldd	r25, Z+7	; 0x07
    1020:	02 c0       	rjmp	.+4      	; 0x1026 <vfprintf+0x3c8>
    1022:	8f ef       	ldi	r24, 0xFF	; 255
    1024:	9f ef       	ldi	r25, 0xFF	; 255
    1026:	2b 96       	adiw	r28, 0x0b	; 11
    1028:	0f b6       	in	r0, 0x3f	; 63
    102a:	f8 94       	cli
    102c:	de bf       	out	0x3e, r29	; 62
    102e:	0f be       	out	0x3f, r0	; 63
    1030:	cd bf       	out	0x3d, r28	; 61
    1032:	df 91       	pop	r29
    1034:	cf 91       	pop	r28
    1036:	1f 91       	pop	r17
    1038:	0f 91       	pop	r16
    103a:	ff 90       	pop	r15
    103c:	ef 90       	pop	r14
    103e:	df 90       	pop	r13
    1040:	cf 90       	pop	r12
    1042:	bf 90       	pop	r11
    1044:	af 90       	pop	r10
    1046:	9f 90       	pop	r9
    1048:	8f 90       	pop	r8
    104a:	7f 90       	pop	r7
    104c:	6f 90       	pop	r6
    104e:	5f 90       	pop	r5
    1050:	4f 90       	pop	r4
    1052:	3f 90       	pop	r3
    1054:	2f 90       	pop	r2
    1056:	08 95       	ret

00001058 <strnlen_P>:
    1058:	fc 01       	movw	r30, r24
    105a:	05 90       	lpm	r0, Z+
    105c:	61 50       	subi	r22, 0x01	; 1
    105e:	70 40       	sbci	r23, 0x00	; 0
    1060:	01 10       	cpse	r0, r1
    1062:	d8 f7       	brcc	.-10     	; 0x105a <strnlen_P+0x2>
    1064:	80 95       	com	r24
    1066:	90 95       	com	r25
    1068:	8e 0f       	add	r24, r30
    106a:	9f 1f       	adc	r25, r31
    106c:	08 95       	ret

0000106e <strnlen>:
    106e:	fc 01       	movw	r30, r24
    1070:	61 50       	subi	r22, 0x01	; 1
    1072:	70 40       	sbci	r23, 0x00	; 0
    1074:	01 90       	ld	r0, Z+
    1076:	01 10       	cpse	r0, r1
    1078:	d8 f7       	brcc	.-10     	; 0x1070 <strnlen+0x2>
    107a:	80 95       	com	r24
    107c:	90 95       	com	r25
    107e:	8e 0f       	add	r24, r30
    1080:	9f 1f       	adc	r25, r31
    1082:	08 95       	ret

00001084 <fputc>:
    1084:	0f 93       	push	r16
    1086:	1f 93       	push	r17
    1088:	cf 93       	push	r28
    108a:	df 93       	push	r29
    108c:	fb 01       	movw	r30, r22
    108e:	23 81       	ldd	r18, Z+3	; 0x03
    1090:	21 fd       	sbrc	r18, 1
    1092:	03 c0       	rjmp	.+6      	; 0x109a <fputc+0x16>
    1094:	8f ef       	ldi	r24, 0xFF	; 255
    1096:	9f ef       	ldi	r25, 0xFF	; 255
    1098:	2c c0       	rjmp	.+88     	; 0x10f2 <fputc+0x6e>
    109a:	22 ff       	sbrs	r18, 2
    109c:	16 c0       	rjmp	.+44     	; 0x10ca <fputc+0x46>
    109e:	46 81       	ldd	r20, Z+6	; 0x06
    10a0:	57 81       	ldd	r21, Z+7	; 0x07
    10a2:	24 81       	ldd	r18, Z+4	; 0x04
    10a4:	35 81       	ldd	r19, Z+5	; 0x05
    10a6:	42 17       	cp	r20, r18
    10a8:	53 07       	cpc	r21, r19
    10aa:	44 f4       	brge	.+16     	; 0x10bc <fputc+0x38>
    10ac:	a0 81       	ld	r26, Z
    10ae:	b1 81       	ldd	r27, Z+1	; 0x01
    10b0:	9d 01       	movw	r18, r26
    10b2:	2f 5f       	subi	r18, 0xFF	; 255
    10b4:	3f 4f       	sbci	r19, 0xFF	; 255
    10b6:	31 83       	std	Z+1, r19	; 0x01
    10b8:	20 83       	st	Z, r18
    10ba:	8c 93       	st	X, r24
    10bc:	26 81       	ldd	r18, Z+6	; 0x06
    10be:	37 81       	ldd	r19, Z+7	; 0x07
    10c0:	2f 5f       	subi	r18, 0xFF	; 255
    10c2:	3f 4f       	sbci	r19, 0xFF	; 255
    10c4:	37 83       	std	Z+7, r19	; 0x07
    10c6:	26 83       	std	Z+6, r18	; 0x06
    10c8:	14 c0       	rjmp	.+40     	; 0x10f2 <fputc+0x6e>
    10ca:	8b 01       	movw	r16, r22
    10cc:	ec 01       	movw	r28, r24
    10ce:	fb 01       	movw	r30, r22
    10d0:	00 84       	ldd	r0, Z+8	; 0x08
    10d2:	f1 85       	ldd	r31, Z+9	; 0x09
    10d4:	e0 2d       	mov	r30, r0
    10d6:	09 95       	icall
    10d8:	89 2b       	or	r24, r25
    10da:	e1 f6       	brne	.-72     	; 0x1094 <fputc+0x10>
    10dc:	d8 01       	movw	r26, r16
    10de:	16 96       	adiw	r26, 0x06	; 6
    10e0:	8d 91       	ld	r24, X+
    10e2:	9c 91       	ld	r25, X
    10e4:	17 97       	sbiw	r26, 0x07	; 7
    10e6:	01 96       	adiw	r24, 0x01	; 1
    10e8:	17 96       	adiw	r26, 0x07	; 7
    10ea:	9c 93       	st	X, r25
    10ec:	8e 93       	st	-X, r24
    10ee:	16 97       	sbiw	r26, 0x06	; 6
    10f0:	ce 01       	movw	r24, r28
    10f2:	df 91       	pop	r29
    10f4:	cf 91       	pop	r28
    10f6:	1f 91       	pop	r17
    10f8:	0f 91       	pop	r16
    10fa:	08 95       	ret

000010fc <__ultoa_invert>:
    10fc:	fa 01       	movw	r30, r20
    10fe:	aa 27       	eor	r26, r26
    1100:	28 30       	cpi	r18, 0x08	; 8
    1102:	51 f1       	breq	.+84     	; 0x1158 <__stack+0x59>
    1104:	20 31       	cpi	r18, 0x10	; 16
    1106:	81 f1       	breq	.+96     	; 0x1168 <__stack+0x69>
    1108:	e8 94       	clt
    110a:	6f 93       	push	r22
    110c:	6e 7f       	andi	r22, 0xFE	; 254
    110e:	6e 5f       	subi	r22, 0xFE	; 254
    1110:	7f 4f       	sbci	r23, 0xFF	; 255
    1112:	8f 4f       	sbci	r24, 0xFF	; 255
    1114:	9f 4f       	sbci	r25, 0xFF	; 255
    1116:	af 4f       	sbci	r26, 0xFF	; 255
    1118:	b1 e0       	ldi	r27, 0x01	; 1
    111a:	3e d0       	rcall	.+124    	; 0x1198 <__stack+0x99>
    111c:	b4 e0       	ldi	r27, 0x04	; 4
    111e:	3c d0       	rcall	.+120    	; 0x1198 <__stack+0x99>
    1120:	67 0f       	add	r22, r23
    1122:	78 1f       	adc	r23, r24
    1124:	89 1f       	adc	r24, r25
    1126:	9a 1f       	adc	r25, r26
    1128:	a1 1d       	adc	r26, r1
    112a:	68 0f       	add	r22, r24
    112c:	79 1f       	adc	r23, r25
    112e:	8a 1f       	adc	r24, r26
    1130:	91 1d       	adc	r25, r1
    1132:	a1 1d       	adc	r26, r1
    1134:	6a 0f       	add	r22, r26
    1136:	71 1d       	adc	r23, r1
    1138:	81 1d       	adc	r24, r1
    113a:	91 1d       	adc	r25, r1
    113c:	a1 1d       	adc	r26, r1
    113e:	20 d0       	rcall	.+64     	; 0x1180 <__stack+0x81>
    1140:	09 f4       	brne	.+2      	; 0x1144 <__stack+0x45>
    1142:	68 94       	set
    1144:	3f 91       	pop	r19
    1146:	2a e0       	ldi	r18, 0x0A	; 10
    1148:	26 9f       	mul	r18, r22
    114a:	11 24       	eor	r1, r1
    114c:	30 19       	sub	r19, r0
    114e:	30 5d       	subi	r19, 0xD0	; 208
    1150:	31 93       	st	Z+, r19
    1152:	de f6       	brtc	.-74     	; 0x110a <__stack+0xb>
    1154:	cf 01       	movw	r24, r30
    1156:	08 95       	ret
    1158:	46 2f       	mov	r20, r22
    115a:	47 70       	andi	r20, 0x07	; 7
    115c:	40 5d       	subi	r20, 0xD0	; 208
    115e:	41 93       	st	Z+, r20
    1160:	b3 e0       	ldi	r27, 0x03	; 3
    1162:	0f d0       	rcall	.+30     	; 0x1182 <__stack+0x83>
    1164:	c9 f7       	brne	.-14     	; 0x1158 <__stack+0x59>
    1166:	f6 cf       	rjmp	.-20     	; 0x1154 <__stack+0x55>
    1168:	46 2f       	mov	r20, r22
    116a:	4f 70       	andi	r20, 0x0F	; 15
    116c:	40 5d       	subi	r20, 0xD0	; 208
    116e:	4a 33       	cpi	r20, 0x3A	; 58
    1170:	18 f0       	brcs	.+6      	; 0x1178 <__stack+0x79>
    1172:	49 5d       	subi	r20, 0xD9	; 217
    1174:	31 fd       	sbrc	r19, 1
    1176:	40 52       	subi	r20, 0x20	; 32
    1178:	41 93       	st	Z+, r20
    117a:	02 d0       	rcall	.+4      	; 0x1180 <__stack+0x81>
    117c:	a9 f7       	brne	.-22     	; 0x1168 <__stack+0x69>
    117e:	ea cf       	rjmp	.-44     	; 0x1154 <__stack+0x55>
    1180:	b4 e0       	ldi	r27, 0x04	; 4
    1182:	a6 95       	lsr	r26
    1184:	97 95       	ror	r25
    1186:	87 95       	ror	r24
    1188:	77 95       	ror	r23
    118a:	67 95       	ror	r22
    118c:	ba 95       	dec	r27
    118e:	c9 f7       	brne	.-14     	; 0x1182 <__stack+0x83>
    1190:	00 97       	sbiw	r24, 0x00	; 0
    1192:	61 05       	cpc	r22, r1
    1194:	71 05       	cpc	r23, r1
    1196:	08 95       	ret
    1198:	9b 01       	movw	r18, r22
    119a:	ac 01       	movw	r20, r24
    119c:	0a 2e       	mov	r0, r26
    119e:	06 94       	lsr	r0
    11a0:	57 95       	ror	r21
    11a2:	47 95       	ror	r20
    11a4:	37 95       	ror	r19
    11a6:	27 95       	ror	r18
    11a8:	ba 95       	dec	r27
    11aa:	c9 f7       	brne	.-14     	; 0x119e <__stack+0x9f>
    11ac:	62 0f       	add	r22, r18
    11ae:	73 1f       	adc	r23, r19
    11b0:	84 1f       	adc	r24, r20
    11b2:	95 1f       	adc	r25, r21
    11b4:	a0 1d       	adc	r26, r0
    11b6:	08 95       	ret

000011b8 <_exit>:
    11b8:	f8 94       	cli

000011ba <__stop_program>:
    11ba:	ff cf       	rjmp	.-2      	; 0x11ba <__stop_program>
