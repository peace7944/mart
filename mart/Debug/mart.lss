
mart.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c4  00800100  0000123a  000012ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000123a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000028  008001c4  008001c4  00001392  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001392  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000013f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  0000142c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001613  00000000  00000000  000014a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000972  00000000  00000000  00002ab7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a57  00000000  00000000  00003429  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000124  00000000  00000000  00003e80  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005dc  00000000  00000000  00003fa4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000cc1  00000000  00000000  00004580  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  00005241  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c0       	rjmp	.+146    	; 0xc8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	52 c1       	rjmp	.+676    	; 0x2e6 <__vector_16>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	ea e3       	ldi	r30, 0x3A	; 58
      a0:	f2 e1       	ldi	r31, 0x12	; 18
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a4 3c       	cpi	r26, 0xC4	; 196
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	21 e0       	ldi	r18, 0x01	; 1
      b4:	a4 ec       	ldi	r26, 0xC4	; 196
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	ac 3e       	cpi	r26, 0xEC	; 236
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	39 d3       	rcall	.+1650   	; 0x736 <main>
      c4:	0c 94 1b 09 	jmp	0x1236	; 0x1236 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <_Z10init_PORTCv>:
#define ENABLE  (PORTC |= 0x04)
#define DISABLE (PORTC &= 0xFB)

void init_PORTC(void)
{
  DDRC = 0xff;
      ca:	8f ef       	ldi	r24, 0xFF	; 255
      cc:	84 bb       	out	0x14, r24	; 20
  PORTC = 0xff;
      ce:	85 bb       	out	0x15, r24	; 21
      d0:	08 95       	ret

000000d2 <_Z14instrction_outh>:
}
 
void instrction_out(unsigned char b)
{
	PORTC = b&0xF0;
      d2:	98 2f       	mov	r25, r24
      d4:	90 7f       	andi	r25, 0xF0	; 240
      d6:	95 bb       	out	0x15, r25	; 21
	ENABLE;
      d8:	aa 9a       	sbi	0x15, 2	; 21
	DISABLE;
      da:	aa 98       	cbi	0x15, 2	; 21
	PORTC=((b<<4)&0xF0);
      dc:	20 e1       	ldi	r18, 0x10	; 16
      de:	82 9f       	mul	r24, r18
      e0:	c0 01       	movw	r24, r0
      e2:	11 24       	eor	r1, r1
      e4:	85 bb       	out	0x15, r24	; 21
	ENABLE;
      e6:	aa 9a       	sbi	0x15, 2	; 21
	DISABLE;
      e8:	aa 98       	cbi	0x15, 2	; 21
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
      ea:	80 e4       	ldi	r24, 0x40	; 64
      ec:	9f e1       	ldi	r25, 0x1F	; 31
      ee:	01 97       	sbiw	r24, 0x01	; 1
      f0:	f1 f7       	brne	.-4      	; 0xee <_Z14instrction_outh+0x1c>
      f2:	08 95       	ret

000000f4 <_Z8char_outh>:
	_delay_ms(2);
}
void char_out(unsigned char b)
{
	PORTC=(b&0xF0)|0x01;
      f4:	98 2f       	mov	r25, r24
      f6:	90 7f       	andi	r25, 0xF0	; 240
      f8:	91 60       	ori	r25, 0x01	; 1
      fa:	95 bb       	out	0x15, r25	; 21
	ENABLE;
      fc:	aa 9a       	sbi	0x15, 2	; 21
	DISABLE;
      fe:	aa 98       	cbi	0x15, 2	; 21
	PORTC=((b<<4)&0xF0)|0x01;
     100:	20 e1       	ldi	r18, 0x10	; 16
     102:	82 9f       	mul	r24, r18
     104:	c0 01       	movw	r24, r0
     106:	11 24       	eor	r1, r1
     108:	81 60       	ori	r24, 0x01	; 1
     10a:	85 bb       	out	0x15, r24	; 21
	ENABLE;
     10c:	aa 9a       	sbi	0x15, 2	; 21
	DISABLE;
     10e:	aa 98       	cbi	0x15, 2	; 21
     110:	80 e4       	ldi	r24, 0x40	; 64
     112:	9f e1       	ldi	r25, 0x1F	; 31
     114:	01 97       	sbiw	r24, 0x01	; 1
     116:	f1 f7       	brne	.-4      	; 0x114 <_Z8char_outh+0x20>
     118:	08 95       	ret

0000011a <_Z10lcd_gotoxyhh>:
}
void lcd_gotoxy(unsigned char x, unsigned char y)
{
	// 16 * 2 Character LCD  
	//  Busy();
	switch(y)
     11a:	66 23       	and	r22, r22
     11c:	19 f0       	breq	.+6      	; 0x124 <_Z10lcd_gotoxyhh+0xa>
     11e:	61 30       	cpi	r22, 0x01	; 1
     120:	21 f0       	breq	.+8      	; 0x12a <_Z10lcd_gotoxyhh+0x10>
     122:	08 95       	ret
	{
	    case 0 : instrction_out(0x80+x); break;
     124:	80 58       	subi	r24, 0x80	; 128
     126:	d5 cf       	rjmp	.-86     	; 0xd2 <_Z14instrction_outh>
     128:	08 95       	ret
	    case 1 : instrction_out(0xC0+x); break;
     12a:	80 54       	subi	r24, 0x40	; 64
     12c:	d2 cf       	rjmp	.-92     	; 0xd2 <_Z14instrction_outh>
     12e:	08 95       	ret

00000130 <_Z9lcd_putsfhhPh>:
	}
}
void lcd_putsf(unsigned char x, unsigned char y, unsigned char *str)
{
     130:	0f 93       	push	r16
     132:	1f 93       	push	r17
     134:	cf 93       	push	r28
     136:	df 93       	push	r29
     138:	04 2f       	mov	r16, r20
     13a:	15 2f       	mov	r17, r21
	unsigned int i=0;
	lcd_gotoxy(x,y);
     13c:	ee df       	rcall	.-36     	; 0x11a <_Z10lcd_gotoxyhh>
     13e:	c0 2f       	mov	r28, r16
     140:	d1 2f       	mov	r29, r17
	do
	{
		char_out(str[i]);
     142:	89 91       	ld	r24, Y+
     144:	d7 df       	rcall	.-82     	; 0xf4 <_Z8char_outh>
}
void lcd_putsf(unsigned char x, unsigned char y, unsigned char *str)
{
	unsigned int i=0;
	lcd_gotoxy(x,y);
	do
     146:	88 81       	ld	r24, Y
     148:	81 11       	cpse	r24, r1
     14a:	fb cf       	rjmp	.-10     	; 0x142 <_Z9lcd_putsfhhPh+0x12>
	{
		char_out(str[i]);
	}
	while(str[++i]!='\0');
}
     14c:	df 91       	pop	r29
     14e:	cf 91       	pop	r28
     150:	1f 91       	pop	r17
     152:	0f 91       	pop	r16
     154:	08 95       	ret

00000156 <_Z8lcd_initv>:
void lcd_init(void)
{
	init_PORTC();
     156:	b9 df       	rcall	.-142    	; 0xca <_Z10init_PORTCv>
     158:	80 ed       	ldi	r24, 0xD0	; 208
     15a:	97 e0       	ldi	r25, 0x07	; 7
     15c:	20 e9       	ldi	r18, 0x90	; 144
     15e:	31 e0       	ldi	r19, 0x01	; 1
     160:	f9 01       	movw	r30, r18
     162:	31 97       	sbiw	r30, 0x01	; 1
     164:	f1 f7       	brne	.-4      	; 0x162 <_Z8lcd_initv+0xc>
     166:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     168:	d9 f7       	brne	.-10     	; 0x160 <_Z8lcd_initv+0xa>
     16a:	80 e6       	ldi	r24, 0x60	; 96
     16c:	99 e0       	ldi	r25, 0x09	; 9
     16e:	01 97       	sbiw	r24, 0x01	; 1
     170:	f1 f7       	brne	.-4      	; 0x16e <_Z8lcd_initv+0x18>
	_delay_ms(200);
	_delay_us(600);
	instrction_out(0x28);
     172:	88 e2       	ldi	r24, 0x28	; 40
     174:	ae df       	rcall	.-164    	; 0xd2 <_Z14instrction_outh>
     176:	80 ed       	ldi	r24, 0xD0	; 208
     178:	97 e0       	ldi	r25, 0x07	; 7
     17a:	20 e9       	ldi	r18, 0x90	; 144
     17c:	31 e0       	ldi	r19, 0x01	; 1
     17e:	f9 01       	movw	r30, r18
     180:	31 97       	sbiw	r30, 0x01	; 1
     182:	f1 f7       	brne	.-4      	; 0x180 <_Z8lcd_initv+0x2a>
     184:	01 97       	sbiw	r24, 0x01	; 1
	_delay_ms(200);
	instrction_out(0x28);
     186:	d9 f7       	brne	.-10     	; 0x17e <_Z8lcd_initv+0x28>
     188:	88 e2       	ldi	r24, 0x28	; 40
     18a:	a3 df       	rcall	.-186    	; 0xd2 <_Z14instrction_outh>
     18c:	80 ed       	ldi	r24, 0xD0	; 208
     18e:	97 e0       	ldi	r25, 0x07	; 7
     190:	20 e9       	ldi	r18, 0x90	; 144
     192:	31 e0       	ldi	r19, 0x01	; 1
     194:	f9 01       	movw	r30, r18
     196:	31 97       	sbiw	r30, 0x01	; 1
     198:	f1 f7       	brne	.-4      	; 0x196 <_Z8lcd_initv+0x40>
     19a:	01 97       	sbiw	r24, 0x01	; 1
	_delay_ms(200);
	instrction_out(0x0C);
     19c:	d9 f7       	brne	.-10     	; 0x194 <_Z8lcd_initv+0x3e>
     19e:	8c e0       	ldi	r24, 0x0C	; 12
	instrction_out(0x06);
     1a0:	98 df       	rcall	.-208    	; 0xd2 <_Z14instrction_outh>
     1a2:	86 e0       	ldi	r24, 0x06	; 6
	instrction_out(0x02);
     1a4:	96 df       	rcall	.-212    	; 0xd2 <_Z14instrction_outh>
     1a6:	82 e0       	ldi	r24, 0x02	; 2
	instrction_out(0x01);
     1a8:	94 df       	rcall	.-216    	; 0xd2 <_Z14instrction_outh>
     1aa:	81 e0       	ldi	r24, 0x01	; 1
     1ac:	92 df       	rcall	.-220    	; 0xd2 <_Z14instrction_outh>
	instrction_out(0x01);
     1ae:	81 e0       	ldi	r24, 0x01	; 1
     1b0:	90 cf       	rjmp	.-224    	; 0xd2 <_Z14instrction_outh>
     1b2:	08 95       	ret

000001b4 <_Z9lcd_clearv>:
     1b4:	81 e0       	ldi	r24, 0x01	; 1
}
void lcd_clear(void)
{
	instrction_out(0x01);
     1b6:	8d df       	rcall	.-230    	; 0xd2 <_Z14instrction_outh>
     1b8:	80 e4       	ldi	r24, 0x40	; 64
     1ba:	9c e9       	ldi	r25, 0x9C	; 156
     1bc:	01 97       	sbiw	r24, 0x01	; 1
     1be:	f1 f7       	brne	.-4      	; 0x1bc <_Z9lcd_clearv+0x8>
     1c0:	08 95       	ret

000001c2 <_Z9my_getkeyv>:
unsigned int prekey = 0, msec = 0;

unsigned int my_getkey(){  // flag 처리
	unsigned int key = 0, result = 0;
	for(int i=0;i<4;i++){
		PORTD = ~(0x00 | (1<<i));
     1c2:	8e ef       	ldi	r24, 0xFE	; 254
     1c4:	82 bb       	out	0x12, r24	; 18
	__asm__ volatile (
		"1: dec %0" "\n\t"
		"brne 1b"
		: "=r" (__count)
		: "0" (__count)
	);
     1c6:	8a e1       	ldi	r24, 0x1A	; 26
     1c8:	8a 95       	dec	r24
     1ca:	f1 f7       	brne	.-4      	; 0x1c8 <_Z9my_getkeyv+0x6>
		_delay_us(5);
		
		key = (~PIND & 0xf0);
     1cc:	80 b3       	in	r24, 0x10	; 16
     1ce:	90 e0       	ldi	r25, 0x00	; 0
     1d0:	80 95       	com	r24
     1d2:	90 95       	com	r25
     1d4:	80 7f       	andi	r24, 0xF0	; 240
     1d6:	99 27       	eor	r25, r25
		if(key){
     1d8:	00 97       	sbiw	r24, 0x00	; 0
     1da:	c9 f4       	brne	.+50     	; 0x20e <_Z9my_getkeyv+0x4c>
     1dc:	21 e0       	ldi	r18, 0x01	; 1
     1de:	30 e0       	ldi	r19, 0x00	; 0
unsigned int prekey = 0, msec = 0;

unsigned int my_getkey(){  // flag 처리
	unsigned int key = 0, result = 0;
	for(int i=0;i<4;i++){
		PORTD = ~(0x00 | (1<<i));
     1e0:	61 e0       	ldi	r22, 0x01	; 1
     1e2:	70 e0       	ldi	r23, 0x00	; 0
     1e4:	4a e1       	ldi	r20, 0x1A	; 26
     1e6:	cb 01       	movw	r24, r22
     1e8:	02 2e       	mov	r0, r18
     1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <_Z9my_getkeyv+0x2e>
     1ec:	88 0f       	add	r24, r24
     1ee:	99 1f       	adc	r25, r25
     1f0:	0a 94       	dec	r0
     1f2:	e2 f7       	brpl	.-8      	; 0x1ec <_Z9my_getkeyv+0x2a>
     1f4:	80 95       	com	r24
     1f6:	82 bb       	out	0x12, r24	; 18
     1f8:	84 2f       	mov	r24, r20
     1fa:	8a 95       	dec	r24
     1fc:	f1 f7       	brne	.-4      	; 0x1fa <_Z9my_getkeyv+0x38>
		_delay_us(5);
		
		key = (~PIND & 0xf0);
     1fe:	80 b3       	in	r24, 0x10	; 16
     200:	90 e0       	ldi	r25, 0x00	; 0
     202:	80 95       	com	r24
     204:	90 95       	com	r25
     206:	80 7f       	andi	r24, 0xF0	; 240
     208:	99 27       	eor	r25, r25
		if(key){
     20a:	00 97       	sbiw	r24, 0x00	; 0
     20c:	99 f0       	breq	.+38     	; 0x234 <_Z9my_getkeyv+0x72>
			result = key | (PORTD & 0x0f);
     20e:	22 b3       	in	r18, 0x12	; 18
     210:	2f 70       	andi	r18, 0x0F	; 15
     212:	ac 01       	movw	r20, r24
     214:	42 2b       	or	r20, r18
     216:	9a 01       	movw	r18, r20
			if(result != prekey){
     218:	80 91 ea 01 	lds	r24, 0x01EA	; 0x8001ea <prekey>
     21c:	90 91 eb 01 	lds	r25, 0x01EB	; 0x8001eb <prekey+0x1>
     220:	28 17       	cp	r18, r24
     222:	39 07       	cpc	r19, r25
     224:	99 f0       	breq	.+38     	; 0x24c <_Z9my_getkeyv+0x8a>
				prekey = result;
     226:	30 93 eb 01 	sts	0x01EB, r19	; 0x8001eb <prekey+0x1>
     22a:	20 93 ea 01 	sts	0x01EA, r18	; 0x8001ea <prekey>
				return result;
     22e:	82 2f       	mov	r24, r18
     230:	93 2f       	mov	r25, r19
     232:	08 95       	ret

unsigned int prekey = 0, msec = 0;

unsigned int my_getkey(){  // flag 처리
	unsigned int key = 0, result = 0;
	for(int i=0;i<4;i++){
     234:	2f 5f       	subi	r18, 0xFF	; 255
     236:	3f 4f       	sbci	r19, 0xFF	; 255
     238:	24 30       	cpi	r18, 0x04	; 4
     23a:	31 05       	cpc	r19, r1
     23c:	a1 f6       	brne	.-88     	; 0x1e6 <_Z9my_getkeyv+0x24>
				return result;
			}
			else return 0;
		}
	}
	prekey = 0;
     23e:	10 92 eb 01 	sts	0x01EB, r1	; 0x8001eb <prekey+0x1>
     242:	10 92 ea 01 	sts	0x01EA, r1	; 0x8001ea <prekey>
	return 0;
     246:	80 e0       	ldi	r24, 0x00	; 0
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	08 95       	ret
			result = key | (PORTD & 0x0f);
			if(result != prekey){
				prekey = result;
				return result;
			}
			else return 0;
     24c:	80 e0       	ldi	r24, 0x00	; 0
     24e:	90 e0       	ldi	r25, 0x00	; 0
		}
	}
	prekey = 0;
	return 0;
}
     250:	08 95       	ret

00000252 <_Z10initSystemv>:
	return 0;
}
*/
void initSystem(){
	
	DDRA = 0xff;  // 0,1 = motor, 5,6,7 = LED
     252:	8f ef       	ldi	r24, 0xFF	; 255
     254:	8a bb       	out	0x1a, r24	; 26
	DDRD = 0x0f;  // 0,1,2,3 = Row, 4,5,6,7 = col
     256:	9f e0       	ldi	r25, 0x0F	; 15
     258:	91 bb       	out	0x11, r25	; 17
	DDRF = 0x00;  // photo 0
     25a:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	
	PORTD = 0xff;
     25e:	82 bb       	out	0x12, r24	; 18
	
	lcd_init();
     260:	7a df       	rcall	.-268    	; 0x156 <_Z8lcd_initv>
	lcd_clear();
     262:	a8 df       	rcall	.-176    	; 0x1b4 <_Z9lcd_clearv>
     264:	43 e0       	ldi	r20, 0x03	; 3
	
	lcd_putsf(0,0, (unsigned char*)"    MARKET     ");
     266:	51 e0       	ldi	r21, 0x01	; 1
     268:	60 e0       	ldi	r22, 0x00	; 0
     26a:	80 e0       	ldi	r24, 0x00	; 0
     26c:	61 df       	rcall	.-318    	; 0x130 <_Z9lcd_putsfhhPh>
     26e:	43 e1       	ldi	r20, 0x13	; 19
	lcd_putsf(0,1, (unsigned char*)"    SYSTEM     ");
     270:	51 e0       	ldi	r21, 0x01	; 1
     272:	61 e0       	ldi	r22, 0x01	; 1
     274:	80 e0       	ldi	r24, 0x00	; 0
     276:	5c df       	rcall	.-328    	; 0x130 <_Z9lcd_putsfhhPh>
     278:	1b ba       	out	0x1b, r1	; 27
	PORTA = 0x00;
     27a:	88 e8       	ldi	r24, 0x88	; 136
     27c:	93 e1       	ldi	r25, 0x13	; 19
     27e:	20 e9       	ldi	r18, 0x90	; 144
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     280:	31 e0       	ldi	r19, 0x01	; 1
     282:	f9 01       	movw	r30, r18
     284:	31 97       	sbiw	r30, 0x01	; 1
     286:	f1 f7       	brne	.-4      	; 0x284 <_Z10initSystemv+0x32>
     288:	01 97       	sbiw	r24, 0x01	; 1
     28a:	d9 f7       	brne	.-10     	; 0x282 <_Z10initSystemv+0x30>
	_delay_ms(500);
	
	lcd_clear();
     28c:	93 df       	rcall	.-218    	; 0x1b4 <_Z9lcd_clearv>
     28e:	80 ee       	ldi	r24, 0xE0	; 224
	PORTA = 0b11100000;
     290:	8b bb       	out	0x1b, r24	; 27
     292:	88 e8       	ldi	r24, 0x88	; 136
     294:	93 e1       	ldi	r25, 0x13	; 19
     296:	20 e9       	ldi	r18, 0x90	; 144
     298:	31 e0       	ldi	r19, 0x01	; 1
     29a:	f9 01       	movw	r30, r18
     29c:	31 97       	sbiw	r30, 0x01	; 1
     29e:	f1 f7       	brne	.-4      	; 0x29c <_Z10initSystemv+0x4a>
     2a0:	01 97       	sbiw	r24, 0x01	; 1
     2a2:	d9 f7       	brne	.-10     	; 0x29a <_Z10initSystemv+0x48>
	_delay_ms(500);
	
	lcd_putsf(0,0, (unsigned char*)"    MARKET     ");
     2a4:	43 e0       	ldi	r20, 0x03	; 3
     2a6:	51 e0       	ldi	r21, 0x01	; 1
     2a8:	60 e0       	ldi	r22, 0x00	; 0
     2aa:	80 e0       	ldi	r24, 0x00	; 0
     2ac:	41 df       	rcall	.-382    	; 0x130 <_Z9lcd_putsfhhPh>
	lcd_putsf(0,1, (unsigned char*)"    SYSTEM     ");
     2ae:	43 e1       	ldi	r20, 0x13	; 19
     2b0:	51 e0       	ldi	r21, 0x01	; 1
     2b2:	61 e0       	ldi	r22, 0x01	; 1
     2b4:	80 e0       	ldi	r24, 0x00	; 0
     2b6:	3c df       	rcall	.-392    	; 0x130 <_Z9lcd_putsfhhPh>
     2b8:	1b ba       	out	0x1b, r1	; 27
	PORTA = 0x00;
     2ba:	88 e8       	ldi	r24, 0x88	; 136
     2bc:	93 e1       	ldi	r25, 0x13	; 19
     2be:	20 e9       	ldi	r18, 0x90	; 144
     2c0:	31 e0       	ldi	r19, 0x01	; 1
     2c2:	f9 01       	movw	r30, r18
     2c4:	31 97       	sbiw	r30, 0x01	; 1
     2c6:	f1 f7       	brne	.-4      	; 0x2c4 <_Z10initSystemv+0x72>
     2c8:	01 97       	sbiw	r24, 0x01	; 1
     2ca:	d9 f7       	brne	.-10     	; 0x2c2 <_Z10initSystemv+0x70>
	_delay_ms(500);
	
	lcd_clear();
     2cc:	73 df       	rcall	.-282    	; 0x1b4 <_Z9lcd_clearv>
     2ce:	80 ee       	ldi	r24, 0xE0	; 224
	PORTA = 0b11100000;
     2d0:	8b bb       	out	0x1b, r24	; 27
     2d2:	88 e8       	ldi	r24, 0x88	; 136
     2d4:	93 e1       	ldi	r25, 0x13	; 19
     2d6:	20 e9       	ldi	r18, 0x90	; 144
     2d8:	31 e0       	ldi	r19, 0x01	; 1
     2da:	f9 01       	movw	r30, r18
     2dc:	31 97       	sbiw	r30, 0x01	; 1
     2de:	f1 f7       	brne	.-4      	; 0x2dc <_Z10initSystemv+0x8a>
     2e0:	01 97       	sbiw	r24, 0x01	; 1
     2e2:	d9 f7       	brne	.-10     	; 0x2da <_Z10initSystemv+0x88>
     2e4:	08 95       	ret

000002e6 <__vector_16>:
	_delay_ms(500);
}
     2e6:	1f 92       	push	r1
int mode = CLOCK;
bool error_flag = false, change_flag = false, total_flag = true, endtime_flag = false, end_flag = false;
long int sum = 0, total_sum = 0;
char str[16] = {0,};
	
ISR(TIMER0_OVF_vect){
     2e8:	0f 92       	push	r0
     2ea:	0f b6       	in	r0, 0x3f	; 63
     2ec:	0f 92       	push	r0
     2ee:	11 24       	eor	r1, r1
     2f0:	2f 93       	push	r18
     2f2:	3f 93       	push	r19
     2f4:	8f 93       	push	r24
     2f6:	9f 93       	push	r25
	msec++;
     2f8:	80 91 e8 01 	lds	r24, 0x01E8	; 0x8001e8 <msec>
     2fc:	90 91 e9 01 	lds	r25, 0x01E9	; 0x8001e9 <msec+0x1>
     300:	01 96       	adiw	r24, 0x01	; 1
     302:	90 93 e9 01 	sts	0x01E9, r25	; 0x8001e9 <msec+0x1>
     306:	80 93 e8 01 	sts	0x01E8, r24	; 0x8001e8 <msec>
	if(endtime_flag) end_time++;
     30a:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <endtime_flag>
     30e:	88 23       	and	r24, r24
     310:	49 f0       	breq	.+18     	; 0x324 <__vector_16+0x3e>
     312:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <end_time>
     316:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <end_time+0x1>
     31a:	01 96       	adiw	r24, 0x01	; 1
     31c:	90 93 e3 01 	sts	0x01E3, r25	; 0x8001e3 <end_time+0x1>
     320:	80 93 e2 01 	sts	0x01E2, r24	; 0x8001e2 <end_time>
	
	if(hour >= 24) hour = min = sec = msec = 0;
     324:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <hour>
     328:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <hour+0x1>
     32c:	88 31       	cpi	r24, 0x18	; 24
     32e:	91 05       	cpc	r25, r1
     330:	88 f0       	brcs	.+34     	; 0x354 <__vector_16+0x6e>
     332:	10 92 e9 01 	sts	0x01E9, r1	; 0x8001e9 <msec+0x1>
     336:	10 92 e8 01 	sts	0x01E8, r1	; 0x8001e8 <msec>
     33a:	10 92 e5 01 	sts	0x01E5, r1	; 0x8001e5 <sec+0x1>
     33e:	10 92 e4 01 	sts	0x01E4, r1	; 0x8001e4 <sec>
     342:	10 92 e7 01 	sts	0x01E7, r1	; 0x8001e7 <min+0x1>
     346:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <min>
     34a:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <hour+0x1>
     34e:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <hour>
     352:	23 c0       	rjmp	.+70     	; 0x39a <__vector_16+0xb4>
	if(min >= 60){hour++; min = 0;}
     354:	20 91 e6 01 	lds	r18, 0x01E6	; 0x8001e6 <min>
     358:	30 91 e7 01 	lds	r19, 0x01E7	; 0x8001e7 <min+0x1>
     35c:	2c 33       	cpi	r18, 0x3C	; 60
     35e:	31 05       	cpc	r19, r1
     360:	48 f0       	brcs	.+18     	; 0x374 <__vector_16+0x8e>
     362:	01 96       	adiw	r24, 0x01	; 1
     364:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <hour+0x1>
     368:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <hour>
     36c:	10 92 e7 01 	sts	0x01E7, r1	; 0x8001e7 <min+0x1>
     370:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <min>
	if(sec >= 60){min++; sec = 0;}
     374:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <sec>
     378:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <sec+0x1>
     37c:	cc 97       	sbiw	r24, 0x3c	; 60
     37e:	68 f0       	brcs	.+26     	; 0x39a <__vector_16+0xb4>
     380:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <min>
     384:	90 91 e7 01 	lds	r25, 0x01E7	; 0x8001e7 <min+0x1>
     388:	01 96       	adiw	r24, 0x01	; 1
     38a:	90 93 e7 01 	sts	0x01E7, r25	; 0x8001e7 <min+0x1>
     38e:	80 93 e6 01 	sts	0x01E6, r24	; 0x8001e6 <min>
     392:	10 92 e5 01 	sts	0x01E5, r1	; 0x8001e5 <sec+0x1>
     396:	10 92 e4 01 	sts	0x01E4, r1	; 0x8001e4 <sec>
	if(msec >= 1000){sec++; msec = 0;}
     39a:	80 91 e8 01 	lds	r24, 0x01E8	; 0x8001e8 <msec>
     39e:	90 91 e9 01 	lds	r25, 0x01E9	; 0x8001e9 <msec+0x1>
     3a2:	88 3e       	cpi	r24, 0xE8	; 232
     3a4:	93 40       	sbci	r25, 0x03	; 3
     3a6:	68 f0       	brcs	.+26     	; 0x3c2 <__vector_16+0xdc>
     3a8:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <sec>
     3ac:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <sec+0x1>
     3b0:	01 96       	adiw	r24, 0x01	; 1
     3b2:	90 93 e5 01 	sts	0x01E5, r25	; 0x8001e5 <sec+0x1>
     3b6:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <sec>
     3ba:	10 92 e9 01 	sts	0x01E9, r1	; 0x8001e9 <msec+0x1>
     3be:	10 92 e8 01 	sts	0x01E8, r1	; 0x8001e8 <msec>
		
	if(end_time >= 5000){
     3c2:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <end_time>
     3c6:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <end_time+0x1>
     3ca:	88 38       	cpi	r24, 0x88	; 136
     3cc:	93 41       	sbci	r25, 0x13	; 19
     3ce:	48 f0       	brcs	.+18     	; 0x3e2 <__vector_16+0xfc>
		end_flag = true;
     3d0:	81 e0       	ldi	r24, 0x01	; 1
     3d2:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <end_flag>
		endtime_flag = false;
     3d6:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <endtime_flag>
		end_time = 0;
     3da:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <end_time+0x1>
     3de:	10 92 e2 01 	sts	0x01E2, r1	; 0x8001e2 <end_time>
	}
}
     3e2:	9f 91       	pop	r25
     3e4:	8f 91       	pop	r24
     3e6:	3f 91       	pop	r19
     3e8:	2f 91       	pop	r18
     3ea:	0f 90       	pop	r0
     3ec:	0f be       	out	0x3f, r0	; 63
     3ee:	0f 90       	pop	r0
     3f0:	1f 90       	pop	r1
     3f2:	18 95       	reti

000003f4 <_Z9key_inputj>:

void key_input(unsigned int key){
     3f4:	0f 93       	push	r16
     3f6:	1f 93       	push	r17
	if(key == sw1) sum = sum * 10 + 1;
     3f8:	8e 31       	cpi	r24, 0x1E	; 30
     3fa:	91 05       	cpc	r25, r1
     3fc:	39 f5       	brne	.+78     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     3fe:	40 91 d8 01 	lds	r20, 0x01D8	; 0x8001d8 <sum>
     402:	50 91 d9 01 	lds	r21, 0x01D9	; 0x8001d9 <sum+0x1>
     406:	60 91 da 01 	lds	r22, 0x01DA	; 0x8001da <sum+0x2>
     40a:	70 91 db 01 	lds	r23, 0x01DB	; 0x8001db <sum+0x3>
     40e:	44 0f       	add	r20, r20
     410:	55 1f       	adc	r21, r21
     412:	66 1f       	adc	r22, r22
     414:	77 1f       	adc	r23, r23
     416:	8a 01       	movw	r16, r20
     418:	9b 01       	movw	r18, r22
     41a:	00 0f       	add	r16, r16
     41c:	11 1f       	adc	r17, r17
     41e:	22 1f       	adc	r18, r18
     420:	33 1f       	adc	r19, r19
     422:	00 0f       	add	r16, r16
     424:	11 1f       	adc	r17, r17
     426:	22 1f       	adc	r18, r18
     428:	33 1f       	adc	r19, r19
     42a:	40 0f       	add	r20, r16
     42c:	51 1f       	adc	r21, r17
     42e:	62 1f       	adc	r22, r18
     430:	73 1f       	adc	r23, r19
     432:	4f 5f       	subi	r20, 0xFF	; 255
     434:	5f 4f       	sbci	r21, 0xFF	; 255
     436:	6f 4f       	sbci	r22, 0xFF	; 255
     438:	7f 4f       	sbci	r23, 0xFF	; 255
     43a:	40 93 d8 01 	sts	0x01D8, r20	; 0x8001d8 <sum>
     43e:	50 93 d9 01 	sts	0x01D9, r21	; 0x8001d9 <sum+0x1>
     442:	60 93 da 01 	sts	0x01DA, r22	; 0x8001da <sum+0x2>
     446:	70 93 db 01 	sts	0x01DB, r23	; 0x8001db <sum+0x3>
     44a:	54 c0       	rjmp	.+168    	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
	if(key == sw2) sum = sum * 10 + 2;
     44c:	8e 32       	cpi	r24, 0x2E	; 46
     44e:	91 05       	cpc	r25, r1
     450:	39 f5       	brne	.+78     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
     452:	40 91 d8 01 	lds	r20, 0x01D8	; 0x8001d8 <sum>
     456:	50 91 d9 01 	lds	r21, 0x01D9	; 0x8001d9 <sum+0x1>
     45a:	60 91 da 01 	lds	r22, 0x01DA	; 0x8001da <sum+0x2>
     45e:	70 91 db 01 	lds	r23, 0x01DB	; 0x8001db <sum+0x3>
     462:	44 0f       	add	r20, r20
     464:	55 1f       	adc	r21, r21
     466:	66 1f       	adc	r22, r22
     468:	77 1f       	adc	r23, r23
     46a:	8a 01       	movw	r16, r20
     46c:	9b 01       	movw	r18, r22
     46e:	00 0f       	add	r16, r16
     470:	11 1f       	adc	r17, r17
     472:	22 1f       	adc	r18, r18
     474:	33 1f       	adc	r19, r19
     476:	00 0f       	add	r16, r16
     478:	11 1f       	adc	r17, r17
     47a:	22 1f       	adc	r18, r18
     47c:	33 1f       	adc	r19, r19
     47e:	40 0f       	add	r20, r16
     480:	51 1f       	adc	r21, r17
     482:	62 1f       	adc	r22, r18
     484:	73 1f       	adc	r23, r19
     486:	4e 5f       	subi	r20, 0xFE	; 254
     488:	5f 4f       	sbci	r21, 0xFF	; 255
     48a:	6f 4f       	sbci	r22, 0xFF	; 255
     48c:	7f 4f       	sbci	r23, 0xFF	; 255
     48e:	40 93 d8 01 	sts	0x01D8, r20	; 0x8001d8 <sum>
     492:	50 93 d9 01 	sts	0x01D9, r21	; 0x8001d9 <sum+0x1>
     496:	60 93 da 01 	sts	0x01DA, r22	; 0x8001da <sum+0x2>
     49a:	70 93 db 01 	sts	0x01DB, r23	; 0x8001db <sum+0x3>
     49e:	54 c0       	rjmp	.+168    	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
	if(key == sw3) sum = sum * 10 + 3;
     4a0:	8e 34       	cpi	r24, 0x4E	; 78
     4a2:	91 05       	cpc	r25, r1
     4a4:	39 f5       	brne	.+78     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
     4a6:	40 91 d8 01 	lds	r20, 0x01D8	; 0x8001d8 <sum>
     4aa:	50 91 d9 01 	lds	r21, 0x01D9	; 0x8001d9 <sum+0x1>
     4ae:	60 91 da 01 	lds	r22, 0x01DA	; 0x8001da <sum+0x2>
     4b2:	70 91 db 01 	lds	r23, 0x01DB	; 0x8001db <sum+0x3>
     4b6:	44 0f       	add	r20, r20
     4b8:	55 1f       	adc	r21, r21
     4ba:	66 1f       	adc	r22, r22
     4bc:	77 1f       	adc	r23, r23
     4be:	8a 01       	movw	r16, r20
     4c0:	9b 01       	movw	r18, r22
     4c2:	00 0f       	add	r16, r16
     4c4:	11 1f       	adc	r17, r17
     4c6:	22 1f       	adc	r18, r18
     4c8:	33 1f       	adc	r19, r19
     4ca:	00 0f       	add	r16, r16
     4cc:	11 1f       	adc	r17, r17
     4ce:	22 1f       	adc	r18, r18
     4d0:	33 1f       	adc	r19, r19
     4d2:	40 0f       	add	r20, r16
     4d4:	51 1f       	adc	r21, r17
     4d6:	62 1f       	adc	r22, r18
     4d8:	73 1f       	adc	r23, r19
     4da:	4d 5f       	subi	r20, 0xFD	; 253
     4dc:	5f 4f       	sbci	r21, 0xFF	; 255
     4de:	6f 4f       	sbci	r22, 0xFF	; 255
     4e0:	7f 4f       	sbci	r23, 0xFF	; 255
     4e2:	40 93 d8 01 	sts	0x01D8, r20	; 0x8001d8 <sum>
     4e6:	50 93 d9 01 	sts	0x01D9, r21	; 0x8001d9 <sum+0x1>
     4ea:	60 93 da 01 	sts	0x01DA, r22	; 0x8001da <sum+0x2>
     4ee:	70 93 db 01 	sts	0x01DB, r23	; 0x8001db <sum+0x3>
     4f2:	54 c0       	rjmp	.+168    	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
	if(key == sw5) sum = sum * 10 + 4;
     4f4:	8d 31       	cpi	r24, 0x1D	; 29
     4f6:	91 05       	cpc	r25, r1
     4f8:	39 f5       	brne	.+78     	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
     4fa:	40 91 d8 01 	lds	r20, 0x01D8	; 0x8001d8 <sum>
     4fe:	50 91 d9 01 	lds	r21, 0x01D9	; 0x8001d9 <sum+0x1>
     502:	60 91 da 01 	lds	r22, 0x01DA	; 0x8001da <sum+0x2>
     506:	70 91 db 01 	lds	r23, 0x01DB	; 0x8001db <sum+0x3>
     50a:	44 0f       	add	r20, r20
     50c:	55 1f       	adc	r21, r21
     50e:	66 1f       	adc	r22, r22
     510:	77 1f       	adc	r23, r23
     512:	8a 01       	movw	r16, r20
     514:	9b 01       	movw	r18, r22
     516:	00 0f       	add	r16, r16
     518:	11 1f       	adc	r17, r17
     51a:	22 1f       	adc	r18, r18
     51c:	33 1f       	adc	r19, r19
     51e:	00 0f       	add	r16, r16
     520:	11 1f       	adc	r17, r17
     522:	22 1f       	adc	r18, r18
     524:	33 1f       	adc	r19, r19
     526:	40 0f       	add	r20, r16
     528:	51 1f       	adc	r21, r17
     52a:	62 1f       	adc	r22, r18
     52c:	73 1f       	adc	r23, r19
     52e:	4c 5f       	subi	r20, 0xFC	; 252
     530:	5f 4f       	sbci	r21, 0xFF	; 255
     532:	6f 4f       	sbci	r22, 0xFF	; 255
     534:	7f 4f       	sbci	r23, 0xFF	; 255
     536:	40 93 d8 01 	sts	0x01D8, r20	; 0x8001d8 <sum>
     53a:	50 93 d9 01 	sts	0x01D9, r21	; 0x8001d9 <sum+0x1>
     53e:	60 93 da 01 	sts	0x01DA, r22	; 0x8001da <sum+0x2>
     542:	70 93 db 01 	sts	0x01DB, r23	; 0x8001db <sum+0x3>
     546:	54 c0       	rjmp	.+168    	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
	if(key == sw6) sum = sum * 10 + 5;
     548:	8d 32       	cpi	r24, 0x2D	; 45
     54a:	91 05       	cpc	r25, r1
     54c:	39 f5       	brne	.+78     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
     54e:	40 91 d8 01 	lds	r20, 0x01D8	; 0x8001d8 <sum>
     552:	50 91 d9 01 	lds	r21, 0x01D9	; 0x8001d9 <sum+0x1>
     556:	60 91 da 01 	lds	r22, 0x01DA	; 0x8001da <sum+0x2>
     55a:	70 91 db 01 	lds	r23, 0x01DB	; 0x8001db <sum+0x3>
     55e:	44 0f       	add	r20, r20
     560:	55 1f       	adc	r21, r21
     562:	66 1f       	adc	r22, r22
     564:	77 1f       	adc	r23, r23
     566:	8a 01       	movw	r16, r20
     568:	9b 01       	movw	r18, r22
     56a:	00 0f       	add	r16, r16
     56c:	11 1f       	adc	r17, r17
     56e:	22 1f       	adc	r18, r18
     570:	33 1f       	adc	r19, r19
     572:	00 0f       	add	r16, r16
     574:	11 1f       	adc	r17, r17
     576:	22 1f       	adc	r18, r18
     578:	33 1f       	adc	r19, r19
     57a:	40 0f       	add	r20, r16
     57c:	51 1f       	adc	r21, r17
     57e:	62 1f       	adc	r22, r18
     580:	73 1f       	adc	r23, r19
     582:	4b 5f       	subi	r20, 0xFB	; 251
     584:	5f 4f       	sbci	r21, 0xFF	; 255
     586:	6f 4f       	sbci	r22, 0xFF	; 255
     588:	7f 4f       	sbci	r23, 0xFF	; 255
     58a:	40 93 d8 01 	sts	0x01D8, r20	; 0x8001d8 <sum>
     58e:	50 93 d9 01 	sts	0x01D9, r21	; 0x8001d9 <sum+0x1>
     592:	60 93 da 01 	sts	0x01DA, r22	; 0x8001da <sum+0x2>
     596:	70 93 db 01 	sts	0x01DB, r23	; 0x8001db <sum+0x3>
     59a:	54 c0       	rjmp	.+168    	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
	if(key == sw7) sum = sum * 10 + 6;
     59c:	8d 34       	cpi	r24, 0x4D	; 77
     59e:	91 05       	cpc	r25, r1
     5a0:	39 f5       	brne	.+78     	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
     5a2:	40 91 d8 01 	lds	r20, 0x01D8	; 0x8001d8 <sum>
     5a6:	50 91 d9 01 	lds	r21, 0x01D9	; 0x8001d9 <sum+0x1>
     5aa:	60 91 da 01 	lds	r22, 0x01DA	; 0x8001da <sum+0x2>
     5ae:	70 91 db 01 	lds	r23, 0x01DB	; 0x8001db <sum+0x3>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	8a 01       	movw	r16, r20
     5bc:	9b 01       	movw	r18, r22
     5be:	00 0f       	add	r16, r16
     5c0:	11 1f       	adc	r17, r17
     5c2:	22 1f       	adc	r18, r18
     5c4:	33 1f       	adc	r19, r19
     5c6:	00 0f       	add	r16, r16
     5c8:	11 1f       	adc	r17, r17
     5ca:	22 1f       	adc	r18, r18
     5cc:	33 1f       	adc	r19, r19
     5ce:	40 0f       	add	r20, r16
     5d0:	51 1f       	adc	r21, r17
     5d2:	62 1f       	adc	r22, r18
     5d4:	73 1f       	adc	r23, r19
     5d6:	4a 5f       	subi	r20, 0xFA	; 250
     5d8:	5f 4f       	sbci	r21, 0xFF	; 255
     5da:	6f 4f       	sbci	r22, 0xFF	; 255
     5dc:	7f 4f       	sbci	r23, 0xFF	; 255
     5de:	40 93 d8 01 	sts	0x01D8, r20	; 0x8001d8 <sum>
     5e2:	50 93 d9 01 	sts	0x01D9, r21	; 0x8001d9 <sum+0x1>
     5e6:	60 93 da 01 	sts	0x01DA, r22	; 0x8001da <sum+0x2>
     5ea:	70 93 db 01 	sts	0x01DB, r23	; 0x8001db <sum+0x3>
     5ee:	53 c0       	rjmp	.+166    	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
	if(key == sw9) sum = sum * 10 + 7;
     5f0:	8b 31       	cpi	r24, 0x1B	; 27
     5f2:	91 05       	cpc	r25, r1
     5f4:	39 f5       	brne	.+78     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
     5f6:	40 91 d8 01 	lds	r20, 0x01D8	; 0x8001d8 <sum>
     5fa:	50 91 d9 01 	lds	r21, 0x01D9	; 0x8001d9 <sum+0x1>
     5fe:	60 91 da 01 	lds	r22, 0x01DA	; 0x8001da <sum+0x2>
     602:	70 91 db 01 	lds	r23, 0x01DB	; 0x8001db <sum+0x3>
     606:	44 0f       	add	r20, r20
     608:	55 1f       	adc	r21, r21
     60a:	66 1f       	adc	r22, r22
     60c:	77 1f       	adc	r23, r23
     60e:	8a 01       	movw	r16, r20
     610:	9b 01       	movw	r18, r22
     612:	00 0f       	add	r16, r16
     614:	11 1f       	adc	r17, r17
     616:	22 1f       	adc	r18, r18
     618:	33 1f       	adc	r19, r19
     61a:	00 0f       	add	r16, r16
     61c:	11 1f       	adc	r17, r17
     61e:	22 1f       	adc	r18, r18
     620:	33 1f       	adc	r19, r19
     622:	40 0f       	add	r20, r16
     624:	51 1f       	adc	r21, r17
     626:	62 1f       	adc	r22, r18
     628:	73 1f       	adc	r23, r19
     62a:	49 5f       	subi	r20, 0xF9	; 249
     62c:	5f 4f       	sbci	r21, 0xFF	; 255
     62e:	6f 4f       	sbci	r22, 0xFF	; 255
     630:	7f 4f       	sbci	r23, 0xFF	; 255
     632:	40 93 d8 01 	sts	0x01D8, r20	; 0x8001d8 <sum>
     636:	50 93 d9 01 	sts	0x01D9, r21	; 0x8001d9 <sum+0x1>
     63a:	60 93 da 01 	sts	0x01DA, r22	; 0x8001da <sum+0x2>
     63e:	70 93 db 01 	sts	0x01DB, r23	; 0x8001db <sum+0x3>
     642:	52 c0       	rjmp	.+164    	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
	if(key == sw10) sum = sum * 10 + 8;
     644:	8b 32       	cpi	r24, 0x2B	; 43
     646:	91 05       	cpc	r25, r1
     648:	31 f5       	brne	.+76     	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
     64a:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <sum>
     64e:	90 91 d9 01 	lds	r25, 0x01D9	; 0x8001d9 <sum+0x1>
     652:	a0 91 da 01 	lds	r26, 0x01DA	; 0x8001da <sum+0x2>
     656:	b0 91 db 01 	lds	r27, 0x01DB	; 0x8001db <sum+0x3>
     65a:	88 0f       	add	r24, r24
     65c:	99 1f       	adc	r25, r25
     65e:	aa 1f       	adc	r26, r26
     660:	bb 1f       	adc	r27, r27
     662:	ac 01       	movw	r20, r24
     664:	bd 01       	movw	r22, r26
     666:	44 0f       	add	r20, r20
     668:	55 1f       	adc	r21, r21
     66a:	66 1f       	adc	r22, r22
     66c:	77 1f       	adc	r23, r23
     66e:	44 0f       	add	r20, r20
     670:	55 1f       	adc	r21, r21
     672:	66 1f       	adc	r22, r22
     674:	77 1f       	adc	r23, r23
     676:	84 0f       	add	r24, r20
     678:	95 1f       	adc	r25, r21
     67a:	a6 1f       	adc	r26, r22
     67c:	b7 1f       	adc	r27, r23
     67e:	08 96       	adiw	r24, 0x08	; 8
     680:	a1 1d       	adc	r26, r1
     682:	b1 1d       	adc	r27, r1
     684:	80 93 d8 01 	sts	0x01D8, r24	; 0x8001d8 <sum>
     688:	90 93 d9 01 	sts	0x01D9, r25	; 0x8001d9 <sum+0x1>
     68c:	a0 93 da 01 	sts	0x01DA, r26	; 0x8001da <sum+0x2>
     690:	b0 93 db 01 	sts	0x01DB, r27	; 0x8001db <sum+0x3>
     694:	4d c0       	rjmp	.+154    	; 0x730 <__LOCK_REGION_LENGTH__+0x330>
	if(key == sw11) sum = sum * 10 + 9;
     696:	8b 34       	cpi	r24, 0x4B	; 75
     698:	91 05       	cpc	r25, r1
     69a:	31 f5       	brne	.+76     	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
     69c:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <sum>
     6a0:	90 91 d9 01 	lds	r25, 0x01D9	; 0x8001d9 <sum+0x1>
     6a4:	a0 91 da 01 	lds	r26, 0x01DA	; 0x8001da <sum+0x2>
     6a8:	b0 91 db 01 	lds	r27, 0x01DB	; 0x8001db <sum+0x3>
     6ac:	88 0f       	add	r24, r24
     6ae:	99 1f       	adc	r25, r25
     6b0:	aa 1f       	adc	r26, r26
     6b2:	bb 1f       	adc	r27, r27
     6b4:	ac 01       	movw	r20, r24
     6b6:	bd 01       	movw	r22, r26
     6b8:	44 0f       	add	r20, r20
     6ba:	55 1f       	adc	r21, r21
     6bc:	66 1f       	adc	r22, r22
     6be:	77 1f       	adc	r23, r23
     6c0:	44 0f       	add	r20, r20
     6c2:	55 1f       	adc	r21, r21
     6c4:	66 1f       	adc	r22, r22
     6c6:	77 1f       	adc	r23, r23
     6c8:	84 0f       	add	r24, r20
     6ca:	95 1f       	adc	r25, r21
     6cc:	a6 1f       	adc	r26, r22
     6ce:	b7 1f       	adc	r27, r23
     6d0:	09 96       	adiw	r24, 0x09	; 9
     6d2:	a1 1d       	adc	r26, r1
     6d4:	b1 1d       	adc	r27, r1
     6d6:	80 93 d8 01 	sts	0x01D8, r24	; 0x8001d8 <sum>
     6da:	90 93 d9 01 	sts	0x01D9, r25	; 0x8001d9 <sum+0x1>
     6de:	a0 93 da 01 	sts	0x01DA, r26	; 0x8001da <sum+0x2>
     6e2:	b0 93 db 01 	sts	0x01DB, r27	; 0x8001db <sum+0x3>
     6e6:	24 c0       	rjmp	.+72     	; 0x730 <__LOCK_REGION_LENGTH__+0x330>
	if(key == sw13) sum = sum * 10 + 0;	
     6e8:	47 97       	sbiw	r24, 0x17	; 23
     6ea:	11 f5       	brne	.+68     	; 0x730 <__LOCK_REGION_LENGTH__+0x330>
     6ec:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <sum>
     6f0:	90 91 d9 01 	lds	r25, 0x01D9	; 0x8001d9 <sum+0x1>
     6f4:	a0 91 da 01 	lds	r26, 0x01DA	; 0x8001da <sum+0x2>
     6f8:	b0 91 db 01 	lds	r27, 0x01DB	; 0x8001db <sum+0x3>
     6fc:	88 0f       	add	r24, r24
     6fe:	99 1f       	adc	r25, r25
     700:	aa 1f       	adc	r26, r26
     702:	bb 1f       	adc	r27, r27
     704:	ac 01       	movw	r20, r24
     706:	bd 01       	movw	r22, r26
     708:	44 0f       	add	r20, r20
     70a:	55 1f       	adc	r21, r21
     70c:	66 1f       	adc	r22, r22
     70e:	77 1f       	adc	r23, r23
     710:	44 0f       	add	r20, r20
     712:	55 1f       	adc	r21, r21
     714:	66 1f       	adc	r22, r22
     716:	77 1f       	adc	r23, r23
     718:	84 0f       	add	r24, r20
     71a:	95 1f       	adc	r25, r21
     71c:	a6 1f       	adc	r26, r22
     71e:	b7 1f       	adc	r27, r23
     720:	80 93 d8 01 	sts	0x01D8, r24	; 0x8001d8 <sum>
     724:	90 93 d9 01 	sts	0x01D9, r25	; 0x8001d9 <sum+0x1>
     728:	a0 93 da 01 	sts	0x01DA, r26	; 0x8001da <sum+0x2>
     72c:	b0 93 db 01 	sts	0x01DB, r27	; 0x8001db <sum+0x3>
}
     730:	1f 91       	pop	r17
     732:	0f 91       	pop	r16
     734:	08 95       	ret

00000736 <main>:

int main(void)
{
     736:	cf 93       	push	r28
     738:	df 93       	push	r29
     73a:	cd b7       	in	r28, 0x3d	; 61
     73c:	de b7       	in	r29, 0x3e	; 62
     73e:	28 97       	sbiw	r28, 0x08	; 8
     740:	0f b6       	in	r0, 0x3f	; 63
     742:	f8 94       	cli
     744:	de bf       	out	0x3e, r29	; 62
     746:	0f be       	out	0x3f, r0	; 63
     748:	cd bf       	out	0x3d, r28	; 61
	//timer init
	TCNT0 = 6;  // TCNT0가 256이 될때 overflow -> 0  1/16mHz = 0.0000000625, 0.0000000625 * 64 = 0.000004 분주한 속도
     74a:	86 e0       	ldi	r24, 0x06	; 6
     74c:	82 bf       	out	0x32, r24	; 50
	TIMSK = 0x01;  // 0b00000001, timer 0 enable
     74e:	81 e0       	ldi	r24, 0x01	; 1
     750:	87 bf       	out	0x37, r24	; 55
	TCCR0 = 0b00000100;  // 0b00000100, 분주비 = 64
     752:	84 e0       	ldi	r24, 0x04	; 4
     754:	83 bf       	out	0x33, r24	; 51
	sei();  // 숫자를 카운트
     756:	78 94       	sei
	
	initSystem();
     758:	7c dd       	rcall	.-1288   	; 0x252 <_Z10initSystemv>
	
	long int total_sale = 0;
     75a:	19 82       	std	Y+1, r1	; 0x01
     75c:	1a 82       	std	Y+2, r1	; 0x02
     75e:	1b 82       	std	Y+3, r1	; 0x03
     760:	1c 82       	std	Y+4, r1	; 0x04
					lcd_clear();
					break;					
				}
				
				lcd_putsf(0,0,(unsigned char*)"    WELCOME!!   ");
				sprintf(str,"    %02d:%02d:%02d    ",hour, min, sec);
     762:	0f 2e       	mov	r0, r31
     764:	f4 e3       	ldi	r31, 0x34	; 52
     766:	ef 2e       	mov	r14, r31
     768:	f1 e0       	ldi	r31, 0x01	; 1
     76a:	ff 2e       	mov	r15, r31
     76c:	f0 2d       	mov	r31, r0
     76e:	04 ec       	ldi	r16, 0xC4	; 196
     770:	11 e0       	ldi	r17, 0x01	; 1
     772:	60 2e       	mov	r6, r16
     774:	71 2e       	mov	r7, r17
					error_flag = false;
					mode = CLOCK;
					break;
				}

				if(total_flag) sprintf(str,"    %ld",sum);
     776:	0f 2e       	mov	r0, r31
     778:	ff e8       	ldi	r31, 0x8F	; 143
     77a:	8f 2e       	mov	r8, r31
     77c:	f1 e0       	ldi	r31, 0x01	; 1
     77e:	9f 2e       	mov	r9, r31
     780:	f0 2d       	mov	r31, r0
				else sprintf(str,"= %ld won",total_sum);
     782:	0f 2e       	mov	r0, r31
     784:	f7 e9       	ldi	r31, 0x97	; 151
     786:	4f 2e       	mov	r4, r31
     788:	f1 e0       	ldi	r31, 0x01	; 1
     78a:	5f 2e       	mov	r5, r31
     78c:	f0 2d       	mov	r31, r0
	initSystem();
	
	long int total_sale = 0;
    while (1) 
    {
		if(mode == CLOCK){
     78e:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <mode>
     792:	90 91 e1 01 	lds	r25, 0x01E1	; 0x8001e1 <mode+0x1>
     796:	00 97       	sbiw	r24, 0x00	; 0
     798:	09 f0       	breq	.+2      	; 0x79c <main+0x66>
			while(1){
				unsigned int key = my_getkey();
     79a:	3e c0       	rjmp	.+124    	; 0x818 <main+0xe2>
     79c:	12 dd       	rcall	.-1500   	; 0x1c2 <_Z9my_getkeyv>
				if(key == sw12){
     79e:	8b 38       	cpi	r24, 0x8B	; 139
     7a0:	91 05       	cpc	r25, r1
     7a2:	41 f4       	brne	.+16     	; 0x7b4 <main+0x7e>
					mode = MENU;
     7a4:	81 e0       	ldi	r24, 0x01	; 1
     7a6:	90 e0       	ldi	r25, 0x00	; 0
     7a8:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <mode+0x1>
     7ac:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <mode>
					lcd_clear();
     7b0:	01 dd       	rcall	.-1534   	; 0x1b4 <_Z9lcd_clearv>
					break;
     7b2:	ed cf       	rjmp	.-38     	; 0x78e <main+0x58>
				}
				
				if(PINF == 0x01){
     7b4:	80 b1       	in	r24, 0x00	; 0
     7b6:	81 30       	cpi	r24, 0x01	; 1
     7b8:	41 f4       	brne	.+16     	; 0x7ca <main+0x94>
					mode = CALCUL;
     7ba:	82 e0       	ldi	r24, 0x02	; 2
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <mode+0x1>
     7c2:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <mode>
					lcd_clear();
     7c6:	f6 dc       	rcall	.-1556   	; 0x1b4 <_Z9lcd_clearv>
					break;					
     7c8:	e2 cf       	rjmp	.-60     	; 0x78e <main+0x58>
				}
				
				lcd_putsf(0,0,(unsigned char*)"    WELCOME!!   ");
     7ca:	43 e2       	ldi	r20, 0x23	; 35
     7cc:	51 e0       	ldi	r21, 0x01	; 1
     7ce:	60 e0       	ldi	r22, 0x00	; 0
     7d0:	80 e0       	ldi	r24, 0x00	; 0
     7d2:	ae dc       	rcall	.-1700   	; 0x130 <_Z9lcd_putsfhhPh>
				sprintf(str,"    %02d:%02d:%02d    ",hour, min, sec);
     7d4:	80 91 e5 01 	lds	r24, 0x01E5	; 0x8001e5 <sec+0x1>
     7d8:	8f 93       	push	r24
     7da:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <sec>
     7de:	8f 93       	push	r24
     7e0:	80 91 e7 01 	lds	r24, 0x01E7	; 0x8001e7 <min+0x1>
     7e4:	8f 93       	push	r24
     7e6:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <min>
     7ea:	8f 93       	push	r24
     7ec:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <hour+0x1>
     7f0:	8f 93       	push	r24
     7f2:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <hour>
     7f6:	8f 93       	push	r24
     7f8:	ff 92       	push	r15
     7fa:	ef 92       	push	r14
     7fc:	1f 93       	push	r17
     7fe:	0f 93       	push	r16
				lcd_putsf(0,1,(unsigned char*)str);
     800:	3f d2       	rcall	.+1150   	; 0xc80 <sprintf>
     802:	46 2d       	mov	r20, r6
     804:	57 2d       	mov	r21, r7
     806:	61 e0       	ldi	r22, 0x01	; 1
     808:	80 e0       	ldi	r24, 0x00	; 0
     80a:	92 dc       	rcall	.-1756   	; 0x130 <_Z9lcd_putsfhhPh>
	
	long int total_sale = 0;
    while (1) 
    {
		if(mode == CLOCK){
			while(1){
     80c:	0f b6       	in	r0, 0x3f	; 63
     80e:	f8 94       	cli
     810:	de bf       	out	0x3e, r29	; 62
     812:	0f be       	out	0x3f, r0	; 63
     814:	cd bf       	out	0x3d, r28	; 61
				sprintf(str,"    %02d:%02d:%02d    ",hour, min, sec);
				lcd_putsf(0,1,(unsigned char*)str);
			}
		}
		
		else if(mode == MENU){
     816:	c2 cf       	rjmp	.-124    	; 0x79c <main+0x66>
     818:	81 30       	cpi	r24, 0x01	; 1
     81a:	91 05       	cpc	r25, r1
			while(1){
				unsigned int key = my_getkey();
     81c:	09 f5       	brne	.+66     	; 0x860 <main+0x12a>
     81e:	d1 dc       	rcall	.-1630   	; 0x1c2 <_Z9my_getkeyv>
				
				if(key == sw1){
     820:	8e 31       	cpi	r24, 0x1E	; 30
     822:	91 05       	cpc	r25, r1
					mode = CALCUL;
     824:	41 f4       	brne	.+16     	; 0x836 <main+0x100>
     826:	82 e0       	ldi	r24, 0x02	; 2
     828:	90 e0       	ldi	r25, 0x00	; 0
     82a:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <mode+0x1>
     82e:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <mode>
					lcd_clear();
     832:	c0 dc       	rcall	.-1664   	; 0x1b4 <_Z9lcd_clearv>
					break;
				}
				
				if(key == sw2){
     834:	ac cf       	rjmp	.-168    	; 0x78e <main+0x58>
     836:	8e 97       	sbiw	r24, 0x2e	; 46
					mode = TOTAL;
     838:	41 f4       	brne	.+16     	; 0x84a <main+0x114>
     83a:	84 e0       	ldi	r24, 0x04	; 4
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <mode+0x1>
					lcd_clear();
     842:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <mode>
					break;
				}
				
				lcd_putsf(0,0,(unsigned char*)"1: Calculation  ");
     846:	b6 dc       	rcall	.-1684   	; 0x1b4 <_Z9lcd_clearv>
     848:	a2 cf       	rjmp	.-188    	; 0x78e <main+0x58>
     84a:	4b e4       	ldi	r20, 0x4B	; 75
     84c:	51 e0       	ldi	r21, 0x01	; 1
     84e:	60 e0       	ldi	r22, 0x00	; 0
     850:	80 e0       	ldi	r24, 0x00	; 0
				lcd_putsf(0,1,(unsigned char*)"2: Total Sales  ");
     852:	6e dc       	rcall	.-1828   	; 0x130 <_Z9lcd_putsfhhPh>
     854:	4c e5       	ldi	r20, 0x5C	; 92
     856:	51 e0       	ldi	r21, 0x01	; 1
     858:	61 e0       	ldi	r22, 0x01	; 1
     85a:	80 e0       	ldi	r24, 0x00	; 0
				lcd_putsf(0,1,(unsigned char*)str);
			}
		}
		
		else if(mode == MENU){
			while(1){
     85c:	69 dc       	rcall	.-1838   	; 0x130 <_Z9lcd_putsfhhPh>
				lcd_putsf(0,0,(unsigned char*)"1: Calculation  ");
				lcd_putsf(0,1,(unsigned char*)"2: Total Sales  ");
			}
		}
		
		else if(mode == CALCUL){
     85e:	df cf       	rjmp	.-66     	; 0x81e <main+0xe8>
     860:	82 30       	cpi	r24, 0x02	; 2
				lcd_putsf(0,0,(unsigned char*)"Calculate Mode  ");
				
				key_input(key);
					
				if(key == sw4){ // +
					if(sum > 200000) error_flag = true;
     862:	91 05       	cpc	r25, r1
     864:	09 f0       	breq	.+2      	; 0x868 <main+0x132>
			}
		}
		
		else if(mode == CALCUL){
			while(1){
				unsigned int key = my_getkey();
     866:	0a c1       	rjmp	.+532    	; 0xa7c <main+0x346>
     868:	bb 24       	eor	r11, r11
     86a:	b3 94       	inc	r11
				
				lcd_putsf(0,0,(unsigned char*)"Calculate Mode  ");
     86c:	aa dc       	rcall	.-1708   	; 0x1c2 <_Z9my_getkeyv>
     86e:	6c 01       	movw	r12, r24
     870:	4d e6       	ldi	r20, 0x6D	; 109
     872:	51 e0       	ldi	r21, 0x01	; 1
     874:	60 e0       	ldi	r22, 0x00	; 0
     876:	80 e0       	ldi	r24, 0x00	; 0
				
				key_input(key);
     878:	5b dc       	rcall	.-1866   	; 0x130 <_Z9lcd_putsfhhPh>
     87a:	c6 01       	movw	r24, r12
     87c:	bb dd       	rcall	.-1162   	; 0x3f4 <_Z9key_inputj>
					
				if(key == sw4){ // +
     87e:	be e8       	ldi	r27, 0x8E	; 142
     880:	cb 16       	cp	r12, r27
     882:	d1 04       	cpc	r13, r1
     884:	81 f5       	brne	.+96     	; 0x8e6 <main+0x1b0>
					if(sum > 200000) error_flag = true;
     886:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <sum>
     88a:	90 91 d9 01 	lds	r25, 0x01D9	; 0x8001d9 <sum+0x1>
     88e:	a0 91 da 01 	lds	r26, 0x01DA	; 0x8001da <sum+0x2>
     892:	b0 91 db 01 	lds	r27, 0x01DB	; 0x8001db <sum+0x3>
     896:	81 34       	cpi	r24, 0x41	; 65
     898:	2d e0       	ldi	r18, 0x0D	; 13
     89a:	92 07       	cpc	r25, r18
     89c:	23 e0       	ldi	r18, 0x03	; 3
     89e:	a2 07       	cpc	r26, r18
     8a0:	b1 05       	cpc	r27, r1
     8a2:	1c f0       	brlt	.+6      	; 0x8aa <main+0x174>
     8a4:	b0 92 df 01 	sts	0x01DF, r11	; 0x8001df <error_flag>
     8a8:	70 c0       	rjmp	.+224    	; 0x98a <main+0x254>
					else{
						total_sum += sum;
     8aa:	40 91 d4 01 	lds	r20, 0x01D4	; 0x8001d4 <total_sum>
     8ae:	50 91 d5 01 	lds	r21, 0x01D5	; 0x8001d5 <total_sum+0x1>
     8b2:	60 91 d6 01 	lds	r22, 0x01D6	; 0x8001d6 <total_sum+0x2>
     8b6:	70 91 d7 01 	lds	r23, 0x01D7	; 0x8001d7 <total_sum+0x3>
     8ba:	84 0f       	add	r24, r20
     8bc:	95 1f       	adc	r25, r21
     8be:	a6 1f       	adc	r26, r22
     8c0:	b7 1f       	adc	r27, r23
     8c2:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <total_sum>
     8c6:	90 93 d5 01 	sts	0x01D5, r25	; 0x8001d5 <total_sum+0x1>
     8ca:	a0 93 d6 01 	sts	0x01D6, r26	; 0x8001d6 <total_sum+0x2>
     8ce:	b0 93 d7 01 	sts	0x01D7, r27	; 0x8001d7 <total_sum+0x3>
						sum = 0;
     8d2:	10 92 d8 01 	sts	0x01D8, r1	; 0x8001d8 <sum>
     8d6:	10 92 d9 01 	sts	0x01D9, r1	; 0x8001d9 <sum+0x1>
     8da:	10 92 da 01 	sts	0x01DA, r1	; 0x8001da <sum+0x2>
     8de:	10 92 db 01 	sts	0x01DB, r1	; 0x8001db <sum+0x3>
						lcd_clear();
     8e2:	68 dc       	rcall	.-1840   	; 0x1b4 <_Z9lcd_clearv>
     8e4:	52 c0       	rjmp	.+164    	; 0x98a <main+0x254>
					}
				}
				
				if(key == sw8){
     8e6:	8d e8       	ldi	r24, 0x8D	; 141
     8e8:	c8 16       	cp	r12, r24
     8ea:	d1 04       	cpc	r13, r1
     8ec:	c9 f5       	brne	.+114    	; 0x960 <main+0x22a>
					if(total_sum > 200000) error_flag = true;
     8ee:	80 91 d4 01 	lds	r24, 0x01D4	; 0x8001d4 <total_sum>
     8f2:	90 91 d5 01 	lds	r25, 0x01D5	; 0x8001d5 <total_sum+0x1>
     8f6:	a0 91 d6 01 	lds	r26, 0x01D6	; 0x8001d6 <total_sum+0x2>
     8fa:	b0 91 d7 01 	lds	r27, 0x01D7	; 0x8001d7 <total_sum+0x3>
     8fe:	81 34       	cpi	r24, 0x41	; 65
     900:	2d e0       	ldi	r18, 0x0D	; 13
     902:	92 07       	cpc	r25, r18
     904:	23 e0       	ldi	r18, 0x03	; 3
     906:	a2 07       	cpc	r26, r18
     908:	b1 05       	cpc	r27, r1
     90a:	1c f0       	brlt	.+6      	; 0x912 <main+0x1dc>
     90c:	b0 92 df 01 	sts	0x01DF, r11	; 0x8001df <error_flag>
     910:	3c c0       	rjmp	.+120    	; 0x98a <main+0x254>
					else{
						total_sum += sum;
     912:	40 91 d8 01 	lds	r20, 0x01D8	; 0x8001d8 <sum>
     916:	50 91 d9 01 	lds	r21, 0x01D9	; 0x8001d9 <sum+0x1>
     91a:	60 91 da 01 	lds	r22, 0x01DA	; 0x8001da <sum+0x2>
     91e:	70 91 db 01 	lds	r23, 0x01DB	; 0x8001db <sum+0x3>
     922:	84 0f       	add	r24, r20
     924:	95 1f       	adc	r25, r21
     926:	a6 1f       	adc	r26, r22
     928:	b7 1f       	adc	r27, r23
     92a:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <total_sum>
     92e:	90 93 d5 01 	sts	0x01D5, r25	; 0x8001d5 <total_sum+0x1>
     932:	a0 93 d6 01 	sts	0x01D6, r26	; 0x8001d6 <total_sum+0x2>
     936:	b0 93 d7 01 	sts	0x01D7, r27	; 0x8001d7 <total_sum+0x3>
						sum = 0;
     93a:	10 92 d8 01 	sts	0x01D8, r1	; 0x8001d8 <sum>
     93e:	10 92 d9 01 	sts	0x01D9, r1	; 0x8001d9 <sum+0x1>
     942:	10 92 da 01 	sts	0x01DA, r1	; 0x8001da <sum+0x2>
     946:	10 92 db 01 	sts	0x01DB, r1	; 0x8001db <sum+0x3>
						lcd_clear();
     94a:	34 dc       	rcall	.-1944   	; 0x1b4 <_Z9lcd_clearv>
						change_flag = true;
     94c:	b0 92 de 01 	sts	0x01DE, r11	; 0x8001de <change_flag>
						total_flag = false;
     950:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
					total_flag = true;
					change_flag = false;
					break;
				}

				if(error_flag){
     954:	80 91 df 01 	lds	r24, 0x01DF	; 0x8001df <error_flag>
     958:	88 23       	and	r24, r24
     95a:	09 f4       	brne	.+2      	; 0x95e <main+0x228>
     95c:	73 c0       	rjmp	.+230    	; 0xa44 <main+0x30e>
						change_flag = true;
						total_flag = false;
					}
				}
				
				if(change_flag && key == sw14){
     95e:	1a c0       	rjmp	.+52     	; 0x994 <main+0x25e>
     960:	80 91 de 01 	lds	r24, 0x01DE	; 0x8001de <change_flag>
     964:	88 23       	and	r24, r24
     966:	89 f0       	breq	.+34     	; 0x98a <main+0x254>
     968:	87 e4       	ldi	r24, 0x47	; 71
     96a:	c8 16       	cp	r12, r24
     96c:	d1 04       	cpc	r13, r1
					mode = CHANGE;
     96e:	69 f4       	brne	.+26     	; 0x98a <main+0x254>
     970:	83 e0       	ldi	r24, 0x03	; 3
     972:	90 e0       	ldi	r25, 0x00	; 0
     974:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <mode+0x1>
     978:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <mode>
					lcd_clear();
     97c:	1b dc       	rcall	.-1994   	; 0x1b4 <_Z9lcd_clearv>
					total_flag = true;
     97e:	81 e0       	ldi	r24, 0x01	; 1
     980:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
					change_flag = false;
     984:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <change_flag>
					break;
     988:	02 cf       	rjmp	.-508    	; 0x78e <main+0x58>
				}

				if(error_flag){
     98a:	80 91 df 01 	lds	r24, 0x01DF	; 0x8001df <error_flag>
     98e:	88 23       	and	r24, r24
     990:	09 f4       	brne	.+2      	; 0x994 <main+0x25e>
	TCCR0 = 0b00000100;  // 0b00000100, 분주비 = 64
	sei();  // 숫자를 카운트
	
	initSystem();
	
	long int total_sale = 0;
     992:	3d c0       	rjmp	.+122    	; 0xa0e <main+0x2d8>
     994:	0f 2e       	mov	r0, r31
     996:	f3 e0       	ldi	r31, 0x03	; 3
     998:	cf 2e       	mov	r12, r31
     99a:	d1 2c       	mov	r13, r1
					break;
				}

				if(error_flag){
					for(int i=0;i<3;i++){
						sprintf(str,"     ERROR!     ");
     99c:	f0 2d       	mov	r31, r0
     99e:	81 e1       	ldi	r24, 0x11	; 17
     9a0:	ee e7       	ldi	r30, 0x7E	; 126
     9a2:	f1 e0       	ldi	r31, 0x01	; 1
     9a4:	d8 01       	movw	r26, r16
     9a6:	01 90       	ld	r0, Z+
     9a8:	0d 92       	st	X+, r0
						lcd_putsf(0,1,(unsigned char*)str);
     9aa:	8a 95       	dec	r24
     9ac:	e1 f7       	brne	.-8      	; 0x9a6 <main+0x270>
     9ae:	a8 01       	movw	r20, r16
     9b0:	61 e0       	ldi	r22, 0x01	; 1
     9b2:	80 e0       	ldi	r24, 0x00	; 0
     9b4:	bd db       	rcall	.-2182   	; 0x130 <_Z9lcd_putsfhhPh>
     9b6:	88 ee       	ldi	r24, 0xE8	; 232
     9b8:	93 e0       	ldi	r25, 0x03	; 3
     9ba:	e0 e9       	ldi	r30, 0x90	; 144
     9bc:	f1 e0       	ldi	r31, 0x01	; 1
     9be:	31 97       	sbiw	r30, 0x01	; 1
     9c0:	f1 f7       	brne	.-4      	; 0x9be <main+0x288>
     9c2:	01 97       	sbiw	r24, 0x01	; 1
						_delay_ms(100);
						lcd_clear();
     9c4:	d1 f7       	brne	.-12     	; 0x9ba <main+0x284>
     9c6:	f6 db       	rcall	.-2068   	; 0x1b4 <_Z9lcd_clearv>
     9c8:	88 ee       	ldi	r24, 0xE8	; 232
     9ca:	93 e0       	ldi	r25, 0x03	; 3
     9cc:	e0 e9       	ldi	r30, 0x90	; 144
     9ce:	f1 e0       	ldi	r31, 0x01	; 1
     9d0:	31 97       	sbiw	r30, 0x01	; 1
     9d2:	f1 f7       	brne	.-4      	; 0x9d0 <main+0x29a>
     9d4:	01 97       	sbiw	r24, 0x01	; 1
     9d6:	d1 f7       	brne	.-12     	; 0x9cc <main+0x296>
     9d8:	91 e0       	ldi	r25, 0x01	; 1
     9da:	c9 1a       	sub	r12, r25
     9dc:	d1 08       	sbc	r13, r1
					change_flag = false;
					break;
				}

				if(error_flag){
					for(int i=0;i<3;i++){
     9de:	f9 f6       	brne	.-66     	; 0x99e <main+0x268>
						lcd_putsf(0,1,(unsigned char*)str);
						_delay_ms(100);
						lcd_clear();
						_delay_ms(100);
					}
					total_sum = 0;
     9e0:	10 92 d4 01 	sts	0x01D4, r1	; 0x8001d4 <total_sum>
     9e4:	10 92 d5 01 	sts	0x01D5, r1	; 0x8001d5 <total_sum+0x1>
     9e8:	10 92 d6 01 	sts	0x01D6, r1	; 0x8001d6 <total_sum+0x2>
     9ec:	10 92 d7 01 	sts	0x01D7, r1	; 0x8001d7 <total_sum+0x3>
					sum = 0;
     9f0:	10 92 d8 01 	sts	0x01D8, r1	; 0x8001d8 <sum>
     9f4:	10 92 d9 01 	sts	0x01D9, r1	; 0x8001d9 <sum+0x1>
     9f8:	10 92 da 01 	sts	0x01DA, r1	; 0x8001da <sum+0x2>
     9fc:	10 92 db 01 	sts	0x01DB, r1	; 0x8001db <sum+0x3>
					error_flag = false;
     a00:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <error_flag>
					mode = CLOCK;
     a04:	10 92 e1 01 	sts	0x01E1, r1	; 0x8001e1 <mode+0x1>
     a08:	10 92 e0 01 	sts	0x01E0, r1	; 0x8001e0 <mode>
					break;
     a0c:	c0 ce       	rjmp	.-640    	; 0x78e <main+0x58>
				}

				if(total_flag) sprintf(str,"    %ld",sum);
     a0e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     a12:	88 23       	and	r24, r24
     a14:	b9 f0       	breq	.+46     	; 0xa44 <main+0x30e>
     a16:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <sum+0x3>
     a1a:	8f 93       	push	r24
     a1c:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <sum+0x2>
     a20:	8f 93       	push	r24
     a22:	80 91 d9 01 	lds	r24, 0x01D9	; 0x8001d9 <sum+0x1>
     a26:	8f 93       	push	r24
     a28:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <sum>
     a2c:	8f 93       	push	r24
     a2e:	9f 92       	push	r9
     a30:	8f 92       	push	r8
     a32:	1f 93       	push	r17
     a34:	0f 93       	push	r16
     a36:	24 d1       	rcall	.+584    	; 0xc80 <sprintf>
     a38:	0f b6       	in	r0, 0x3f	; 63
     a3a:	f8 94       	cli
     a3c:	de bf       	out	0x3e, r29	; 62
     a3e:	0f be       	out	0x3f, r0	; 63
     a40:	cd bf       	out	0x3d, r28	; 61
				else sprintf(str,"= %ld won",total_sum);
     a42:	16 c0       	rjmp	.+44     	; 0xa70 <main+0x33a>
     a44:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <total_sum+0x3>
     a48:	8f 93       	push	r24
     a4a:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <total_sum+0x2>
     a4e:	8f 93       	push	r24
     a50:	80 91 d5 01 	lds	r24, 0x01D5	; 0x8001d5 <total_sum+0x1>
     a54:	8f 93       	push	r24
     a56:	80 91 d4 01 	lds	r24, 0x01D4	; 0x8001d4 <total_sum>
     a5a:	8f 93       	push	r24
     a5c:	5f 92       	push	r5
     a5e:	4f 92       	push	r4
     a60:	1f 93       	push	r17
     a62:	0f 93       	push	r16
     a64:	0d d1       	rcall	.+538    	; 0xc80 <sprintf>
     a66:	0f b6       	in	r0, 0x3f	; 63
     a68:	f8 94       	cli
				lcd_putsf(0,1,(unsigned char*)str);
     a6a:	de bf       	out	0x3e, r29	; 62
     a6c:	0f be       	out	0x3f, r0	; 63
     a6e:	cd bf       	out	0x3d, r28	; 61
     a70:	46 2d       	mov	r20, r6
     a72:	57 2d       	mov	r21, r7
     a74:	6b 2d       	mov	r22, r11
				lcd_putsf(0,1,(unsigned char*)"2: Total Sales  ");
			}
		}
		
		else if(mode == CALCUL){
			while(1){
     a76:	80 e0       	ldi	r24, 0x00	; 0
				else sprintf(str,"= %ld won",total_sum);
				lcd_putsf(0,1,(unsigned char*)str);
			}
		}

		else if(mode == CHANGE){
     a78:	5b db       	rcall	.-2378   	; 0x130 <_Z9lcd_putsfhhPh>
     a7a:	f8 ce       	rjmp	.-528    	; 0x86c <main+0x136>
     a7c:	83 30       	cpi	r24, 0x03	; 3
     a7e:	91 05       	cpc	r25, r1
					if(total_sum > sum) error_flag = true;
					else{
						total_sale += total_sum;
						sum = sum - total_sum;
						total_sum = 0;
						endtime_flag = true;
     a80:	09 f0       	breq	.+2      	; 0xa84 <main+0x34e>
     a82:	bf c0       	rjmp	.+382    	; 0xc02 <main+0x4cc>
			}
		}

		else if(mode == CHANGE){
			while(1){
				unsigned int key = my_getkey();
     a84:	33 24       	eor	r3, r3
     a86:	33 94       	inc	r3
     a88:	9c db       	rcall	.-2248   	; 0x1c2 <_Z9my_getkeyv>
				lcd_putsf(0,0,(unsigned char*)"Changes Mode    ");
     a8a:	5c 01       	movw	r10, r24
     a8c:	41 ea       	ldi	r20, 0xA1	; 161
     a8e:	51 e0       	ldi	r21, 0x01	; 1
     a90:	60 e0       	ldi	r22, 0x00	; 0
     a92:	80 e0       	ldi	r24, 0x00	; 0
     a94:	4d db       	rcall	.-2406   	; 0x130 <_Z9lcd_putsfhhPh>
				key_input(key);
     a96:	c5 01       	movw	r24, r10
     a98:	ad dc       	rcall	.-1702   	; 0x3f4 <_Z9key_inputj>
     a9a:	9d e8       	ldi	r25, 0x8D	; 141

				if(key == sw8){
     a9c:	a9 16       	cp	r10, r25
     a9e:	b1 04       	cpc	r11, r1
     aa0:	09 f0       	breq	.+2      	; 0xaa4 <main+0x36e>
     aa2:	e8 c0       	rjmp	.+464    	; 0xc74 <main+0x53e>
     aa4:	40 91 d4 01 	lds	r20, 0x01D4	; 0x8001d4 <total_sum>
					if(total_sum > sum) error_flag = true;
     aa8:	50 91 d5 01 	lds	r21, 0x01D5	; 0x8001d5 <total_sum+0x1>
     aac:	60 91 d6 01 	lds	r22, 0x01D6	; 0x8001d6 <total_sum+0x2>
     ab0:	70 91 d7 01 	lds	r23, 0x01D7	; 0x8001d7 <total_sum+0x3>
     ab4:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <sum>
     ab8:	90 91 d9 01 	lds	r25, 0x01D9	; 0x8001d9 <sum+0x1>
     abc:	a0 91 da 01 	lds	r26, 0x01DA	; 0x8001da <sum+0x2>
     ac0:	b0 91 db 01 	lds	r27, 0x01DB	; 0x8001db <sum+0x3>
     ac4:	8d 83       	std	Y+5, r24	; 0x05
     ac6:	9e 83       	std	Y+6, r25	; 0x06
     ac8:	af 83       	std	Y+7, r26	; 0x07
     aca:	b8 87       	std	Y+8, r27	; 0x08
     acc:	84 17       	cp	r24, r20
     ace:	95 07       	cpc	r25, r21
     ad0:	a6 07       	cpc	r26, r22
     ad2:	b7 07       	cpc	r27, r23
     ad4:	1c f4       	brge	.+6      	; 0xadc <main+0x3a6>
     ad6:	30 92 df 01 	sts	0x01DF, r3	; 0x8001df <error_flag>
     ada:	2b c0       	rjmp	.+86     	; 0xb32 <main+0x3fc>
     adc:	89 81       	ldd	r24, Y+1	; 0x01
					else{
						total_sale += total_sum;
     ade:	9a 81       	ldd	r25, Y+2	; 0x02
     ae0:	ab 81       	ldd	r26, Y+3	; 0x03
     ae2:	bc 81       	ldd	r27, Y+4	; 0x04
     ae4:	84 0f       	add	r24, r20
     ae6:	95 1f       	adc	r25, r21
     ae8:	a6 1f       	adc	r26, r22
     aea:	b7 1f       	adc	r27, r23
     aec:	89 83       	std	Y+1, r24	; 0x01
     aee:	9a 83       	std	Y+2, r25	; 0x02
     af0:	ab 83       	std	Y+3, r26	; 0x03
     af2:	bc 83       	std	Y+4, r27	; 0x04
     af4:	8d 81       	ldd	r24, Y+5	; 0x05
						sum = sum - total_sum;
     af6:	9e 81       	ldd	r25, Y+6	; 0x06
     af8:	af 81       	ldd	r26, Y+7	; 0x07
     afa:	b8 85       	ldd	r27, Y+8	; 0x08
     afc:	84 1b       	sub	r24, r20
     afe:	95 0b       	sbc	r25, r21
     b00:	a6 0b       	sbc	r26, r22
     b02:	b7 0b       	sbc	r27, r23
     b04:	80 93 d8 01 	sts	0x01D8, r24	; 0x8001d8 <sum>
     b08:	90 93 d9 01 	sts	0x01D9, r25	; 0x8001d9 <sum+0x1>
     b0c:	a0 93 da 01 	sts	0x01DA, r26	; 0x8001da <sum+0x2>
     b10:	b0 93 db 01 	sts	0x01DB, r27	; 0x8001db <sum+0x3>
						total_sum = 0;
     b14:	10 92 d4 01 	sts	0x01D4, r1	; 0x8001d4 <total_sum>
     b18:	10 92 d5 01 	sts	0x01D5, r1	; 0x8001d5 <total_sum+0x1>
     b1c:	10 92 d6 01 	sts	0x01D6, r1	; 0x8001d6 <total_sum+0x2>
     b20:	10 92 d7 01 	sts	0x01D7, r1	; 0x8001d7 <total_sum+0x3>
						endtime_flag = true;
     b24:	30 92 dd 01 	sts	0x01DD, r3	; 0x8001dd <endtime_flag>
						lcd_clear();
     b28:	45 db       	rcall	.-2422   	; 0x1b4 <_Z9lcd_clearv>
					}
				}
				
				if(error_flag){
     b2a:	80 91 df 01 	lds	r24, 0x01DF	; 0x8001df <error_flag>
     b2e:	88 23       	and	r24, r24
				if(error_flag){
					for(int i=0;i<3;i++){
						sprintf(str,"     ERROR!     ");
						lcd_putsf(0,1,(unsigned char*)str);
						_delay_ms(100);
						lcd_clear();
     b30:	a1 f1       	breq	.+104    	; 0xb9a <main+0x464>
     b32:	0f 2e       	mov	r0, r31
     b34:	f3 e0       	ldi	r31, 0x03	; 3
     b36:	cf 2e       	mov	r12, r31
     b38:	d1 2c       	mov	r13, r1
					}
				}
				
				if(error_flag){
					for(int i=0;i<3;i++){
						sprintf(str,"     ERROR!     ");
     b3a:	f0 2d       	mov	r31, r0
     b3c:	81 e1       	ldi	r24, 0x11	; 17
     b3e:	ee e7       	ldi	r30, 0x7E	; 126
     b40:	f1 e0       	ldi	r31, 0x01	; 1
     b42:	d8 01       	movw	r26, r16
     b44:	01 90       	ld	r0, Z+
     b46:	0d 92       	st	X+, r0
     b48:	8a 95       	dec	r24
						lcd_putsf(0,1,(unsigned char*)str);
     b4a:	e1 f7       	brne	.-8      	; 0xb44 <main+0x40e>
     b4c:	a8 01       	movw	r20, r16
     b4e:	63 2d       	mov	r22, r3
     b50:	80 e0       	ldi	r24, 0x00	; 0
     b52:	ee da       	rcall	.-2596   	; 0x130 <_Z9lcd_putsfhhPh>
     b54:	88 ee       	ldi	r24, 0xE8	; 232
     b56:	93 e0       	ldi	r25, 0x03	; 3
     b58:	e0 e9       	ldi	r30, 0x90	; 144
     b5a:	f1 e0       	ldi	r31, 0x01	; 1
     b5c:	31 97       	sbiw	r30, 0x01	; 1
     b5e:	f1 f7       	brne	.-4      	; 0xb5c <main+0x426>
     b60:	01 97       	sbiw	r24, 0x01	; 1
     b62:	d1 f7       	brne	.-12     	; 0xb58 <main+0x422>
						_delay_ms(100);
						lcd_clear();
     b64:	27 db       	rcall	.-2482   	; 0x1b4 <_Z9lcd_clearv>
     b66:	88 ee       	ldi	r24, 0xE8	; 232
     b68:	93 e0       	ldi	r25, 0x03	; 3
     b6a:	e0 e9       	ldi	r30, 0x90	; 144
     b6c:	f1 e0       	ldi	r31, 0x01	; 1
     b6e:	31 97       	sbiw	r30, 0x01	; 1
     b70:	f1 f7       	brne	.-4      	; 0xb6e <main+0x438>
     b72:	01 97       	sbiw	r24, 0x01	; 1
     b74:	d1 f7       	brne	.-12     	; 0xb6a <main+0x434>
     b76:	91 e0       	ldi	r25, 0x01	; 1
     b78:	c9 1a       	sub	r12, r25
     b7a:	d1 08       	sbc	r13, r1
     b7c:	f9 f6       	brne	.-66     	; 0xb3c <main+0x406>
						lcd_clear();
					}
				}
				
				if(error_flag){
					for(int i=0;i<3;i++){
     b7e:	10 92 d8 01 	sts	0x01D8, r1	; 0x8001d8 <sum>
						lcd_putsf(0,1,(unsigned char*)str);
						_delay_ms(100);
						lcd_clear();
						_delay_ms(100);
					}
					sum = 0;
     b82:	10 92 d9 01 	sts	0x01D9, r1	; 0x8001d9 <sum+0x1>
     b86:	10 92 da 01 	sts	0x01DA, r1	; 0x8001da <sum+0x2>
     b8a:	10 92 db 01 	sts	0x01DB, r1	; 0x8001db <sum+0x3>
     b8e:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <error_flag>
					error_flag = false;
     b92:	a7 e8       	ldi	r26, 0x87	; 135
				}				
				
				if(key == sw15 || end_flag){
     b94:	aa 16       	cp	r10, r26
     b96:	b1 04       	cpc	r11, r1
     b98:	21 f0       	breq	.+8      	; 0xba2 <main+0x46c>
     b9a:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <end_flag>
     b9e:	88 23       	and	r24, r24
     ba0:	a9 f0       	breq	.+42     	; 0xbcc <main+0x496>
     ba2:	10 92 e1 01 	sts	0x01E1, r1	; 0x8001e1 <mode+0x1>
					mode = CLOCK;
     ba6:	10 92 e0 01 	sts	0x01E0, r1	; 0x8001e0 <mode>
     baa:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <end_time+0x1>
					end_time = 0;
     bae:	10 92 e2 01 	sts	0x01E2, r1	; 0x8001e2 <end_time>
     bb2:	10 92 d8 01 	sts	0x01D8, r1	; 0x8001d8 <sum>
					sum = 0;
     bb6:	10 92 d9 01 	sts	0x01D9, r1	; 0x8001d9 <sum+0x1>
     bba:	10 92 da 01 	sts	0x01DA, r1	; 0x8001da <sum+0x2>
     bbe:	10 92 db 01 	sts	0x01DB, r1	; 0x8001db <sum+0x3>
					endtime_flag = false;
     bc2:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <endtime_flag>
					end_flag = false;
     bc6:	10 92 dc 01 	sts	0x01DC, r1	; 0x8001dc <end_flag>
					break;
				}
				
				sprintf(str,"    %ld",sum);
     bca:	e1 cd       	rjmp	.-1086   	; 0x78e <main+0x58>
     bcc:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <sum+0x3>
     bd0:	8f 93       	push	r24
     bd2:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <sum+0x2>
     bd6:	8f 93       	push	r24
     bd8:	80 91 d9 01 	lds	r24, 0x01D9	; 0x8001d9 <sum+0x1>
     bdc:	8f 93       	push	r24
     bde:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <sum>
     be2:	8f 93       	push	r24
     be4:	9f 92       	push	r9
     be6:	8f 92       	push	r8
     be8:	1f 93       	push	r17
				lcd_putsf(0,1,(unsigned char*)str);
     bea:	0f 93       	push	r16
     bec:	49 d0       	rcall	.+146    	; 0xc80 <sprintf>
     bee:	a8 01       	movw	r20, r16
     bf0:	63 2d       	mov	r22, r3
     bf2:	80 e0       	ldi	r24, 0x00	; 0
				lcd_putsf(0,1,(unsigned char*)str);
			}
		}

		else if(mode == CHANGE){
			while(1){
     bf4:	9d da       	rcall	.-2758   	; 0x130 <_Z9lcd_putsfhhPh>
     bf6:	0f b6       	in	r0, 0x3f	; 63
     bf8:	f8 94       	cli
     bfa:	de bf       	out	0x3e, r29	; 62
     bfc:	0f be       	out	0x3f, r0	; 63
     bfe:	cd bf       	out	0x3d, r28	; 61
				lcd_putsf(0,1,(unsigned char*)str);
				
			}
		}

		else if(mode == TOTAL){
     c00:	43 cf       	rjmp	.-378    	; 0xa88 <main+0x352>
     c02:	04 97       	sbiw	r24, 0x04	; 4
			endtime_flag = true;
     c04:	09 f0       	breq	.+2      	; 0xc08 <main+0x4d2>
     c06:	c3 cd       	rjmp	.-1146   	; 0x78e <main+0x58>
     c08:	81 e0       	ldi	r24, 0x01	; 1
			lcd_clear();
     c0a:	80 93 dd 01 	sts	0x01DD, r24	; 0x8001dd <endtime_flag>
			while(1){
				unsigned int key = my_getkey();
     c0e:	d2 da       	rcall	.-2652   	; 0x1b4 <_Z9lcd_clearv>
     c10:	d8 da       	rcall	.-2640   	; 0x1c2 <_Z9my_getkeyv>
				
				if(key == sw15 || end_flag){
     c12:	87 38       	cpi	r24, 0x87	; 135
     c14:	91 05       	cpc	r25, r1
     c16:	21 f0       	breq	.+8      	; 0xc20 <main+0x4ea>
     c18:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <end_flag>
     c1c:	88 23       	and	r24, r24
					mode = CLOCK;
     c1e:	69 f0       	breq	.+26     	; 0xc3a <main+0x504>
     c20:	10 92 e1 01 	sts	0x01E1, r1	; 0x8001e1 <mode+0x1>
					end_time = 0;
     c24:	10 92 e0 01 	sts	0x01E0, r1	; 0x8001e0 <mode>
     c28:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <end_time+0x1>
					endtime_flag = end_flag = false;
     c2c:	10 92 e2 01 	sts	0x01E2, r1	; 0x8001e2 <end_time>
     c30:	10 92 dc 01 	sts	0x01DC, r1	; 0x8001dc <end_flag>
     c34:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <endtime_flag>
					break;
				}
				
				lcd_putsf(0,0,(unsigned char*)"Total Sales     ");
     c38:	aa cd       	rjmp	.-1196   	; 0x78e <main+0x58>
     c3a:	42 eb       	ldi	r20, 0xB2	; 178
     c3c:	51 e0       	ldi	r21, 0x01	; 1
     c3e:	60 e0       	ldi	r22, 0x00	; 0
     c40:	80 e0       	ldi	r24, 0x00	; 0
				sprintf(str,"= %ld won",total_sale);
     c42:	76 da       	rcall	.-2836   	; 0x130 <_Z9lcd_putsfhhPh>
     c44:	9c 81       	ldd	r25, Y+4	; 0x04
     c46:	9f 93       	push	r25
     c48:	ab 81       	ldd	r26, Y+3	; 0x03
     c4a:	af 93       	push	r26
     c4c:	ba 81       	ldd	r27, Y+2	; 0x02
     c4e:	bf 93       	push	r27
     c50:	29 81       	ldd	r18, Y+1	; 0x01
     c52:	2f 93       	push	r18
     c54:	5f 92       	push	r5
     c56:	4f 92       	push	r4
     c58:	1f 93       	push	r17
     c5a:	0f 93       	push	r16
     c5c:	11 d0       	rcall	.+34     	; 0xc80 <sprintf>
				lcd_putsf(0,1,(unsigned char*)str);
     c5e:	46 2d       	mov	r20, r6
     c60:	57 2d       	mov	r21, r7
     c62:	61 e0       	ldi	r22, 0x01	; 1
     c64:	80 e0       	ldi	r24, 0x00	; 0
     c66:	64 da       	rcall	.-2872   	; 0x130 <_Z9lcd_putsfhhPh>
     c68:	0f b6       	in	r0, 0x3f	; 63
		}

		else if(mode == TOTAL){
			endtime_flag = true;
			lcd_clear();
			while(1){
     c6a:	f8 94       	cli
     c6c:	de bf       	out	0x3e, r29	; 62
     c6e:	0f be       	out	0x3f, r0	; 63
     c70:	cd bf       	out	0x3d, r28	; 61
     c72:	ce cf       	rjmp	.-100    	; 0xc10 <main+0x4da>
     c74:	80 91 df 01 	lds	r24, 0x01DF	; 0x8001df <error_flag>
						endtime_flag = true;
						lcd_clear();
					}
				}
				
				if(error_flag){
     c78:	88 23       	and	r24, r24
     c7a:	09 f4       	brne	.+2      	; 0xc7e <main+0x548>
     c7c:	8a cf       	rjmp	.-236    	; 0xb92 <main+0x45c>
     c7e:	59 cf       	rjmp	.-334    	; 0xb32 <main+0x3fc>

00000c80 <sprintf>:
     c80:	0f 93       	push	r16
     c82:	1f 93       	push	r17
     c84:	cf 93       	push	r28
     c86:	df 93       	push	r29
     c88:	cd b7       	in	r28, 0x3d	; 61
     c8a:	de b7       	in	r29, 0x3e	; 62
     c8c:	2e 97       	sbiw	r28, 0x0e	; 14
     c8e:	0f b6       	in	r0, 0x3f	; 63
     c90:	f8 94       	cli
     c92:	de bf       	out	0x3e, r29	; 62
     c94:	0f be       	out	0x3f, r0	; 63
     c96:	cd bf       	out	0x3d, r28	; 61
     c98:	0d 89       	ldd	r16, Y+21	; 0x15
     c9a:	1e 89       	ldd	r17, Y+22	; 0x16
     c9c:	86 e0       	ldi	r24, 0x06	; 6
     c9e:	8c 83       	std	Y+4, r24	; 0x04
     ca0:	1a 83       	std	Y+2, r17	; 0x02
     ca2:	09 83       	std	Y+1, r16	; 0x01
     ca4:	8f ef       	ldi	r24, 0xFF	; 255
     ca6:	9f e7       	ldi	r25, 0x7F	; 127
     ca8:	9e 83       	std	Y+6, r25	; 0x06
     caa:	8d 83       	std	Y+5, r24	; 0x05
     cac:	ae 01       	movw	r20, r28
     cae:	47 5e       	subi	r20, 0xE7	; 231
     cb0:	5f 4f       	sbci	r21, 0xFF	; 255
     cb2:	6f 89       	ldd	r22, Y+23	; 0x17
     cb4:	78 8d       	ldd	r23, Y+24	; 0x18
     cb6:	ce 01       	movw	r24, r28
     cb8:	01 96       	adiw	r24, 0x01	; 1
     cba:	10 d0       	rcall	.+32     	; 0xcdc <vfprintf>
     cbc:	ef 81       	ldd	r30, Y+7	; 0x07
     cbe:	f8 85       	ldd	r31, Y+8	; 0x08
     cc0:	e0 0f       	add	r30, r16
     cc2:	f1 1f       	adc	r31, r17
     cc4:	10 82       	st	Z, r1
     cc6:	2e 96       	adiw	r28, 0x0e	; 14
     cc8:	0f b6       	in	r0, 0x3f	; 63
     cca:	f8 94       	cli
     ccc:	de bf       	out	0x3e, r29	; 62
     cce:	0f be       	out	0x3f, r0	; 63
     cd0:	cd bf       	out	0x3d, r28	; 61
     cd2:	df 91       	pop	r29
     cd4:	cf 91       	pop	r28
     cd6:	1f 91       	pop	r17
     cd8:	0f 91       	pop	r16
     cda:	08 95       	ret

00000cdc <vfprintf>:
     cdc:	2f 92       	push	r2
     cde:	3f 92       	push	r3
     ce0:	4f 92       	push	r4
     ce2:	5f 92       	push	r5
     ce4:	6f 92       	push	r6
     ce6:	7f 92       	push	r7
     ce8:	8f 92       	push	r8
     cea:	9f 92       	push	r9
     cec:	af 92       	push	r10
     cee:	bf 92       	push	r11
     cf0:	cf 92       	push	r12
     cf2:	df 92       	push	r13
     cf4:	ef 92       	push	r14
     cf6:	ff 92       	push	r15
     cf8:	0f 93       	push	r16
     cfa:	1f 93       	push	r17
     cfc:	cf 93       	push	r28
     cfe:	df 93       	push	r29
     d00:	cd b7       	in	r28, 0x3d	; 61
     d02:	de b7       	in	r29, 0x3e	; 62
     d04:	2b 97       	sbiw	r28, 0x0b	; 11
     d06:	0f b6       	in	r0, 0x3f	; 63
     d08:	f8 94       	cli
     d0a:	de bf       	out	0x3e, r29	; 62
     d0c:	0f be       	out	0x3f, r0	; 63
     d0e:	cd bf       	out	0x3d, r28	; 61
     d10:	6c 01       	movw	r12, r24
     d12:	7b 01       	movw	r14, r22
     d14:	8a 01       	movw	r16, r20
     d16:	fc 01       	movw	r30, r24
     d18:	17 82       	std	Z+7, r1	; 0x07
     d1a:	16 82       	std	Z+6, r1	; 0x06
     d1c:	83 81       	ldd	r24, Z+3	; 0x03
     d1e:	81 ff       	sbrs	r24, 1
     d20:	bf c1       	rjmp	.+894    	; 0x10a0 <vfprintf+0x3c4>
     d22:	ce 01       	movw	r24, r28
     d24:	01 96       	adiw	r24, 0x01	; 1
     d26:	3c 01       	movw	r6, r24
     d28:	f6 01       	movw	r30, r12
     d2a:	93 81       	ldd	r25, Z+3	; 0x03
     d2c:	f7 01       	movw	r30, r14
     d2e:	93 fd       	sbrc	r25, 3
     d30:	85 91       	lpm	r24, Z+
     d32:	93 ff       	sbrs	r25, 3
     d34:	81 91       	ld	r24, Z+
     d36:	7f 01       	movw	r14, r30
     d38:	88 23       	and	r24, r24
     d3a:	09 f4       	brne	.+2      	; 0xd3e <vfprintf+0x62>
     d3c:	ad c1       	rjmp	.+858    	; 0x1098 <vfprintf+0x3bc>
     d3e:	85 32       	cpi	r24, 0x25	; 37
     d40:	39 f4       	brne	.+14     	; 0xd50 <vfprintf+0x74>
     d42:	93 fd       	sbrc	r25, 3
     d44:	85 91       	lpm	r24, Z+
     d46:	93 ff       	sbrs	r25, 3
     d48:	81 91       	ld	r24, Z+
     d4a:	7f 01       	movw	r14, r30
     d4c:	85 32       	cpi	r24, 0x25	; 37
     d4e:	21 f4       	brne	.+8      	; 0xd58 <vfprintf+0x7c>
     d50:	b6 01       	movw	r22, r12
     d52:	90 e0       	ldi	r25, 0x00	; 0
     d54:	d6 d1       	rcall	.+940    	; 0x1102 <fputc>
     d56:	e8 cf       	rjmp	.-48     	; 0xd28 <vfprintf+0x4c>
     d58:	91 2c       	mov	r9, r1
     d5a:	21 2c       	mov	r2, r1
     d5c:	31 2c       	mov	r3, r1
     d5e:	ff e1       	ldi	r31, 0x1F	; 31
     d60:	f3 15       	cp	r31, r3
     d62:	d8 f0       	brcs	.+54     	; 0xd9a <vfprintf+0xbe>
     d64:	8b 32       	cpi	r24, 0x2B	; 43
     d66:	79 f0       	breq	.+30     	; 0xd86 <vfprintf+0xaa>
     d68:	38 f4       	brcc	.+14     	; 0xd78 <vfprintf+0x9c>
     d6a:	80 32       	cpi	r24, 0x20	; 32
     d6c:	79 f0       	breq	.+30     	; 0xd8c <vfprintf+0xb0>
     d6e:	83 32       	cpi	r24, 0x23	; 35
     d70:	a1 f4       	brne	.+40     	; 0xd9a <vfprintf+0xbe>
     d72:	23 2d       	mov	r18, r3
     d74:	20 61       	ori	r18, 0x10	; 16
     d76:	1d c0       	rjmp	.+58     	; 0xdb2 <vfprintf+0xd6>
     d78:	8d 32       	cpi	r24, 0x2D	; 45
     d7a:	61 f0       	breq	.+24     	; 0xd94 <vfprintf+0xb8>
     d7c:	80 33       	cpi	r24, 0x30	; 48
     d7e:	69 f4       	brne	.+26     	; 0xd9a <vfprintf+0xbe>
     d80:	23 2d       	mov	r18, r3
     d82:	21 60       	ori	r18, 0x01	; 1
     d84:	16 c0       	rjmp	.+44     	; 0xdb2 <vfprintf+0xd6>
     d86:	83 2d       	mov	r24, r3
     d88:	82 60       	ori	r24, 0x02	; 2
     d8a:	38 2e       	mov	r3, r24
     d8c:	e3 2d       	mov	r30, r3
     d8e:	e4 60       	ori	r30, 0x04	; 4
     d90:	3e 2e       	mov	r3, r30
     d92:	2a c0       	rjmp	.+84     	; 0xde8 <vfprintf+0x10c>
     d94:	f3 2d       	mov	r31, r3
     d96:	f8 60       	ori	r31, 0x08	; 8
     d98:	1d c0       	rjmp	.+58     	; 0xdd4 <vfprintf+0xf8>
     d9a:	37 fc       	sbrc	r3, 7
     d9c:	2d c0       	rjmp	.+90     	; 0xdf8 <vfprintf+0x11c>
     d9e:	20 ed       	ldi	r18, 0xD0	; 208
     da0:	28 0f       	add	r18, r24
     da2:	2a 30       	cpi	r18, 0x0A	; 10
     da4:	40 f0       	brcs	.+16     	; 0xdb6 <vfprintf+0xda>
     da6:	8e 32       	cpi	r24, 0x2E	; 46
     da8:	b9 f4       	brne	.+46     	; 0xdd8 <vfprintf+0xfc>
     daa:	36 fc       	sbrc	r3, 6
     dac:	75 c1       	rjmp	.+746    	; 0x1098 <vfprintf+0x3bc>
     dae:	23 2d       	mov	r18, r3
     db0:	20 64       	ori	r18, 0x40	; 64
     db2:	32 2e       	mov	r3, r18
     db4:	19 c0       	rjmp	.+50     	; 0xde8 <vfprintf+0x10c>
     db6:	36 fe       	sbrs	r3, 6
     db8:	06 c0       	rjmp	.+12     	; 0xdc6 <vfprintf+0xea>
     dba:	8a e0       	ldi	r24, 0x0A	; 10
     dbc:	98 9e       	mul	r9, r24
     dbe:	20 0d       	add	r18, r0
     dc0:	11 24       	eor	r1, r1
     dc2:	92 2e       	mov	r9, r18
     dc4:	11 c0       	rjmp	.+34     	; 0xde8 <vfprintf+0x10c>
     dc6:	ea e0       	ldi	r30, 0x0A	; 10
     dc8:	2e 9e       	mul	r2, r30
     dca:	20 0d       	add	r18, r0
     dcc:	11 24       	eor	r1, r1
     dce:	22 2e       	mov	r2, r18
     dd0:	f3 2d       	mov	r31, r3
     dd2:	f0 62       	ori	r31, 0x20	; 32
     dd4:	3f 2e       	mov	r3, r31
     dd6:	08 c0       	rjmp	.+16     	; 0xde8 <vfprintf+0x10c>
     dd8:	8c 36       	cpi	r24, 0x6C	; 108
     dda:	21 f4       	brne	.+8      	; 0xde4 <vfprintf+0x108>
     ddc:	83 2d       	mov	r24, r3
     dde:	80 68       	ori	r24, 0x80	; 128
     de0:	38 2e       	mov	r3, r24
     de2:	02 c0       	rjmp	.+4      	; 0xde8 <vfprintf+0x10c>
     de4:	88 36       	cpi	r24, 0x68	; 104
     de6:	41 f4       	brne	.+16     	; 0xdf8 <vfprintf+0x11c>
     de8:	f7 01       	movw	r30, r14
     dea:	93 fd       	sbrc	r25, 3
     dec:	85 91       	lpm	r24, Z+
     dee:	93 ff       	sbrs	r25, 3
     df0:	81 91       	ld	r24, Z+
     df2:	7f 01       	movw	r14, r30
     df4:	81 11       	cpse	r24, r1
     df6:	b3 cf       	rjmp	.-154    	; 0xd5e <vfprintf+0x82>
     df8:	98 2f       	mov	r25, r24
     dfa:	9f 7d       	andi	r25, 0xDF	; 223
     dfc:	95 54       	subi	r25, 0x45	; 69
     dfe:	93 30       	cpi	r25, 0x03	; 3
     e00:	28 f4       	brcc	.+10     	; 0xe0c <vfprintf+0x130>
     e02:	0c 5f       	subi	r16, 0xFC	; 252
     e04:	1f 4f       	sbci	r17, 0xFF	; 255
     e06:	9f e3       	ldi	r25, 0x3F	; 63
     e08:	99 83       	std	Y+1, r25	; 0x01
     e0a:	0d c0       	rjmp	.+26     	; 0xe26 <vfprintf+0x14a>
     e0c:	83 36       	cpi	r24, 0x63	; 99
     e0e:	31 f0       	breq	.+12     	; 0xe1c <vfprintf+0x140>
     e10:	83 37       	cpi	r24, 0x73	; 115
     e12:	71 f0       	breq	.+28     	; 0xe30 <vfprintf+0x154>
     e14:	83 35       	cpi	r24, 0x53	; 83
     e16:	09 f0       	breq	.+2      	; 0xe1a <vfprintf+0x13e>
     e18:	55 c0       	rjmp	.+170    	; 0xec4 <vfprintf+0x1e8>
     e1a:	20 c0       	rjmp	.+64     	; 0xe5c <vfprintf+0x180>
     e1c:	f8 01       	movw	r30, r16
     e1e:	80 81       	ld	r24, Z
     e20:	89 83       	std	Y+1, r24	; 0x01
     e22:	0e 5f       	subi	r16, 0xFE	; 254
     e24:	1f 4f       	sbci	r17, 0xFF	; 255
     e26:	88 24       	eor	r8, r8
     e28:	83 94       	inc	r8
     e2a:	91 2c       	mov	r9, r1
     e2c:	53 01       	movw	r10, r6
     e2e:	12 c0       	rjmp	.+36     	; 0xe54 <vfprintf+0x178>
     e30:	28 01       	movw	r4, r16
     e32:	f2 e0       	ldi	r31, 0x02	; 2
     e34:	4f 0e       	add	r4, r31
     e36:	51 1c       	adc	r5, r1
     e38:	f8 01       	movw	r30, r16
     e3a:	a0 80       	ld	r10, Z
     e3c:	b1 80       	ldd	r11, Z+1	; 0x01
     e3e:	36 fe       	sbrs	r3, 6
     e40:	03 c0       	rjmp	.+6      	; 0xe48 <vfprintf+0x16c>
     e42:	69 2d       	mov	r22, r9
     e44:	70 e0       	ldi	r23, 0x00	; 0
     e46:	02 c0       	rjmp	.+4      	; 0xe4c <vfprintf+0x170>
     e48:	6f ef       	ldi	r22, 0xFF	; 255
     e4a:	7f ef       	ldi	r23, 0xFF	; 255
     e4c:	c5 01       	movw	r24, r10
     e4e:	4e d1       	rcall	.+668    	; 0x10ec <strnlen>
     e50:	4c 01       	movw	r8, r24
     e52:	82 01       	movw	r16, r4
     e54:	f3 2d       	mov	r31, r3
     e56:	ff 77       	andi	r31, 0x7F	; 127
     e58:	3f 2e       	mov	r3, r31
     e5a:	15 c0       	rjmp	.+42     	; 0xe86 <vfprintf+0x1aa>
     e5c:	28 01       	movw	r4, r16
     e5e:	22 e0       	ldi	r18, 0x02	; 2
     e60:	42 0e       	add	r4, r18
     e62:	51 1c       	adc	r5, r1
     e64:	f8 01       	movw	r30, r16
     e66:	a0 80       	ld	r10, Z
     e68:	b1 80       	ldd	r11, Z+1	; 0x01
     e6a:	36 fe       	sbrs	r3, 6
     e6c:	03 c0       	rjmp	.+6      	; 0xe74 <vfprintf+0x198>
     e6e:	69 2d       	mov	r22, r9
     e70:	70 e0       	ldi	r23, 0x00	; 0
     e72:	02 c0       	rjmp	.+4      	; 0xe78 <vfprintf+0x19c>
     e74:	6f ef       	ldi	r22, 0xFF	; 255
     e76:	7f ef       	ldi	r23, 0xFF	; 255
     e78:	c5 01       	movw	r24, r10
     e7a:	2d d1       	rcall	.+602    	; 0x10d6 <strnlen_P>
     e7c:	4c 01       	movw	r8, r24
     e7e:	f3 2d       	mov	r31, r3
     e80:	f0 68       	ori	r31, 0x80	; 128
     e82:	3f 2e       	mov	r3, r31
     e84:	82 01       	movw	r16, r4
     e86:	33 fc       	sbrc	r3, 3
     e88:	19 c0       	rjmp	.+50     	; 0xebc <vfprintf+0x1e0>
     e8a:	82 2d       	mov	r24, r2
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	88 16       	cp	r8, r24
     e90:	99 06       	cpc	r9, r25
     e92:	a0 f4       	brcc	.+40     	; 0xebc <vfprintf+0x1e0>
     e94:	b6 01       	movw	r22, r12
     e96:	80 e2       	ldi	r24, 0x20	; 32
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	33 d1       	rcall	.+614    	; 0x1102 <fputc>
     e9c:	2a 94       	dec	r2
     e9e:	f5 cf       	rjmp	.-22     	; 0xe8a <vfprintf+0x1ae>
     ea0:	f5 01       	movw	r30, r10
     ea2:	37 fc       	sbrc	r3, 7
     ea4:	85 91       	lpm	r24, Z+
     ea6:	37 fe       	sbrs	r3, 7
     ea8:	81 91       	ld	r24, Z+
     eaa:	5f 01       	movw	r10, r30
     eac:	b6 01       	movw	r22, r12
     eae:	90 e0       	ldi	r25, 0x00	; 0
     eb0:	28 d1       	rcall	.+592    	; 0x1102 <fputc>
     eb2:	21 10       	cpse	r2, r1
     eb4:	2a 94       	dec	r2
     eb6:	21 e0       	ldi	r18, 0x01	; 1
     eb8:	82 1a       	sub	r8, r18
     eba:	91 08       	sbc	r9, r1
     ebc:	81 14       	cp	r8, r1
     ebe:	91 04       	cpc	r9, r1
     ec0:	79 f7       	brne	.-34     	; 0xea0 <vfprintf+0x1c4>
     ec2:	e1 c0       	rjmp	.+450    	; 0x1086 <vfprintf+0x3aa>
     ec4:	84 36       	cpi	r24, 0x64	; 100
     ec6:	11 f0       	breq	.+4      	; 0xecc <vfprintf+0x1f0>
     ec8:	89 36       	cpi	r24, 0x69	; 105
     eca:	39 f5       	brne	.+78     	; 0xf1a <vfprintf+0x23e>
     ecc:	f8 01       	movw	r30, r16
     ece:	37 fe       	sbrs	r3, 7
     ed0:	07 c0       	rjmp	.+14     	; 0xee0 <vfprintf+0x204>
     ed2:	60 81       	ld	r22, Z
     ed4:	71 81       	ldd	r23, Z+1	; 0x01
     ed6:	82 81       	ldd	r24, Z+2	; 0x02
     ed8:	93 81       	ldd	r25, Z+3	; 0x03
     eda:	0c 5f       	subi	r16, 0xFC	; 252
     edc:	1f 4f       	sbci	r17, 0xFF	; 255
     ede:	08 c0       	rjmp	.+16     	; 0xef0 <vfprintf+0x214>
     ee0:	60 81       	ld	r22, Z
     ee2:	71 81       	ldd	r23, Z+1	; 0x01
     ee4:	07 2e       	mov	r0, r23
     ee6:	00 0c       	add	r0, r0
     ee8:	88 0b       	sbc	r24, r24
     eea:	99 0b       	sbc	r25, r25
     eec:	0e 5f       	subi	r16, 0xFE	; 254
     eee:	1f 4f       	sbci	r17, 0xFF	; 255
     ef0:	f3 2d       	mov	r31, r3
     ef2:	ff 76       	andi	r31, 0x6F	; 111
     ef4:	3f 2e       	mov	r3, r31
     ef6:	97 ff       	sbrs	r25, 7
     ef8:	09 c0       	rjmp	.+18     	; 0xf0c <vfprintf+0x230>
     efa:	90 95       	com	r25
     efc:	80 95       	com	r24
     efe:	70 95       	com	r23
     f00:	61 95       	neg	r22
     f02:	7f 4f       	sbci	r23, 0xFF	; 255
     f04:	8f 4f       	sbci	r24, 0xFF	; 255
     f06:	9f 4f       	sbci	r25, 0xFF	; 255
     f08:	f0 68       	ori	r31, 0x80	; 128
     f0a:	3f 2e       	mov	r3, r31
     f0c:	2a e0       	ldi	r18, 0x0A	; 10
     f0e:	30 e0       	ldi	r19, 0x00	; 0
     f10:	a3 01       	movw	r20, r6
     f12:	33 d1       	rcall	.+614    	; 0x117a <__ultoa_invert>
     f14:	88 2e       	mov	r8, r24
     f16:	86 18       	sub	r8, r6
     f18:	44 c0       	rjmp	.+136    	; 0xfa2 <vfprintf+0x2c6>
     f1a:	85 37       	cpi	r24, 0x75	; 117
     f1c:	31 f4       	brne	.+12     	; 0xf2a <vfprintf+0x24e>
     f1e:	23 2d       	mov	r18, r3
     f20:	2f 7e       	andi	r18, 0xEF	; 239
     f22:	b2 2e       	mov	r11, r18
     f24:	2a e0       	ldi	r18, 0x0A	; 10
     f26:	30 e0       	ldi	r19, 0x00	; 0
     f28:	25 c0       	rjmp	.+74     	; 0xf74 <vfprintf+0x298>
     f2a:	93 2d       	mov	r25, r3
     f2c:	99 7f       	andi	r25, 0xF9	; 249
     f2e:	b9 2e       	mov	r11, r25
     f30:	8f 36       	cpi	r24, 0x6F	; 111
     f32:	c1 f0       	breq	.+48     	; 0xf64 <vfprintf+0x288>
     f34:	18 f4       	brcc	.+6      	; 0xf3c <vfprintf+0x260>
     f36:	88 35       	cpi	r24, 0x58	; 88
     f38:	79 f0       	breq	.+30     	; 0xf58 <vfprintf+0x27c>
     f3a:	ae c0       	rjmp	.+348    	; 0x1098 <vfprintf+0x3bc>
     f3c:	80 37       	cpi	r24, 0x70	; 112
     f3e:	19 f0       	breq	.+6      	; 0xf46 <vfprintf+0x26a>
     f40:	88 37       	cpi	r24, 0x78	; 120
     f42:	21 f0       	breq	.+8      	; 0xf4c <vfprintf+0x270>
     f44:	a9 c0       	rjmp	.+338    	; 0x1098 <vfprintf+0x3bc>
     f46:	e9 2f       	mov	r30, r25
     f48:	e0 61       	ori	r30, 0x10	; 16
     f4a:	be 2e       	mov	r11, r30
     f4c:	b4 fe       	sbrs	r11, 4
     f4e:	0d c0       	rjmp	.+26     	; 0xf6a <vfprintf+0x28e>
     f50:	fb 2d       	mov	r31, r11
     f52:	f4 60       	ori	r31, 0x04	; 4
     f54:	bf 2e       	mov	r11, r31
     f56:	09 c0       	rjmp	.+18     	; 0xf6a <vfprintf+0x28e>
     f58:	34 fe       	sbrs	r3, 4
     f5a:	0a c0       	rjmp	.+20     	; 0xf70 <vfprintf+0x294>
     f5c:	29 2f       	mov	r18, r25
     f5e:	26 60       	ori	r18, 0x06	; 6
     f60:	b2 2e       	mov	r11, r18
     f62:	06 c0       	rjmp	.+12     	; 0xf70 <vfprintf+0x294>
     f64:	28 e0       	ldi	r18, 0x08	; 8
     f66:	30 e0       	ldi	r19, 0x00	; 0
     f68:	05 c0       	rjmp	.+10     	; 0xf74 <vfprintf+0x298>
     f6a:	20 e1       	ldi	r18, 0x10	; 16
     f6c:	30 e0       	ldi	r19, 0x00	; 0
     f6e:	02 c0       	rjmp	.+4      	; 0xf74 <vfprintf+0x298>
     f70:	20 e1       	ldi	r18, 0x10	; 16
     f72:	32 e0       	ldi	r19, 0x02	; 2
     f74:	f8 01       	movw	r30, r16
     f76:	b7 fe       	sbrs	r11, 7
     f78:	07 c0       	rjmp	.+14     	; 0xf88 <vfprintf+0x2ac>
     f7a:	60 81       	ld	r22, Z
     f7c:	71 81       	ldd	r23, Z+1	; 0x01
     f7e:	82 81       	ldd	r24, Z+2	; 0x02
     f80:	93 81       	ldd	r25, Z+3	; 0x03
     f82:	0c 5f       	subi	r16, 0xFC	; 252
     f84:	1f 4f       	sbci	r17, 0xFF	; 255
     f86:	06 c0       	rjmp	.+12     	; 0xf94 <vfprintf+0x2b8>
     f88:	60 81       	ld	r22, Z
     f8a:	71 81       	ldd	r23, Z+1	; 0x01
     f8c:	80 e0       	ldi	r24, 0x00	; 0
     f8e:	90 e0       	ldi	r25, 0x00	; 0
     f90:	0e 5f       	subi	r16, 0xFE	; 254
     f92:	1f 4f       	sbci	r17, 0xFF	; 255
     f94:	a3 01       	movw	r20, r6
     f96:	f1 d0       	rcall	.+482    	; 0x117a <__ultoa_invert>
     f98:	88 2e       	mov	r8, r24
     f9a:	86 18       	sub	r8, r6
     f9c:	fb 2d       	mov	r31, r11
     f9e:	ff 77       	andi	r31, 0x7F	; 127
     fa0:	3f 2e       	mov	r3, r31
     fa2:	36 fe       	sbrs	r3, 6
     fa4:	0d c0       	rjmp	.+26     	; 0xfc0 <vfprintf+0x2e4>
     fa6:	23 2d       	mov	r18, r3
     fa8:	2e 7f       	andi	r18, 0xFE	; 254
     faa:	a2 2e       	mov	r10, r18
     fac:	89 14       	cp	r8, r9
     fae:	58 f4       	brcc	.+22     	; 0xfc6 <vfprintf+0x2ea>
     fb0:	34 fe       	sbrs	r3, 4
     fb2:	0b c0       	rjmp	.+22     	; 0xfca <vfprintf+0x2ee>
     fb4:	32 fc       	sbrc	r3, 2
     fb6:	09 c0       	rjmp	.+18     	; 0xfca <vfprintf+0x2ee>
     fb8:	83 2d       	mov	r24, r3
     fba:	8e 7e       	andi	r24, 0xEE	; 238
     fbc:	a8 2e       	mov	r10, r24
     fbe:	05 c0       	rjmp	.+10     	; 0xfca <vfprintf+0x2ee>
     fc0:	b8 2c       	mov	r11, r8
     fc2:	a3 2c       	mov	r10, r3
     fc4:	03 c0       	rjmp	.+6      	; 0xfcc <vfprintf+0x2f0>
     fc6:	b8 2c       	mov	r11, r8
     fc8:	01 c0       	rjmp	.+2      	; 0xfcc <vfprintf+0x2f0>
     fca:	b9 2c       	mov	r11, r9
     fcc:	a4 fe       	sbrs	r10, 4
     fce:	0f c0       	rjmp	.+30     	; 0xfee <vfprintf+0x312>
     fd0:	fe 01       	movw	r30, r28
     fd2:	e8 0d       	add	r30, r8
     fd4:	f1 1d       	adc	r31, r1
     fd6:	80 81       	ld	r24, Z
     fd8:	80 33       	cpi	r24, 0x30	; 48
     fda:	21 f4       	brne	.+8      	; 0xfe4 <vfprintf+0x308>
     fdc:	9a 2d       	mov	r25, r10
     fde:	99 7e       	andi	r25, 0xE9	; 233
     fe0:	a9 2e       	mov	r10, r25
     fe2:	09 c0       	rjmp	.+18     	; 0xff6 <vfprintf+0x31a>
     fe4:	a2 fe       	sbrs	r10, 2
     fe6:	06 c0       	rjmp	.+12     	; 0xff4 <vfprintf+0x318>
     fe8:	b3 94       	inc	r11
     fea:	b3 94       	inc	r11
     fec:	04 c0       	rjmp	.+8      	; 0xff6 <vfprintf+0x31a>
     fee:	8a 2d       	mov	r24, r10
     ff0:	86 78       	andi	r24, 0x86	; 134
     ff2:	09 f0       	breq	.+2      	; 0xff6 <vfprintf+0x31a>
     ff4:	b3 94       	inc	r11
     ff6:	a3 fc       	sbrc	r10, 3
     ff8:	10 c0       	rjmp	.+32     	; 0x101a <vfprintf+0x33e>
     ffa:	a0 fe       	sbrs	r10, 0
     ffc:	06 c0       	rjmp	.+12     	; 0x100a <vfprintf+0x32e>
     ffe:	b2 14       	cp	r11, r2
    1000:	80 f4       	brcc	.+32     	; 0x1022 <vfprintf+0x346>
    1002:	28 0c       	add	r2, r8
    1004:	92 2c       	mov	r9, r2
    1006:	9b 18       	sub	r9, r11
    1008:	0d c0       	rjmp	.+26     	; 0x1024 <vfprintf+0x348>
    100a:	b2 14       	cp	r11, r2
    100c:	58 f4       	brcc	.+22     	; 0x1024 <vfprintf+0x348>
    100e:	b6 01       	movw	r22, r12
    1010:	80 e2       	ldi	r24, 0x20	; 32
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	76 d0       	rcall	.+236    	; 0x1102 <fputc>
    1016:	b3 94       	inc	r11
    1018:	f8 cf       	rjmp	.-16     	; 0x100a <vfprintf+0x32e>
    101a:	b2 14       	cp	r11, r2
    101c:	18 f4       	brcc	.+6      	; 0x1024 <vfprintf+0x348>
    101e:	2b 18       	sub	r2, r11
    1020:	02 c0       	rjmp	.+4      	; 0x1026 <vfprintf+0x34a>
    1022:	98 2c       	mov	r9, r8
    1024:	21 2c       	mov	r2, r1
    1026:	a4 fe       	sbrs	r10, 4
    1028:	0f c0       	rjmp	.+30     	; 0x1048 <vfprintf+0x36c>
    102a:	b6 01       	movw	r22, r12
    102c:	80 e3       	ldi	r24, 0x30	; 48
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	68 d0       	rcall	.+208    	; 0x1102 <fputc>
    1032:	a2 fe       	sbrs	r10, 2
    1034:	16 c0       	rjmp	.+44     	; 0x1062 <vfprintf+0x386>
    1036:	a1 fc       	sbrc	r10, 1
    1038:	03 c0       	rjmp	.+6      	; 0x1040 <vfprintf+0x364>
    103a:	88 e7       	ldi	r24, 0x78	; 120
    103c:	90 e0       	ldi	r25, 0x00	; 0
    103e:	02 c0       	rjmp	.+4      	; 0x1044 <vfprintf+0x368>
    1040:	88 e5       	ldi	r24, 0x58	; 88
    1042:	90 e0       	ldi	r25, 0x00	; 0
    1044:	b6 01       	movw	r22, r12
    1046:	0c c0       	rjmp	.+24     	; 0x1060 <vfprintf+0x384>
    1048:	8a 2d       	mov	r24, r10
    104a:	86 78       	andi	r24, 0x86	; 134
    104c:	51 f0       	breq	.+20     	; 0x1062 <vfprintf+0x386>
    104e:	a1 fe       	sbrs	r10, 1
    1050:	02 c0       	rjmp	.+4      	; 0x1056 <vfprintf+0x37a>
    1052:	8b e2       	ldi	r24, 0x2B	; 43
    1054:	01 c0       	rjmp	.+2      	; 0x1058 <vfprintf+0x37c>
    1056:	80 e2       	ldi	r24, 0x20	; 32
    1058:	a7 fc       	sbrc	r10, 7
    105a:	8d e2       	ldi	r24, 0x2D	; 45
    105c:	b6 01       	movw	r22, r12
    105e:	90 e0       	ldi	r25, 0x00	; 0
    1060:	50 d0       	rcall	.+160    	; 0x1102 <fputc>
    1062:	89 14       	cp	r8, r9
    1064:	30 f4       	brcc	.+12     	; 0x1072 <vfprintf+0x396>
    1066:	b6 01       	movw	r22, r12
    1068:	80 e3       	ldi	r24, 0x30	; 48
    106a:	90 e0       	ldi	r25, 0x00	; 0
    106c:	4a d0       	rcall	.+148    	; 0x1102 <fputc>
    106e:	9a 94       	dec	r9
    1070:	f8 cf       	rjmp	.-16     	; 0x1062 <vfprintf+0x386>
    1072:	8a 94       	dec	r8
    1074:	f3 01       	movw	r30, r6
    1076:	e8 0d       	add	r30, r8
    1078:	f1 1d       	adc	r31, r1
    107a:	80 81       	ld	r24, Z
    107c:	b6 01       	movw	r22, r12
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	40 d0       	rcall	.+128    	; 0x1102 <fputc>
    1082:	81 10       	cpse	r8, r1
    1084:	f6 cf       	rjmp	.-20     	; 0x1072 <vfprintf+0x396>
    1086:	22 20       	and	r2, r2
    1088:	09 f4       	brne	.+2      	; 0x108c <vfprintf+0x3b0>
    108a:	4e ce       	rjmp	.-868    	; 0xd28 <vfprintf+0x4c>
    108c:	b6 01       	movw	r22, r12
    108e:	80 e2       	ldi	r24, 0x20	; 32
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	37 d0       	rcall	.+110    	; 0x1102 <fputc>
    1094:	2a 94       	dec	r2
    1096:	f7 cf       	rjmp	.-18     	; 0x1086 <vfprintf+0x3aa>
    1098:	f6 01       	movw	r30, r12
    109a:	86 81       	ldd	r24, Z+6	; 0x06
    109c:	97 81       	ldd	r25, Z+7	; 0x07
    109e:	02 c0       	rjmp	.+4      	; 0x10a4 <vfprintf+0x3c8>
    10a0:	8f ef       	ldi	r24, 0xFF	; 255
    10a2:	9f ef       	ldi	r25, 0xFF	; 255
    10a4:	2b 96       	adiw	r28, 0x0b	; 11
    10a6:	0f b6       	in	r0, 0x3f	; 63
    10a8:	f8 94       	cli
    10aa:	de bf       	out	0x3e, r29	; 62
    10ac:	0f be       	out	0x3f, r0	; 63
    10ae:	cd bf       	out	0x3d, r28	; 61
    10b0:	df 91       	pop	r29
    10b2:	cf 91       	pop	r28
    10b4:	1f 91       	pop	r17
    10b6:	0f 91       	pop	r16
    10b8:	ff 90       	pop	r15
    10ba:	ef 90       	pop	r14
    10bc:	df 90       	pop	r13
    10be:	cf 90       	pop	r12
    10c0:	bf 90       	pop	r11
    10c2:	af 90       	pop	r10
    10c4:	9f 90       	pop	r9
    10c6:	8f 90       	pop	r8
    10c8:	7f 90       	pop	r7
    10ca:	6f 90       	pop	r6
    10cc:	5f 90       	pop	r5
    10ce:	4f 90       	pop	r4
    10d0:	3f 90       	pop	r3
    10d2:	2f 90       	pop	r2
    10d4:	08 95       	ret

000010d6 <strnlen_P>:
    10d6:	fc 01       	movw	r30, r24
    10d8:	05 90       	lpm	r0, Z+
    10da:	61 50       	subi	r22, 0x01	; 1
    10dc:	70 40       	sbci	r23, 0x00	; 0
    10de:	01 10       	cpse	r0, r1
    10e0:	d8 f7       	brcc	.-10     	; 0x10d8 <strnlen_P+0x2>
    10e2:	80 95       	com	r24
    10e4:	90 95       	com	r25
    10e6:	8e 0f       	add	r24, r30
    10e8:	9f 1f       	adc	r25, r31
    10ea:	08 95       	ret

000010ec <strnlen>:
    10ec:	fc 01       	movw	r30, r24
    10ee:	61 50       	subi	r22, 0x01	; 1
    10f0:	70 40       	sbci	r23, 0x00	; 0
    10f2:	01 90       	ld	r0, Z+
    10f4:	01 10       	cpse	r0, r1
    10f6:	d8 f7       	brcc	.-10     	; 0x10ee <strnlen+0x2>
    10f8:	80 95       	com	r24
    10fa:	90 95       	com	r25
    10fc:	8e 0f       	add	r24, r30
    10fe:	9f 1f       	adc	r25, r31
    1100:	08 95       	ret

00001102 <fputc>:
    1102:	0f 93       	push	r16
    1104:	1f 93       	push	r17
    1106:	cf 93       	push	r28
    1108:	df 93       	push	r29
    110a:	fb 01       	movw	r30, r22
    110c:	23 81       	ldd	r18, Z+3	; 0x03
    110e:	21 fd       	sbrc	r18, 1
    1110:	03 c0       	rjmp	.+6      	; 0x1118 <fputc+0x16>
    1112:	8f ef       	ldi	r24, 0xFF	; 255
    1114:	9f ef       	ldi	r25, 0xFF	; 255
    1116:	2c c0       	rjmp	.+88     	; 0x1170 <fputc+0x6e>
    1118:	22 ff       	sbrs	r18, 2
    111a:	16 c0       	rjmp	.+44     	; 0x1148 <fputc+0x46>
    111c:	46 81       	ldd	r20, Z+6	; 0x06
    111e:	57 81       	ldd	r21, Z+7	; 0x07
    1120:	24 81       	ldd	r18, Z+4	; 0x04
    1122:	35 81       	ldd	r19, Z+5	; 0x05
    1124:	42 17       	cp	r20, r18
    1126:	53 07       	cpc	r21, r19
    1128:	44 f4       	brge	.+16     	; 0x113a <fputc+0x38>
    112a:	a0 81       	ld	r26, Z
    112c:	b1 81       	ldd	r27, Z+1	; 0x01
    112e:	9d 01       	movw	r18, r26
    1130:	2f 5f       	subi	r18, 0xFF	; 255
    1132:	3f 4f       	sbci	r19, 0xFF	; 255
    1134:	31 83       	std	Z+1, r19	; 0x01
    1136:	20 83       	st	Z, r18
    1138:	8c 93       	st	X, r24
    113a:	26 81       	ldd	r18, Z+6	; 0x06
    113c:	37 81       	ldd	r19, Z+7	; 0x07
    113e:	2f 5f       	subi	r18, 0xFF	; 255
    1140:	3f 4f       	sbci	r19, 0xFF	; 255
    1142:	37 83       	std	Z+7, r19	; 0x07
    1144:	26 83       	std	Z+6, r18	; 0x06
    1146:	14 c0       	rjmp	.+40     	; 0x1170 <fputc+0x6e>
    1148:	8b 01       	movw	r16, r22
    114a:	ec 01       	movw	r28, r24
    114c:	fb 01       	movw	r30, r22
    114e:	00 84       	ldd	r0, Z+8	; 0x08
    1150:	f1 85       	ldd	r31, Z+9	; 0x09
    1152:	e0 2d       	mov	r30, r0
    1154:	09 95       	icall
    1156:	89 2b       	or	r24, r25
    1158:	e1 f6       	brne	.-72     	; 0x1112 <fputc+0x10>
    115a:	d8 01       	movw	r26, r16
    115c:	16 96       	adiw	r26, 0x06	; 6
    115e:	8d 91       	ld	r24, X+
    1160:	9c 91       	ld	r25, X
    1162:	17 97       	sbiw	r26, 0x07	; 7
    1164:	01 96       	adiw	r24, 0x01	; 1
    1166:	17 96       	adiw	r26, 0x07	; 7
    1168:	9c 93       	st	X, r25
    116a:	8e 93       	st	-X, r24
    116c:	16 97       	sbiw	r26, 0x06	; 6
    116e:	ce 01       	movw	r24, r28
    1170:	df 91       	pop	r29
    1172:	cf 91       	pop	r28
    1174:	1f 91       	pop	r17
    1176:	0f 91       	pop	r16
    1178:	08 95       	ret

0000117a <__ultoa_invert>:
    117a:	fa 01       	movw	r30, r20
    117c:	aa 27       	eor	r26, r26
    117e:	28 30       	cpi	r18, 0x08	; 8
    1180:	51 f1       	breq	.+84     	; 0x11d6 <__ultoa_invert+0x5c>
    1182:	20 31       	cpi	r18, 0x10	; 16
    1184:	81 f1       	breq	.+96     	; 0x11e6 <__ultoa_invert+0x6c>
    1186:	e8 94       	clt
    1188:	6f 93       	push	r22
    118a:	6e 7f       	andi	r22, 0xFE	; 254
    118c:	6e 5f       	subi	r22, 0xFE	; 254
    118e:	7f 4f       	sbci	r23, 0xFF	; 255
    1190:	8f 4f       	sbci	r24, 0xFF	; 255
    1192:	9f 4f       	sbci	r25, 0xFF	; 255
    1194:	af 4f       	sbci	r26, 0xFF	; 255
    1196:	b1 e0       	ldi	r27, 0x01	; 1
    1198:	3e d0       	rcall	.+124    	; 0x1216 <__ultoa_invert+0x9c>
    119a:	b4 e0       	ldi	r27, 0x04	; 4
    119c:	3c d0       	rcall	.+120    	; 0x1216 <__ultoa_invert+0x9c>
    119e:	67 0f       	add	r22, r23
    11a0:	78 1f       	adc	r23, r24
    11a2:	89 1f       	adc	r24, r25
    11a4:	9a 1f       	adc	r25, r26
    11a6:	a1 1d       	adc	r26, r1
    11a8:	68 0f       	add	r22, r24
    11aa:	79 1f       	adc	r23, r25
    11ac:	8a 1f       	adc	r24, r26
    11ae:	91 1d       	adc	r25, r1
    11b0:	a1 1d       	adc	r26, r1
    11b2:	6a 0f       	add	r22, r26
    11b4:	71 1d       	adc	r23, r1
    11b6:	81 1d       	adc	r24, r1
    11b8:	91 1d       	adc	r25, r1
    11ba:	a1 1d       	adc	r26, r1
    11bc:	20 d0       	rcall	.+64     	; 0x11fe <__ultoa_invert+0x84>
    11be:	09 f4       	brne	.+2      	; 0x11c2 <__ultoa_invert+0x48>
    11c0:	68 94       	set
    11c2:	3f 91       	pop	r19
    11c4:	2a e0       	ldi	r18, 0x0A	; 10
    11c6:	26 9f       	mul	r18, r22
    11c8:	11 24       	eor	r1, r1
    11ca:	30 19       	sub	r19, r0
    11cc:	30 5d       	subi	r19, 0xD0	; 208
    11ce:	31 93       	st	Z+, r19
    11d0:	de f6       	brtc	.-74     	; 0x1188 <__ultoa_invert+0xe>
    11d2:	cf 01       	movw	r24, r30
    11d4:	08 95       	ret
    11d6:	46 2f       	mov	r20, r22
    11d8:	47 70       	andi	r20, 0x07	; 7
    11da:	40 5d       	subi	r20, 0xD0	; 208
    11dc:	41 93       	st	Z+, r20
    11de:	b3 e0       	ldi	r27, 0x03	; 3
    11e0:	0f d0       	rcall	.+30     	; 0x1200 <__ultoa_invert+0x86>
    11e2:	c9 f7       	brne	.-14     	; 0x11d6 <__ultoa_invert+0x5c>
    11e4:	f6 cf       	rjmp	.-20     	; 0x11d2 <__ultoa_invert+0x58>
    11e6:	46 2f       	mov	r20, r22
    11e8:	4f 70       	andi	r20, 0x0F	; 15
    11ea:	40 5d       	subi	r20, 0xD0	; 208
    11ec:	4a 33       	cpi	r20, 0x3A	; 58
    11ee:	18 f0       	brcs	.+6      	; 0x11f6 <__ultoa_invert+0x7c>
    11f0:	49 5d       	subi	r20, 0xD9	; 217
    11f2:	31 fd       	sbrc	r19, 1
    11f4:	40 52       	subi	r20, 0x20	; 32
    11f6:	41 93       	st	Z+, r20
    11f8:	02 d0       	rcall	.+4      	; 0x11fe <__ultoa_invert+0x84>
    11fa:	a9 f7       	brne	.-22     	; 0x11e6 <__ultoa_invert+0x6c>
    11fc:	ea cf       	rjmp	.-44     	; 0x11d2 <__ultoa_invert+0x58>
    11fe:	b4 e0       	ldi	r27, 0x04	; 4
    1200:	a6 95       	lsr	r26
    1202:	97 95       	ror	r25
    1204:	87 95       	ror	r24
    1206:	77 95       	ror	r23
    1208:	67 95       	ror	r22
    120a:	ba 95       	dec	r27
    120c:	c9 f7       	brne	.-14     	; 0x1200 <__ultoa_invert+0x86>
    120e:	00 97       	sbiw	r24, 0x00	; 0
    1210:	61 05       	cpc	r22, r1
    1212:	71 05       	cpc	r23, r1
    1214:	08 95       	ret
    1216:	9b 01       	movw	r18, r22
    1218:	ac 01       	movw	r20, r24
    121a:	0a 2e       	mov	r0, r26
    121c:	06 94       	lsr	r0
    121e:	57 95       	ror	r21
    1220:	47 95       	ror	r20
    1222:	37 95       	ror	r19
    1224:	27 95       	ror	r18
    1226:	ba 95       	dec	r27
    1228:	c9 f7       	brne	.-14     	; 0x121c <__ultoa_invert+0xa2>
    122a:	62 0f       	add	r22, r18
    122c:	73 1f       	adc	r23, r19
    122e:	84 1f       	adc	r24, r20
    1230:	95 1f       	adc	r25, r21
    1232:	a0 1d       	adc	r26, r0
    1234:	08 95       	ret

00001236 <_exit>:
    1236:	f8 94       	cli

00001238 <__stop_program>:
    1238:	ff cf       	rjmp	.-2      	; 0x1238 <__stop_program>
